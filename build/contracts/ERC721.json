{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "contracts/token/erc721/IERC721.sol",
    "13": "contracts/token/erc721/IERC721Metadata.sol",
    "14": "contracts/token/erc721/IERC721Receiver.sol",
    "15": "contracts/utils/Address.sol",
    "16": "contracts/utils/Context.sol",
    "18": "contracts/utils/Strings.sol",
    "4": "contracts/token/erc165/ERC165.sol",
    "5": "contracts/token/erc165/IERC165.sol",
    "9": "contracts/token/erc721/ERC721.sol"
  },
  "ast": {
    "absolutePath": "contracts/token/erc721/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        3262
      ],
      "Context": [
        3284
      ],
      "ERC165": [
        943
      ],
      "ERC721": [
        2435
      ],
      "IERC165": [
        955
      ],
      "IERC721": [
        2889
      ],
      "IERC721Metadata": [
        2947
      ],
      "IERC721Receiver": [
        2965
      ],
      "Strings": [
        3592
      ]
    },
    "id": 2436,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1606,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "92:23:9"
      },
      {
        "absolutePath": "contracts/token/erc721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 1607,
        "nodeType": "ImportDirective",
        "scope": 2436,
        "sourceUnit": 2890,
        "src": "117:23:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/token/erc721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 1608,
        "nodeType": "ImportDirective",
        "scope": 2436,
        "sourceUnit": 2966,
        "src": "141:31:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/token/erc721/IERC721Metadata.sol",
        "file": "./IERC721Metadata.sol",
        "id": 1609,
        "nodeType": "ImportDirective",
        "scope": 2436,
        "sourceUnit": 2948,
        "src": "173:31:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 1610,
        "nodeType": "ImportDirective",
        "scope": 2436,
        "sourceUnit": 3263,
        "src": "205:33:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 1611,
        "nodeType": "ImportDirective",
        "scope": 2436,
        "sourceUnit": 3285,
        "src": "239:33:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 1612,
        "nodeType": "ImportDirective",
        "scope": 2436,
        "sourceUnit": 3593,
        "src": "273:33:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/token/erc165/ERC165.sol",
        "file": "../erc165/ERC165.sol",
        "id": 1613,
        "nodeType": "ImportDirective",
        "scope": 2436,
        "sourceUnit": 944,
        "src": "307:30:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1615,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3284,
              "src": "605:7:9"
            },
            "id": 1616,
            "nodeType": "InheritanceSpecifier",
            "src": "605:7:9"
          },
          {
            "baseName": {
              "id": 1617,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 943,
              "src": "614:6:9"
            },
            "id": 1618,
            "nodeType": "InheritanceSpecifier",
            "src": "614:6:9"
          },
          {
            "baseName": {
              "id": 1619,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2889,
              "src": "622:7:9"
            },
            "id": 1620,
            "nodeType": "InheritanceSpecifier",
            "src": "622:7:9"
          },
          {
            "baseName": {
              "id": 1621,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2947,
              "src": "631:15:9"
            },
            "id": 1622,
            "nodeType": "InheritanceSpecifier",
            "src": "631:15:9"
          }
        ],
        "contractDependencies": [
          943,
          955,
          2889,
          2947,
          3284
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1614,
          "nodeType": "StructuredDocumentation",
          "src": "339:246:9",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 2435,
        "linearizedBaseContracts": [
          2435,
          2947,
          2889,
          943,
          955,
          3284
        ],
        "name": "ERC721",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1625,
            "libraryName": {
              "id": 1623,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3262,
              "src": "659:7:9"
            },
            "nodeType": "UsingForDirective",
            "src": "653:26:9",
            "typeName": {
              "id": 1624,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "671:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 1628,
            "libraryName": {
              "id": 1626,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3592,
              "src": "690:7:9"
            },
            "nodeType": "UsingForDirective",
            "src": "684:26:9",
            "typeName": {
              "id": 1627,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "702:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1630,
            "mutability": "mutable",
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 2435,
            "src": "734:20:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1629,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "734:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1632,
            "mutability": "mutable",
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 2435,
            "src": "781:22:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1631,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "781:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1636,
            "mutability": "mutable",
            "name": "_owners",
            "nodeType": "VariableDeclaration",
            "scope": 2435,
            "src": "856:43:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 1635,
              "keyType": {
                "id": 1633,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "864:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "856:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 1634,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "875:7:9",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1640,
            "mutability": "mutable",
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "scope": 2435,
            "src": "950:45:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1639,
              "keyType": {
                "id": 1637,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "958:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "950:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1638,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "969:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1644,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nodeType": "VariableDeclaration",
            "scope": 2435,
            "src": "1051:51:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 1643,
              "keyType": {
                "id": 1641,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1059:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1051:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 1642,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1070:7:9",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1650,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nodeType": "VariableDeclaration",
            "scope": 2435,
            "src": "1157:71:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 1649,
              "keyType": {
                "id": 1645,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1165:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1157:44:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 1648,
                "keyType": {
                  "id": 1646,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1184:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1176:24:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 1647,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1195:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1666,
              "nodeType": "Block",
              "src": "1404:57:9",
              "statements": [
                {
                  "expression": {
                    "id": 1660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1658,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1630,
                      "src": "1414:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1659,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1653,
                      "src": "1422:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1414:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1661,
                  "nodeType": "ExpressionStatement",
                  "src": "1414:13:9"
                },
                {
                  "expression": {
                    "id": 1664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1662,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1632,
                      "src": "1437:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1663,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1655,
                      "src": "1447:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1437:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1665,
                  "nodeType": "ExpressionStatement",
                  "src": "1437:17:9"
                }
              ]
            },
            "documentation": {
              "id": 1651,
              "nodeType": "StructuredDocumentation",
              "src": "1235:108:9",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 1667,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1653,
                  "mutability": "mutable",
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "1360:19:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1652,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1655,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "1381:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1654,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1381:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1359:44:9"
            },
            "returnParameters": {
              "id": 1657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1404:0:9"
            },
            "scope": 2435,
            "src": "1348:113:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              942,
              954
            ],
            "body": {
              "id": 1697,
              "nodeType": "Block",
              "src": "1636:192:9",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 1683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1678,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1670,
                          "src": "1665:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1680,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2889,
                                "src": "1685:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$2889_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$2889_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 1679,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1680:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1680:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$2889",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 1682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1680:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1665:40:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 1689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1684,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1670,
                          "src": "1721:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1686,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2947,
                                "src": "1741:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2947_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2947_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 1685,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1736:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1736:21:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$2947",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 1688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1736:33:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1721:48:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1665:104:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1693,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1670,
                          "src": "1809:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 1691,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1785:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$2435_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 1692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 942,
                        "src": "1785:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 1694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1785:36:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1665:156:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1677,
                  "id": 1696,
                  "nodeType": "Return",
                  "src": "1646:175:9"
                }
              ]
            },
            "documentation": {
              "id": 1668,
              "nodeType": "StructuredDocumentation",
              "src": "1467:56:9",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 1698,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1674,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1672,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 943,
                  "src": "1604:6:9"
                },
                {
                  "id": 1673,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 955,
                  "src": "1612:7:9"
                }
              ],
              "src": "1595:25:9"
            },
            "parameters": {
              "id": 1671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1670,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1698,
                  "src": "1555:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1669,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1555:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1554:20:9"
            },
            "returnParameters": {
              "id": 1677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1676,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1698,
                  "src": "1630:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1675,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1630:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1629:6:9"
            },
            "scope": 2435,
            "src": "1528:300:9",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2814
            ],
            "body": {
              "id": 1721,
              "nodeType": "Block",
              "src": "1968:124:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1708,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1701,
                          "src": "1986:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2003:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1710,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1995:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1709,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1995:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1995:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1986:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 1714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2007:44:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 1707,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1978:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1978:74:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1716,
                  "nodeType": "ExpressionStatement",
                  "src": "1978:74:9"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1717,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1640,
                      "src": "2069:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1719,
                    "indexExpression": {
                      "id": 1718,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1701,
                      "src": "2079:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2069:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1706,
                  "id": 1720,
                  "nodeType": "Return",
                  "src": "2062:23:9"
                }
              ]
            },
            "documentation": {
              "id": 1699,
              "nodeType": "StructuredDocumentation",
              "src": "1834:48:9",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 1722,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1703,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1941:8:9"
            },
            "parameters": {
              "id": 1702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1701,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1722,
                  "src": "1906:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1906:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1905:15:9"
            },
            "returnParameters": {
              "id": 1706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1705,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1722,
                  "src": "1959:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1704,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1959:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1958:9:9"
            },
            "scope": 2435,
            "src": "1887:205:9",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2822
            ],
            "body": {
              "id": 1749,
              "nodeType": "Block",
              "src": "2230:154:9",
              "statements": [
                {
                  "assignments": [
                    1732
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1732,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 1749,
                      "src": "2240:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1731,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2240:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1736,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1733,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1636,
                      "src": "2256:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 1735,
                    "indexExpression": {
                      "id": 1734,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1725,
                      "src": "2264:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2256:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2240:32:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1738,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1732,
                          "src": "2290:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2307:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2299:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1739,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2299:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2299:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2290:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2311:43:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 1737,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2282:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2282:73:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1746,
                  "nodeType": "ExpressionStatement",
                  "src": "2282:73:9"
                },
                {
                  "expression": {
                    "id": 1747,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1732,
                    "src": "2372:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1730,
                  "id": 1748,
                  "nodeType": "Return",
                  "src": "2365:12:9"
                }
              ]
            },
            "documentation": {
              "id": 1723,
              "nodeType": "StructuredDocumentation",
              "src": "2098:46:9",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 1750,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1727,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2203:8:9"
            },
            "parameters": {
              "id": 1726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1725,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1750,
                  "src": "2166:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2166:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2165:17:9"
            },
            "returnParameters": {
              "id": 1730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1729,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1750,
                  "src": "2221:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2221:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2220:9:9"
            },
            "scope": 2435,
            "src": "2149:235:9",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2932
            ],
            "body": {
              "id": 1759,
              "nodeType": "Block",
              "src": "2515:29:9",
              "statements": [
                {
                  "expression": {
                    "id": 1757,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1630,
                    "src": "2532:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1756,
                  "id": 1758,
                  "nodeType": "Return",
                  "src": "2525:12:9"
                }
              ]
            },
            "documentation": {
              "id": 1751,
              "nodeType": "StructuredDocumentation",
              "src": "2390:51:9",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 1760,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1753,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2482:8:9"
            },
            "parameters": {
              "id": 1752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2459:2:9"
            },
            "returnParameters": {
              "id": 1756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1755,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "2500:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1754,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2500:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2499:15:9"
            },
            "scope": 2435,
            "src": "2446:98:9",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2938
            ],
            "body": {
              "id": 1769,
              "nodeType": "Block",
              "src": "2679:31:9",
              "statements": [
                {
                  "expression": {
                    "id": 1767,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1632,
                    "src": "2696:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1766,
                  "id": 1768,
                  "nodeType": "Return",
                  "src": "2689:14:9"
                }
              ]
            },
            "documentation": {
              "id": 1761,
              "nodeType": "StructuredDocumentation",
              "src": "2550:53:9",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 1770,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1763,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2646:8:9"
            },
            "parameters": {
              "id": 1762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2623:2:9"
            },
            "returnParameters": {
              "id": 1766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1765,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1770,
                  "src": "2664:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1764,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2664:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2663:15:9"
            },
            "scope": 2435,
            "src": "2608:102:9",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2946
            ],
            "body": {
              "id": 1811,
              "nodeType": "Block",
              "src": "2864:241:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1781,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1773,
                            "src": "2890:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1780,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2043,
                          "src": "2882:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2882:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2900:49:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 1779,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2874:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2874:76:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1785,
                  "nodeType": "ExpressionStatement",
                  "src": "2874:76:9"
                },
                {
                  "assignments": [
                    1787
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1787,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nodeType": "VariableDeclaration",
                      "scope": 1811,
                      "src": "2961:21:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1786,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2961:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1790,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1788,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1821,
                      "src": "2985:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 1789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2985:10:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2961:34:9"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1793,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1787,
                              "src": "3018:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3012:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 1791,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3012:5:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3012:14:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 1795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3012:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3036:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3012:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 1808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3096:2:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 1809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3012:86:9",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1802,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1787,
                              "src": "3064:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1803,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1773,
                                  "src": "3073:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1804,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3474,
                                "src": "3073:16:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 1805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3073:18:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 1800,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3047:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3047:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3047:45:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 1799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3040:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 1798,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3040:6:9",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3040:53:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1778,
                  "id": 1810,
                  "nodeType": "Return",
                  "src": "3005:93:9"
                }
              ]
            },
            "documentation": {
              "id": 1771,
              "nodeType": "StructuredDocumentation",
              "src": "2716:55:9",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 1812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1775,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2831:8:9"
            },
            "parameters": {
              "id": 1774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1773,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1812,
                  "src": "2794:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2794:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2793:17:9"
            },
            "returnParameters": {
              "id": 1778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1777,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1812,
                  "src": "2849:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1776,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2849:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2848:15:9"
            },
            "scope": 2435,
            "src": "2776:329:9",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1820,
              "nodeType": "Block",
              "src": "3412:26:9",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 1818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3429:2:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 1817,
                  "id": 1819,
                  "nodeType": "Return",
                  "src": "3422:9:9"
                }
              ]
            },
            "documentation": {
              "id": 1813,
              "nodeType": "StructuredDocumentation",
              "src": "3111:230:9",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
            },
            "id": 1821,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3363:2:9"
            },
            "returnParameters": {
              "id": 1817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1816,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1821,
                  "src": "3397:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1815,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3397:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3396:15:9"
            },
            "scope": 2435,
            "src": "3346:92:9",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2850
            ],
            "body": {
              "id": 1863,
              "nodeType": "Block",
              "src": "3565:331:9",
              "statements": [
                {
                  "assignments": [
                    1831
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1831,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 1863,
                      "src": "3575:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1830,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3575:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1836,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1834,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1826,
                        "src": "3606:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1832,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2435,
                        "src": "3591:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$2435_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 1833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1750,
                      "src": "3591:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3591:23:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3575:39:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1838,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1824,
                          "src": "3632:2:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1839,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1831,
                          "src": "3638:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3632:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 1841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3645:35:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 1837,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3624:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3624:57:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1843,
                  "nodeType": "ExpressionStatement",
                  "src": "3624:57:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1845,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3274,
                              "src": "3713:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3713:12:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1847,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1831,
                            "src": "3729:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3713:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1850,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1831,
                              "src": "3755:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1851,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3274,
                                "src": "3762:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3762:12:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1849,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1920,
                            "src": "3738:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 1853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3738:37:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3713:62:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 1855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3789:58:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 1844,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3692:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3692:165:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1857,
                  "nodeType": "ExpressionStatement",
                  "src": "3692:165:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1859,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1824,
                        "src": "3877:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1860,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1826,
                        "src": "3881:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1858,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2329,
                      "src": "3868:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3868:21:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1862,
                  "nodeType": "ExpressionStatement",
                  "src": "3868:21:9"
                }
              ]
            },
            "documentation": {
              "id": 1822,
              "nodeType": "StructuredDocumentation",
              "src": "3444:46:9",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 1864,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1828,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3556:8:9"
            },
            "parameters": {
              "id": 1827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1824,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1864,
                  "src": "3512:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3512:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1826,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1864,
                  "src": "3524:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3524:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3511:29:9"
            },
            "returnParameters": {
              "id": 1829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3565:0:9"
            },
            "scope": 2435,
            "src": "3495:401:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2858
            ],
            "body": {
              "id": 1884,
              "nodeType": "Block",
              "src": "4042:132:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1875,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1867,
                            "src": "4068:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1874,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2043,
                          "src": "4060:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4060:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4078:46:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 1873,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4052:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4052:73:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1879,
                  "nodeType": "ExpressionStatement",
                  "src": "4052:73:9"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1880,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1644,
                      "src": "4143:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 1882,
                    "indexExpression": {
                      "id": 1881,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1867,
                      "src": "4159:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4143:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1872,
                  "id": 1883,
                  "nodeType": "Return",
                  "src": "4136:31:9"
                }
              ]
            },
            "documentation": {
              "id": 1865,
              "nodeType": "StructuredDocumentation",
              "src": "3902:50:9",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 1885,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1869,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4015:8:9"
            },
            "parameters": {
              "id": 1868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1867,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1885,
                  "src": "3978:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3978:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3977:17:9"
            },
            "returnParameters": {
              "id": 1872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1871,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1885,
                  "src": "4033:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4033:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4032:9:9"
            },
            "scope": 2435,
            "src": "3957:217:9",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2866
            ],
            "body": {
              "id": 1901,
              "nodeType": "Block",
              "src": "4325:69:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1895,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3274,
                          "src": "4354:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4354:12:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1897,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1888,
                        "src": "4368:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1898,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1890,
                        "src": "4378:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1894,
                      "name": "_setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2361,
                      "src": "4335:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 1899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4335:52:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1900,
                  "nodeType": "ExpressionStatement",
                  "src": "4335:52:9"
                }
              ]
            },
            "documentation": {
              "id": 1886,
              "nodeType": "StructuredDocumentation",
              "src": "4180:56:9",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 1902,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1892,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4316:8:9"
            },
            "parameters": {
              "id": 1891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1888,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1902,
                  "src": "4268:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1887,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4268:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1890,
                  "mutability": "mutable",
                  "name": "approved",
                  "nodeType": "VariableDeclaration",
                  "scope": 1902,
                  "src": "4286:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1889,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4286:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4267:33:9"
            },
            "returnParameters": {
              "id": 1893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4325:0:9"
            },
            "scope": 2435,
            "src": "4241:153:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2876
            ],
            "body": {
              "id": 1919,
              "nodeType": "Block",
              "src": "4563:59:9",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1913,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1650,
                        "src": "4580:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 1915,
                      "indexExpression": {
                        "id": 1914,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1905,
                        "src": "4599:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4580:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1917,
                    "indexExpression": {
                      "id": 1916,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1907,
                      "src": "4606:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4580:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1912,
                  "id": 1918,
                  "nodeType": "Return",
                  "src": "4573:42:9"
                }
              ]
            },
            "documentation": {
              "id": 1903,
              "nodeType": "StructuredDocumentation",
              "src": "4400:55:9",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 1920,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1909,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4539:8:9"
            },
            "parameters": {
              "id": 1908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1905,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1920,
                  "src": "4486:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4486:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1907,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1920,
                  "src": "4501:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4501:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4485:33:9"
            },
            "returnParameters": {
              "id": 1912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1911,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1920,
                  "src": "4557:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1910,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4557:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4556:6:9"
            },
            "scope": 2435,
            "src": "4460:162:9",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2842
            ],
            "body": {
              "id": 1946,
              "nodeType": "Block",
              "src": "4803:211:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1933,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3274,
                              "src": "4892:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4892:12:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1935,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1927,
                            "src": "4906:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1932,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2084,
                          "src": "4873:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 1936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4873:41:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 1937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4916:51:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 1931,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4865:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4865:103:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1939,
                  "nodeType": "ExpressionStatement",
                  "src": "4865:103:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1941,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1923,
                        "src": "4989:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1942,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1925,
                        "src": "4995:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1943,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1927,
                        "src": "4999:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1940,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2305,
                      "src": "4979:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4979:28:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1945,
                  "nodeType": "ExpressionStatement",
                  "src": "4979:28:9"
                }
              ]
            },
            "documentation": {
              "id": 1921,
              "nodeType": "StructuredDocumentation",
              "src": "4628:51:9",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 1947,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1929,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4794:8:9"
            },
            "parameters": {
              "id": 1928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1923,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "4715:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4715:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1925,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "4737:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1924,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4737:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1927,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1947,
                  "src": "4757:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4757:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4705:73:9"
            },
            "returnParameters": {
              "id": 1930,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4803:0:9"
            },
            "scope": 2435,
            "src": "4684:330:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2832
            ],
            "body": {
              "id": 1965,
              "nodeType": "Block",
              "src": "5203:56:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1959,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1950,
                        "src": "5230:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1960,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1952,
                        "src": "5236:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1961,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1954,
                        "src": "5240:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 1962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5249:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 1958,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1966,
                        1996
                      ],
                      "referencedDeclaration": 1996,
                      "src": "5213:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 1963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5213:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1964,
                  "nodeType": "ExpressionStatement",
                  "src": "5213:39:9"
                }
              ]
            },
            "documentation": {
              "id": 1948,
              "nodeType": "StructuredDocumentation",
              "src": "5020:55:9",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 1966,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1956,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5194:8:9"
            },
            "parameters": {
              "id": 1955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1950,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1966,
                  "src": "5115:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1949,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5115:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1952,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1966,
                  "src": "5137:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1951,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5137:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1954,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1966,
                  "src": "5157:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1953,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5157:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5105:73:9"
            },
            "returnParameters": {
              "id": 1957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5203:0:9"
            },
            "scope": 2435,
            "src": "5080:179:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2888
            ],
            "body": {
              "id": 1995,
              "nodeType": "Block",
              "src": "5476:169:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1981,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3274,
                              "src": "5513:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5513:12:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1983,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1973,
                            "src": "5527:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1980,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2084,
                          "src": "5494:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 1984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5494:41:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 1985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5537:51:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 1979,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5486:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5486:103:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1987,
                  "nodeType": "ExpressionStatement",
                  "src": "5486:103:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1989,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1969,
                        "src": "5613:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1990,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1971,
                        "src": "5619:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1991,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1973,
                        "src": "5623:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1992,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1975,
                        "src": "5632:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1988,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2025,
                      "src": "5599:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 1993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5599:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1994,
                  "nodeType": "ExpressionStatement",
                  "src": "5599:39:9"
                }
              ]
            },
            "documentation": {
              "id": 1967,
              "nodeType": "StructuredDocumentation",
              "src": "5265:55:9",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 1996,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1977,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5467:8:9"
            },
            "parameters": {
              "id": 1976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1969,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1996,
                  "src": "5360:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5360:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1971,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1996,
                  "src": "5382:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5382:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1973,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1996,
                  "src": "5402:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5402:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1975,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1996,
                  "src": "5427:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1974,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5427:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5350:101:9"
            },
            "returnParameters": {
              "id": 1978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5476:0:9"
            },
            "scope": 2435,
            "src": "5325:320:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2024,
              "nodeType": "Block",
              "src": "6648:166:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2009,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1999,
                        "src": "6668:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2010,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2001,
                        "src": "6674:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2011,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2003,
                        "src": "6678:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2008,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2305,
                      "src": "6658:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6658:28:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2013,
                  "nodeType": "ExpressionStatement",
                  "src": "6658:28:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2016,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1999,
                            "src": "6727:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2017,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2001,
                            "src": "6733:2:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2018,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2003,
                            "src": "6737:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2019,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2005,
                            "src": "6746:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2015,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2423,
                          "src": "6704:22:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 2020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6704:48:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 2021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6754:52:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 2014,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6696:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6696:111:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2023,
                  "nodeType": "ExpressionStatement",
                  "src": "6696:111:9"
                }
              ]
            },
            "documentation": {
              "id": 1997,
              "nodeType": "StructuredDocumentation",
              "src": "5651:851:9",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 2025,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1999,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2025,
                  "src": "6539:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6539:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2001,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2025,
                  "src": "6561:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2000,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6561:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2003,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2025,
                  "src": "6581:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2002,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6581:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2005,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2025,
                  "src": "6606:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2004,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6606:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6529:101:9"
            },
            "returnParameters": {
              "id": 2007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6648:0:9"
            },
            "scope": 2435,
            "src": "6507:307:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2042,
              "nodeType": "Block",
              "src": "7188:54:9",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 2033,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1636,
                        "src": "7205:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2035,
                      "indexExpression": {
                        "id": 2034,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2028,
                        "src": "7213:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7205:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7233:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7225:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2036,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7225:7:9",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7225:10:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7205:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2032,
                  "id": 2041,
                  "nodeType": "Return",
                  "src": "7198:37:9"
                }
              ]
            },
            "documentation": {
              "id": 2026,
              "nodeType": "StructuredDocumentation",
              "src": "6820:292:9",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 2043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2028,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2043,
                  "src": "7134:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7134:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7133:17:9"
            },
            "returnParameters": {
              "id": 2032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2031,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2043,
                  "src": "7182:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2030,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7182:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7181:6:9"
            },
            "scope": 2435,
            "src": "7117:125:9",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2083,
              "nodeType": "Block",
              "src": "7499:245:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2055,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2048,
                            "src": "7525:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2054,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2043,
                          "src": "7517:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7517:16:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 2057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7535:46:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 2053,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7509:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7509:73:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2059,
                  "nodeType": "ExpressionStatement",
                  "src": "7509:73:9"
                },
                {
                  "assignments": [
                    2061
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2061,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 2083,
                      "src": "7592:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2060,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7592:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2066,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2064,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2048,
                        "src": "7623:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2062,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2435,
                        "src": "7608:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$2435_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 2063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1750,
                      "src": "7608:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7608:23:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7592:39:9"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2067,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2046,
                              "src": "7649:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2068,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2061,
                              "src": "7660:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7649:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 2071,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2048,
                                  "src": "7681:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2070,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1885,
                                "src": "7669:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 2072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7669:20:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2073,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2046,
                              "src": "7693:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7669:31:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7649:51:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2077,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2061,
                              "src": "7721:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2078,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2046,
                              "src": "7728:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2076,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1920,
                            "src": "7704:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 2079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7704:32:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7649:87:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 2081,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7648:89:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2052,
                  "id": 2082,
                  "nodeType": "Return",
                  "src": "7641:96:9"
                }
              ]
            },
            "documentation": {
              "id": 2044,
              "nodeType": "StructuredDocumentation",
              "src": "7248:147:9",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 2084,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2046,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2084,
                  "src": "7428:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7428:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2048,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2084,
                  "src": "7445:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2047,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7445:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7427:34:9"
            },
            "returnParameters": {
              "id": 2052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2051,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2084,
                  "src": "7493:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2050,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7493:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7492:6:9"
            },
            "scope": 2435,
            "src": "7400:344:9",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2098,
              "nodeType": "Block",
              "src": "8139:43:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2093,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2087,
                        "src": "8159:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2094,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2089,
                        "src": "8163:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8172:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2092,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2099,
                        2128
                      ],
                      "referencedDeclaration": 2128,
                      "src": "8149:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 2096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8149:26:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2097,
                  "nodeType": "ExpressionStatement",
                  "src": "8149:26:9"
                }
              ]
            },
            "documentation": {
              "id": 2085,
              "nodeType": "StructuredDocumentation",
              "src": "7750:319:9",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 2099,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2087,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2099,
                  "src": "8093:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8093:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2089,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2099,
                  "src": "8105:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8105:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8092:29:9"
            },
            "returnParameters": {
              "id": 2091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8139:0:9"
            },
            "scope": 2435,
            "src": "8074:108:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2127,
              "nodeType": "Block",
              "src": "8518:196:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2110,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2102,
                        "src": "8534:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2111,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2104,
                        "src": "8538:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2109,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2185,
                      "src": "8528:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8528:18:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2113,
                  "nodeType": "ExpressionStatement",
                  "src": "8528:18:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8608:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8600:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2116,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8600:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8600:10:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2120,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2102,
                            "src": "8612:2:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2121,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2104,
                            "src": "8616:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2122,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2106,
                            "src": "8625:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2115,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2423,
                          "src": "8577:22:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 2123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8577:54:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 2124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8645:52:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 2114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8556:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8556:151:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2126,
                  "nodeType": "ExpressionStatement",
                  "src": "8556:151:9"
                }
              ]
            },
            "documentation": {
              "id": 2100,
              "nodeType": "StructuredDocumentation",
              "src": "8188:210:9",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 2128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2102,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2128,
                  "src": "8431:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8431:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2104,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2128,
                  "src": "8451:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8451:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2106,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2128,
                  "src": "8476:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2105,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8476:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8421:79:9"
            },
            "returnParameters": {
              "id": 2108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8518:0:9"
            },
            "scope": 2435,
            "src": "8403:311:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2184,
              "nodeType": "Block",
              "src": "9097:311:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2137,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2131,
                          "src": "9115:2:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9129:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9121:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2138,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9121:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9121:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9115:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 2143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9133:34:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 2136,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9107:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9107:61:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2145,
                  "nodeType": "ExpressionStatement",
                  "src": "9107:61:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9186:17:9",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 2148,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2133,
                              "src": "9195:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2147,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2043,
                            "src": "9187:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 2149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9187:16:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 2151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9205:30:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 2146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9178:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9178:58:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2153,
                  "nodeType": "ExpressionStatement",
                  "src": "9178:58:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9276:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9268:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2155,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9268:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9268:10:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2159,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2131,
                        "src": "9280:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2160,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2133,
                        "src": "9284:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2154,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2434,
                      "src": "9247:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9247:45:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2162,
                  "nodeType": "ExpressionStatement",
                  "src": "9247:45:9"
                },
                {
                  "expression": {
                    "id": 2167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2163,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1640,
                        "src": "9303:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2165,
                      "indexExpression": {
                        "id": 2164,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2131,
                        "src": "9313:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9303:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 2166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9320:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9303:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2168,
                  "nodeType": "ExpressionStatement",
                  "src": "9303:18:9"
                },
                {
                  "expression": {
                    "id": 2173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2169,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1636,
                        "src": "9331:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2171,
                      "indexExpression": {
                        "id": 2170,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2133,
                        "src": "9339:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9331:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2172,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2131,
                      "src": "9350:2:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9331:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2174,
                  "nodeType": "ExpressionStatement",
                  "src": "9331:21:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9385:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9377:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2176,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9377:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9377:10:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2180,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2131,
                        "src": "9389:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2181,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2133,
                        "src": "9393:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2175,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2788,
                      "src": "9368:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9368:33:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2183,
                  "nodeType": "EmitStatement",
                  "src": "9363:38:9"
                }
              ]
            },
            "documentation": {
              "id": 2129,
              "nodeType": "StructuredDocumentation",
              "src": "8720:311:9",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 2185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2131,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2185,
                  "src": "9051:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9051:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2133,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2185,
                  "src": "9063:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2132,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9063:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9050:29:9"
            },
            "returnParameters": {
              "id": 2135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9097:0:9"
            },
            "scope": 2435,
            "src": "9036:372:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2235,
              "nodeType": "Block",
              "src": "9674:299:9",
              "statements": [
                {
                  "assignments": [
                    2192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2192,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 2235,
                      "src": "9684:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2191,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9684:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2197,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2195,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2188,
                        "src": "9715:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2193,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2435,
                        "src": "9700:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$2435_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 2194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1750,
                      "src": "9700:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9700:23:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9684:39:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2199,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2192,
                        "src": "9755:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9770:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9762:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2200,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9762:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9762:10:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2204,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2188,
                        "src": "9774:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2198,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2434,
                      "src": "9734:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9734:48:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2206,
                  "nodeType": "ExpressionStatement",
                  "src": "9734:48:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9837:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9829:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2208,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9829:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9829:10:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2212,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2188,
                        "src": "9841:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2207,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2329,
                      "src": "9820:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9820:29:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2214,
                  "nodeType": "ExpressionStatement",
                  "src": "9820:29:9"
                },
                {
                  "expression": {
                    "id": 2219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2215,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1640,
                        "src": "9860:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2217,
                      "indexExpression": {
                        "id": 2216,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2192,
                        "src": "9870:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9860:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 2218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9880:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9860:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2220,
                  "nodeType": "ExpressionStatement",
                  "src": "9860:21:9"
                },
                {
                  "expression": {
                    "id": 2224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9891:23:9",
                    "subExpression": {
                      "baseExpression": {
                        "id": 2221,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1636,
                        "src": "9898:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2223,
                      "indexExpression": {
                        "id": 2222,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2188,
                        "src": "9906:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9898:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2225,
                  "nodeType": "ExpressionStatement",
                  "src": "9891:23:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2227,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2192,
                        "src": "9939:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9954:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9946:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2228,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9946:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9946:10:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2232,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2188,
                        "src": "9958:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2226,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2788,
                      "src": "9930:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9930:36:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2234,
                  "nodeType": "EmitStatement",
                  "src": "9925:41:9"
                }
              ]
            },
            "documentation": {
              "id": 2186,
              "nodeType": "StructuredDocumentation",
              "src": "9414:206:9",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 2236,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2188,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2236,
                  "src": "9640:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9640:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9639:17:9"
            },
            "returnParameters": {
              "id": 2190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9674:0:9"
            },
            "scope": 2435,
            "src": "9625:348:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2304,
              "nodeType": "Block",
              "src": "10406:451:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2249,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2243,
                              "src": "10439:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2247,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2435,
                              "src": "10424:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$2435_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 2248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1750,
                            "src": "10424:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 2250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10424:23:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2251,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2239,
                          "src": "10451:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10424:31:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 2253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10457:43:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 2246,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10416:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10416:85:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2255,
                  "nodeType": "ExpressionStatement",
                  "src": "10416:85:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2257,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2241,
                          "src": "10519:2:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10533:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10525:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2258,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10525:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10525:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10519:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 2263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10537:38:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 2256,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10511:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10511:65:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2265,
                  "nodeType": "ExpressionStatement",
                  "src": "10511:65:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2267,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2239,
                        "src": "10608:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2268,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2241,
                        "src": "10614:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2269,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2243,
                        "src": "10618:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2266,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2434,
                      "src": "10587:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10587:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2271,
                  "nodeType": "ExpressionStatement",
                  "src": "10587:39:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10705:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10697:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2273,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10697:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10697:10:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2277,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2243,
                        "src": "10709:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2272,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2329,
                      "src": "10688:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10688:29:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2279,
                  "nodeType": "ExpressionStatement",
                  "src": "10688:29:9"
                },
                {
                  "expression": {
                    "id": 2284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2280,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1640,
                        "src": "10728:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2282,
                      "indexExpression": {
                        "id": 2281,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2239,
                        "src": "10738:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10728:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 2283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10747:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10728:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2285,
                  "nodeType": "ExpressionStatement",
                  "src": "10728:20:9"
                },
                {
                  "expression": {
                    "id": 2290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2286,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1640,
                        "src": "10758:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2288,
                      "indexExpression": {
                        "id": 2287,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2241,
                        "src": "10768:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10758:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 2289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10775:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10758:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2291,
                  "nodeType": "ExpressionStatement",
                  "src": "10758:18:9"
                },
                {
                  "expression": {
                    "id": 2296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2292,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1636,
                        "src": "10786:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2294,
                      "indexExpression": {
                        "id": 2293,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2243,
                        "src": "10794:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10786:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2295,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2241,
                      "src": "10805:2:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10786:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2297,
                  "nodeType": "ExpressionStatement",
                  "src": "10786:21:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2299,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2239,
                        "src": "10832:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2300,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2241,
                        "src": "10838:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2301,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2243,
                        "src": "10842:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2298,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2788,
                      "src": "10823:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10823:27:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2303,
                  "nodeType": "EmitStatement",
                  "src": "10818:32:9"
                }
              ]
            },
            "documentation": {
              "id": 2237,
              "nodeType": "StructuredDocumentation",
              "src": "9979:313:9",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 2305,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2239,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2305,
                  "src": "10325:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2238,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10325:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2241,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2305,
                  "src": "10347:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2240,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10347:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2243,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2305,
                  "src": "10367:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10367:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10315:73:9"
            },
            "returnParameters": {
              "id": 2245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10406:0:9"
            },
            "scope": 2435,
            "src": "10297:560:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2328,
              "nodeType": "Block",
              "src": "11032:107:9",
              "statements": [
                {
                  "expression": {
                    "id": 2317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2313,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1644,
                        "src": "11042:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2315,
                      "indexExpression": {
                        "id": 2314,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2310,
                        "src": "11058:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11042:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2316,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2308,
                      "src": "11069:2:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11042:29:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2318,
                  "nodeType": "ExpressionStatement",
                  "src": "11042:29:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2322,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2310,
                            "src": "11110:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2320,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2435,
                            "src": "11095:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$2435_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 2321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1750,
                          "src": "11095:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11095:23:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2324,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2308,
                        "src": "11120:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2325,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2310,
                        "src": "11124:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2319,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2797,
                      "src": "11086:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11086:46:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2327,
                  "nodeType": "EmitStatement",
                  "src": "11081:51:9"
                }
              ]
            },
            "documentation": {
              "id": 2306,
              "nodeType": "StructuredDocumentation",
              "src": "10863:100:9",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 2329,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2308,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2329,
                  "src": "10986:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10986:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2310,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2329,
                  "src": "10998:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10998:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10985:29:9"
            },
            "returnParameters": {
              "id": 2312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11032:0:9"
            },
            "scope": 2435,
            "src": "10968:171:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2360,
              "nodeType": "Block",
              "src": "11397:184:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2340,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2332,
                          "src": "11415:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 2341,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2334,
                          "src": "11424:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11415:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 2343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11434:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 2339,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11407:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11407:55:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2345,
                  "nodeType": "ExpressionStatement",
                  "src": "11407:55:9"
                },
                {
                  "expression": {
                    "id": 2352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2346,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1650,
                          "src": "11472:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 2349,
                        "indexExpression": {
                          "id": 2347,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2332,
                          "src": "11491:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11472:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2350,
                      "indexExpression": {
                        "id": 2348,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2334,
                        "src": "11498:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11472:35:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2351,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2336,
                      "src": "11510:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11472:46:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2353,
                  "nodeType": "ExpressionStatement",
                  "src": "11472:46:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2355,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2332,
                        "src": "11548:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2356,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2334,
                        "src": "11555:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2357,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2336,
                        "src": "11565:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2354,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2806,
                      "src": "11533:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 2358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11533:41:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2359,
                  "nodeType": "EmitStatement",
                  "src": "11528:46:9"
                }
              ]
            },
            "documentation": {
              "id": 2330,
              "nodeType": "StructuredDocumentation",
              "src": "11145:124:9",
              "text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
            },
            "id": 2361,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setApprovalForAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2332,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 2361,
                  "src": "11311:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11311:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2334,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2361,
                  "src": "11334:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2333,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11334:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2336,
                  "mutability": "mutable",
                  "name": "approved",
                  "nodeType": "VariableDeclaration",
                  "scope": 2361,
                  "src": "11360:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2335,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11360:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11301:78:9"
            },
            "returnParameters": {
              "id": 2338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11397:0:9"
            },
            "scope": 2435,
            "src": "11274:307:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2422,
              "nodeType": "Block",
              "src": "12290:622:9",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2375,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2366,
                        "src": "12304:2:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2985,
                      "src": "12304:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 2377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12304:15:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2420,
                    "nodeType": "Block",
                    "src": "12870:36:9",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 2418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12891:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 2374,
                        "id": 2419,
                        "nodeType": "Return",
                        "src": "12884:11:9"
                      }
                    ]
                  },
                  "id": 2421,
                  "nodeType": "IfStatement",
                  "src": "12300:606:9",
                  "trueBody": {
                    "id": 2417,
                    "nodeType": "Block",
                    "src": "12321:543:9",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 2397,
                              "nodeType": "Block",
                              "src": "12436:91:9",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 2395,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2391,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2389,
                                      "src": "12461:6:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2392,
                                          "name": "IERC721Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2965,
                                          "src": "12471:15:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$2965_$",
                                            "typeString": "type(contract IERC721Receiver)"
                                          }
                                        },
                                        "id": 2393,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2964,
                                        "src": "12471:32:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 2394,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "12471:41:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "12461:51:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 2374,
                                  "id": 2396,
                                  "nodeType": "Return",
                                  "src": "12454:58:9"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 2398,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2390,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 2389,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2398,
                                  "src": "12421:13:9",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 2388,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12421:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12420:15:9"
                            },
                            "src": "12412:115:9"
                          },
                          {
                            "block": {
                              "id": 2414,
                              "nodeType": "Block",
                              "src": "12556:298:9",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2405,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2402,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2400,
                                        "src": "12578:6:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 2403,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "12578:13:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 2404,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12595:1:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "12578:18:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 2412,
                                    "nodeType": "Block",
                                    "src": "12705:135:9",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "12736:86:9",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "12773:2:9",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12777:6:9"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12769:3:9"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12769:15:9"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12792:6:9"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12786:5:9"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12786:13:9"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12762:6:9"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "12762:38:9"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "12762:38:9"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 2400,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12777:6:9",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 2400,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12792:6:9",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 2411,
                                        "nodeType": "InlineAssembly",
                                        "src": "12727:95:9"
                                      }
                                    ]
                                  },
                                  "id": 2413,
                                  "nodeType": "IfStatement",
                                  "src": "12574:266:9",
                                  "trueBody": {
                                    "id": 2410,
                                    "nodeType": "Block",
                                    "src": "12598:101:9",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 2407,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12627:52:9",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 2406,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "12620:6:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 2408,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12620:60:9",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 2409,
                                        "nodeType": "ExpressionStatement",
                                        "src": "12620:60:9"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 2415,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2401,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 2400,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2415,
                                  "src": "12535:19:9",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 2399,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12535:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12534:21:9"
                            },
                            "src": "12528:326:9"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2382,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3274,
                                "src": "12376:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12376:12:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2384,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2364,
                              "src": "12390:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2385,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2368,
                              "src": "12396:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2386,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2370,
                              "src": "12405:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2379,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2366,
                                  "src": "12355:2:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2378,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2965,
                                "src": "12339:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$2965_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 2380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12339:19:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$2965",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 2381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2964,
                            "src": "12339:36:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 2387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12339:72:9",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 2416,
                        "nodeType": "TryStatement",
                        "src": "12335:519:9"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2362,
              "nodeType": "StructuredDocumentation",
              "src": "11587:542:9",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 2423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2364,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2423,
                  "src": "12175:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12175:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2366,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2423,
                  "src": "12197:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12197:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2368,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2423,
                  "src": "12217:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12217:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2370,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2423,
                  "src": "12242:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2369,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12242:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12165:101:9"
            },
            "returnParameters": {
              "id": 2374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2373,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2423,
                  "src": "12284:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2372,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12284:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12283:6:9"
            },
            "scope": 2435,
            "src": "12134:778:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2433,
              "nodeType": "Block",
              "src": "13588:2:9",
              "statements": []
            },
            "documentation": {
              "id": 2424,
              "nodeType": "StructuredDocumentation",
              "src": "12918:545:9",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 2434,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2426,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2434,
                  "src": "13507:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13507:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2428,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2434,
                  "src": "13529:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13529:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2430,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2434,
                  "src": "13549:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13549:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13497:73:9"
            },
            "returnParameters": {
              "id": 2432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13588:0:9"
            },
            "scope": 2435,
            "src": "13468:122:9",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 2436,
        "src": "586:13006:9"
      }
    ],
    "src": "92:13501:9"
  },
  "bytecode": "60806040523480156200001157600080fd5b506040516200156d3803806200156d8339810160408190526200003491620001b9565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000273565b828054620000769062000220565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c6200025d565b6040516020601f8401601f19168201810183811183821017156200016457620001646200025d565b60405283825285840181018710156200017b578485fd5b8492505b838310156200019e57858301810151828401820152918201916200017f565b83831115620001af57848185840101525b5095945050505050565b60008060408385031215620001cc578182fd5b82516001600160401b0380821115620001e3578384fd5b620001f1868387016200010e565b9350602085015191508082111562000207578283fd5b5062000216858286016200010e565b9150509250929050565b6002810460018216806200023557607f821691505b602082108114156200025757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6112ea80620002836000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101a8578063b88d4fde146101bb578063c87b56dd146101ce578063e985e9c5146101e1576100cf565b80636352211e1461016d57806370a082311461018057806395d89b41146101a0576100cf565b806301ffc9a7146100d457806306fdde03146100fd578063081812fc14610112578063095ea7b31461013257806323b872dd1461014757806342842e0e1461015a575b600080fd5b6100e76100e2366004610cde565b6101f4565b6040516100f49190610dda565b60405180910390f35b61010561023c565b6040516100f49190610de5565b610125610120366004610d16565b6102ce565b6040516100f49190610d89565b610145610140366004610cb5565b61031a565b005b610145610155366004610b74565b6103b2565b610145610168366004610b74565b6103ea565b61012561017b366004610d16565b610405565b61019361018e366004610b28565b61043a565b6040516100f49190611177565b61010561047e565b6101456101b6366004610c7b565b61048d565b6101456101c9366004610baf565b6104a3565b6101056101dc366004610d16565b6104e2565b6100e76101ef366004610b42565b610565565b60006001600160e01b031982166380ac58cd60e01b148061022557506001600160e01b03198216635b5e139f60e01b145b80610234575061023482610593565b90505b919050565b60606000805461024b906111ef565b80601f0160208091040260200160405190810160405280929190818152602001828054610277906111ef565b80156102c45780601f10610299576101008083540402835291602001916102c4565b820191906000526020600020905b8154815290600101906020018083116102a757829003601f168201915b5050505050905090565b60006102d9826105ac565b6102fe5760405162461bcd60e51b81526004016102f590611001565b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061032582610405565b9050806001600160a01b0316836001600160a01b031614156103595760405162461bcd60e51b81526004016102f5906110e5565b806001600160a01b031661036b6105c9565b6001600160a01b031614806103875750610387816101ef6105c9565b6103a35760405162461bcd60e51b81526004016102f590610f11565b6103ad83836105cd565b505050565b6103c36103bd6105c9565b8261063b565b6103df5760405162461bcd60e51b81526004016102f590611126565b6103ad8383836106c0565b6103ad838383604051806020016040528060008152506104a3565b6000818152600260205260408120546001600160a01b0316806102345760405162461bcd60e51b81526004016102f590610fb8565b60006001600160a01b0382166104625760405162461bcd60e51b81526004016102f590610f6e565b506001600160a01b031660009081526003602052604090205490565b60606001805461024b906111ef565b61049f6104986105c9565b83836107ed565b5050565b6104b46104ae6105c9565b8361063b565b6104d05760405162461bcd60e51b81526004016102f590611126565b6104dc84848484610890565b50505050565b60606104ed826105ac565b6105095760405162461bcd60e51b81526004016102f590611096565b60006105136108c3565b90506000815111610533576040518060200160405280600081525061055e565b8061053d846108d5565b60405160200161054e929190610d5a565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6001600160e01b031981166301ffc9a760e01b14919050565b6000908152600260205260409020546001600160a01b0316151590565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061060282610405565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610646826105ac565b6106625760405162461bcd60e51b81526004016102f590610ec5565b600061066d83610405565b9050806001600160a01b0316846001600160a01b031614806106a85750836001600160a01b031661069d846102ce565b6001600160a01b0316145b806106b857506106b88185610565565b949350505050565b826001600160a01b03166106d382610405565b6001600160a01b0316146106f95760405162461bcd60e51b81526004016102f59061104d565b6001600160a01b03821661071f5760405162461bcd60e51b81526004016102f590610e4a565b61072a8383836103ad565b6107356000826105cd565b6001600160a01b038316600090815260036020526040812080546001929061075e9084906111ac565b90915550506001600160a01b038216600090815260036020526040812080546001929061078c908490611180565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b0316141561081f5760405162461bcd60e51b81526004016102f590610e8e565b6001600160a01b0383811660008181526005602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610883908590610dda565b60405180910390a3505050565b61089b8484846106c0565b6108a7848484846109f0565b6104dc5760405162461bcd60e51b81526004016102f590610df8565b60408051602081019091526000815290565b6060816108fa57506040805180820190915260018152600360fc1b6020820152610237565b8160005b8115610924578061090e8161122a565b915061091d9050600a83611198565b91506108fe565b60008167ffffffffffffffff81111561094d57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610977576020820181803683370190505b5090505b84156106b85761098c6001836111ac565b9150610999600a86611245565b6109a4906030611180565b60f81b8183815181106109c757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506109e9600a86611198565b945061097b565b6000610a04846001600160a01b0316610b0b565b15610b0057836001600160a01b031663150b7a02610a206105c9565b8786866040518563ffffffff1660e01b8152600401610a429493929190610d9d565b602060405180830381600087803b158015610a5c57600080fd5b505af1925050508015610a8c575060408051601f3d908101601f19168201909252610a8991810190610cfa565b60015b610ae6573d808015610aba576040519150601f19603f3d011682016040523d82523d6000602084013e610abf565b606091505b508051610ade5760405162461bcd60e51b81526004016102f590610df8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506106b8565b506001949350505050565b3b151590565b80356001600160a01b038116811461023757600080fd5b600060208284031215610b39578081fd5b61055e82610b11565b60008060408385031215610b54578081fd5b610b5d83610b11565b9150610b6b60208401610b11565b90509250929050565b600080600060608486031215610b88578081fd5b610b9184610b11565b9250610b9f60208501610b11565b9150604084013590509250925092565b60008060008060808587031215610bc4578081fd5b610bcd85610b11565b93506020610bdc818701610b11565b935060408601359250606086013567ffffffffffffffff80821115610bff578384fd5b818801915088601f830112610c12578384fd5b813581811115610c2457610c24611285565b604051601f8201601f1916810185018381118282101715610c4757610c47611285565b60405281815283820185018b1015610c5d578586fd5b81858501868301379081019093019390935250939692955090935050565b60008060408385031215610c8d578182fd5b610c9683610b11565b915060208301358015158114610caa578182fd5b809150509250929050565b60008060408385031215610cc7578182fd5b610cd083610b11565b946020939093013593505050565b600060208284031215610cef578081fd5b813561055e8161129b565b600060208284031215610d0b578081fd5b815161055e8161129b565b600060208284031215610d27578081fd5b5035919050565b60008151808452610d468160208601602086016111c3565b601f01601f19169290920160200192915050565b60008351610d6c8184602088016111c3565b835190830190610d808183602088016111c3565b01949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610dd090830184610d2e565b9695505050505050565b901515815260200190565b60006020825261055e6020830184610d2e565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201526832b73a103a37b5b2b760b91b606082015260800190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201526839903737ba1037bbb760b91b606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b90815260200190565b6000821982111561119357611193611259565b500190565b6000826111a7576111a761126f565b500490565b6000828210156111be576111be611259565b500390565b60005b838110156111de5781810151838201526020016111c6565b838111156104dc5750506000910152565b60028104600182168061120357607f821691505b6020821081141561122457634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561123e5761123e611259565b5060010190565b6000826112545761125461126f565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146112b157600080fd5b5056fea2646970667358221220885d390718c22b5b6fc3ad896774413d1e172ae24588d60801f1591ab26de3de64736f6c63430008000033",
  "bytecodeSha1": "9f5e3ffdf3fdaad98e3a068cb7bdc3d85c6087f1",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.0+commit.c7dfd78e"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "11": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "18": {
        "Strings.toString": {
          "67": [
            601,
            611,
            false
          ]
        }
      },
      "4": {},
      "5": {},
      "9": {
        "ERC721._checkOnERC721Received": {
          "66": [
            12304,
            12319,
            false
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "61": [
            7517,
            7533,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "65": [
            6704,
            6752,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "64": [
            11415,
            11432,
            true
          ]
        },
        "ERC721._transfer": {
          "62": [
            10424,
            10455,
            true
          ],
          "63": [
            10519,
            10535,
            true
          ]
        },
        "ERC721.approve": {
          "52": [
            3632,
            3643,
            true
          ],
          "53": [
            3713,
            3734,
            true
          ],
          "54": [
            3738,
            3775,
            true
          ]
        },
        "ERC721.balanceOf": {
          "57": [
            1986,
            2005,
            true
          ]
        },
        "ERC721.getApproved": {
          "51": [
            4060,
            4076,
            true
          ]
        },
        "ERC721.ownerOf": {
          "56": [
            2290,
            2309,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "58": [
            5494,
            5535,
            true
          ]
        },
        "ERC721.tokenURI": {
          "59": [
            2882,
            2898,
            true
          ],
          "60": [
            3012,
            3037,
            true
          ]
        },
        "ERC721.transferFrom": {
          "55": [
            4873,
            4914,
            true
          ]
        }
      }
    },
    "statements": {
      "11": {},
      "13": {},
      "14": {},
      "15": {
        "Address.isContract": {
          "50": [
            1126,
            1141
          ]
        }
      },
      "16": {
        "Context._msgSender": {
          "22": [
            712,
            729
          ]
        }
      },
      "18": {
        "Strings.toString": {
          "41": [
            627,
            637
          ],
          "42": [
            743,
            751
          ],
          "43": [
            765,
            775
          ],
          "44": [
            877,
            888
          ],
          "45": [
            902,
            958
          ],
          "46": [
            972,
            983
          ]
        }
      },
      "4": {
        "ERC165.supportsInterface": {
          "20": [
            930,
            977
          ]
        }
      },
      "5": {},
      "9": {
        "ERC721._approve": {
          "23": [
            11042,
            11071
          ],
          "24": [
            11081,
            11132
          ]
        },
        "ERC721._baseURI": {
          "40": [
            3422,
            3431
          ]
        },
        "ERC721._checkOnERC721Received": {
          "47": [
            12620,
            12680
          ],
          "48": [
            12454,
            12512
          ],
          "49": [
            12884,
            12895
          ]
        },
        "ERC721._exists": {
          "21": [
            7198,
            7235
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "25": [
            7509,
            7582
          ],
          "26": [
            7641,
            7737
          ]
        },
        "ERC721._safeTransfer": {
          "38": [
            6658,
            6686
          ],
          "39": [
            6696,
            6807
          ]
        },
        "ERC721._setApprovalForAll": {
          "35": [
            11407,
            11462
          ],
          "36": [
            11472,
            11518
          ],
          "37": [
            11528,
            11574
          ]
        },
        "ERC721._transfer": {
          "27": [
            10416,
            10501
          ],
          "28": [
            10511,
            10576
          ],
          "29": [
            10587,
            10626
          ],
          "30": [
            10688,
            10717
          ],
          "31": [
            10728,
            10748
          ],
          "32": [
            10758,
            10776
          ],
          "33": [
            10786,
            10807
          ],
          "34": [
            10818,
            10850
          ]
        },
        "ERC721.approve": {
          "4": [
            3624,
            3681
          ],
          "5": [
            3692,
            3857
          ],
          "6": [
            3868,
            3889
          ]
        },
        "ERC721.balanceOf": {
          "11": [
            1978,
            2052
          ],
          "12": [
            2062,
            2085
          ]
        },
        "ERC721.getApproved": {
          "2": [
            4052,
            4125
          ],
          "3": [
            4136,
            4167
          ]
        },
        "ERC721.isApprovedForAll": {
          "19": [
            4573,
            4615
          ]
        },
        "ERC721.name": {
          "1": [
            2525,
            2537
          ]
        },
        "ERC721.ownerOf": {
          "10": [
            2282,
            2355
          ]
        },
        "ERC721.safeTransferFrom": {
          "9": [
            5213,
            5252
          ],
          "15": [
            5486,
            5589
          ],
          "16": [
            5599,
            5638
          ]
        },
        "ERC721.setApprovalForAll": {
          "14": [
            4335,
            4387
          ]
        },
        "ERC721.supportsInterface": {
          "0": [
            1646,
            1821
          ]
        },
        "ERC721.symbol": {
          "13": [
            2689,
            2703
          ]
        },
        "ERC721.tokenURI": {
          "17": [
            2874,
            2950
          ],
          "18": [
            3005,
            3098
          ]
        },
        "ERC721.transferFrom": {
          "7": [
            4865,
            4968
          ],
          "8": [
            4979,
            5007
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "ERC165",
    "IERC165",
    "IERC721",
    "IERC721Metadata",
    "IERC721Receiver",
    "Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101a8578063b88d4fde146101bb578063c87b56dd146101ce578063e985e9c5146101e1576100cf565b80636352211e1461016d57806370a082311461018057806395d89b41146101a0576100cf565b806301ffc9a7146100d457806306fdde03146100fd578063081812fc14610112578063095ea7b31461013257806323b872dd1461014757806342842e0e1461015a575b600080fd5b6100e76100e2366004610cde565b6101f4565b6040516100f49190610dda565b60405180910390f35b61010561023c565b6040516100f49190610de5565b610125610120366004610d16565b6102ce565b6040516100f49190610d89565b610145610140366004610cb5565b61031a565b005b610145610155366004610b74565b6103b2565b610145610168366004610b74565b6103ea565b61012561017b366004610d16565b610405565b61019361018e366004610b28565b61043a565b6040516100f49190611177565b61010561047e565b6101456101b6366004610c7b565b61048d565b6101456101c9366004610baf565b6104a3565b6101056101dc366004610d16565b6104e2565b6100e76101ef366004610b42565b610565565b60006001600160e01b031982166380ac58cd60e01b148061022557506001600160e01b03198216635b5e139f60e01b145b80610234575061023482610593565b90505b919050565b60606000805461024b906111ef565b80601f0160208091040260200160405190810160405280929190818152602001828054610277906111ef565b80156102c45780601f10610299576101008083540402835291602001916102c4565b820191906000526020600020905b8154815290600101906020018083116102a757829003601f168201915b5050505050905090565b60006102d9826105ac565b6102fe5760405162461bcd60e51b81526004016102f590611001565b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061032582610405565b9050806001600160a01b0316836001600160a01b031614156103595760405162461bcd60e51b81526004016102f5906110e5565b806001600160a01b031661036b6105c9565b6001600160a01b031614806103875750610387816101ef6105c9565b6103a35760405162461bcd60e51b81526004016102f590610f11565b6103ad83836105cd565b505050565b6103c36103bd6105c9565b8261063b565b6103df5760405162461bcd60e51b81526004016102f590611126565b6103ad8383836106c0565b6103ad838383604051806020016040528060008152506104a3565b6000818152600260205260408120546001600160a01b0316806102345760405162461bcd60e51b81526004016102f590610fb8565b60006001600160a01b0382166104625760405162461bcd60e51b81526004016102f590610f6e565b506001600160a01b031660009081526003602052604090205490565b60606001805461024b906111ef565b61049f6104986105c9565b83836107ed565b5050565b6104b46104ae6105c9565b8361063b565b6104d05760405162461bcd60e51b81526004016102f590611126565b6104dc84848484610890565b50505050565b60606104ed826105ac565b6105095760405162461bcd60e51b81526004016102f590611096565b60006105136108c3565b90506000815111610533576040518060200160405280600081525061055e565b8061053d846108d5565b60405160200161054e929190610d5a565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6001600160e01b031981166301ffc9a760e01b14919050565b6000908152600260205260409020546001600160a01b0316151590565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061060282610405565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610646826105ac565b6106625760405162461bcd60e51b81526004016102f590610ec5565b600061066d83610405565b9050806001600160a01b0316846001600160a01b031614806106a85750836001600160a01b031661069d846102ce565b6001600160a01b0316145b806106b857506106b88185610565565b949350505050565b826001600160a01b03166106d382610405565b6001600160a01b0316146106f95760405162461bcd60e51b81526004016102f59061104d565b6001600160a01b03821661071f5760405162461bcd60e51b81526004016102f590610e4a565b61072a8383836103ad565b6107356000826105cd565b6001600160a01b038316600090815260036020526040812080546001929061075e9084906111ac565b90915550506001600160a01b038216600090815260036020526040812080546001929061078c908490611180565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b0316141561081f5760405162461bcd60e51b81526004016102f590610e8e565b6001600160a01b0383811660008181526005602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610883908590610dda565b60405180910390a3505050565b61089b8484846106c0565b6108a7848484846109f0565b6104dc5760405162461bcd60e51b81526004016102f590610df8565b60408051602081019091526000815290565b6060816108fa57506040805180820190915260018152600360fc1b6020820152610237565b8160005b8115610924578061090e8161122a565b915061091d9050600a83611198565b91506108fe565b60008167ffffffffffffffff81111561094d57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610977576020820181803683370190505b5090505b84156106b85761098c6001836111ac565b9150610999600a86611245565b6109a4906030611180565b60f81b8183815181106109c757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506109e9600a86611198565b945061097b565b6000610a04846001600160a01b0316610b0b565b15610b0057836001600160a01b031663150b7a02610a206105c9565b8786866040518563ffffffff1660e01b8152600401610a429493929190610d9d565b602060405180830381600087803b158015610a5c57600080fd5b505af1925050508015610a8c575060408051601f3d908101601f19168201909252610a8991810190610cfa565b60015b610ae6573d808015610aba576040519150601f19603f3d011682016040523d82523d6000602084013e610abf565b606091505b508051610ade5760405162461bcd60e51b81526004016102f590610df8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506106b8565b506001949350505050565b3b151590565b80356001600160a01b038116811461023757600080fd5b600060208284031215610b39578081fd5b61055e82610b11565b60008060408385031215610b54578081fd5b610b5d83610b11565b9150610b6b60208401610b11565b90509250929050565b600080600060608486031215610b88578081fd5b610b9184610b11565b9250610b9f60208501610b11565b9150604084013590509250925092565b60008060008060808587031215610bc4578081fd5b610bcd85610b11565b93506020610bdc818701610b11565b935060408601359250606086013567ffffffffffffffff80821115610bff578384fd5b818801915088601f830112610c12578384fd5b813581811115610c2457610c24611285565b604051601f8201601f1916810185018381118282101715610c4757610c47611285565b60405281815283820185018b1015610c5d578586fd5b81858501868301379081019093019390935250939692955090935050565b60008060408385031215610c8d578182fd5b610c9683610b11565b915060208301358015158114610caa578182fd5b809150509250929050565b60008060408385031215610cc7578182fd5b610cd083610b11565b946020939093013593505050565b600060208284031215610cef578081fd5b813561055e8161129b565b600060208284031215610d0b578081fd5b815161055e8161129b565b600060208284031215610d27578081fd5b5035919050565b60008151808452610d468160208601602086016111c3565b601f01601f19169290920160200192915050565b60008351610d6c8184602088016111c3565b835190830190610d808183602088016111c3565b01949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610dd090830184610d2e565b9695505050505050565b901515815260200190565b60006020825261055e6020830184610d2e565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201526832b73a103a37b5b2b760b91b606082015260800190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201526839903737ba1037bbb760b91b606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b90815260200190565b6000821982111561119357611193611259565b500190565b6000826111a7576111a761126f565b500490565b6000828210156111be576111be611259565b500390565b60005b838110156111de5781810151838201526020016111c6565b838111156104dc5750506000910152565b60028104600182168061120357607f821691505b6020821081141561122457634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561123e5761123e611259565b5060010190565b6000826112545761125461126f565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146112b157600080fd5b5056fea2646970667358221220885d390718c22b5b6fc3ad896774413d1e172ae24588d60801f1591ab26de3de64736f6c63430008000033",
  "deployedSourceMap": "586:13006:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1528:300;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2446:98;;;:::i;:::-;;;;;;;:::i;3957:217::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3495:401::-;;;;;;:::i;:::-;;:::i;:::-;;4684:330;;;;;;:::i;:::-;;:::i;5080:179::-;;;;;;:::i;:::-;;:::i;2149:235::-;;;;;;:::i;:::-;;:::i;1887:205::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2608:102::-;;;:::i;4241:153::-;;;;;;:::i;:::-;;:::i;5325:320::-;;;;;;:::i;:::-;;:::i;2776:329::-;;;;;;:::i;:::-;;:::i;4460:162::-;;;;;;:::i;:::-;;:::i;1528:300::-;1630:4;-1:-1:-1;;;;;;1665:40:9;;-1:-1:-1;;;1665:40:9;;:104;;-1:-1:-1;;;;;;;1721:48:9;;-1:-1:-1;;;1721:48:9;1665:104;:156;;;;1785:36;1809:11;1785:23;:36::i;:::-;1646:175;;1528:300;;;;:::o;2446:98::-;2500:13;2532:5;2525:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2446:98;:::o;3957:217::-;4033:7;4060:16;4068:7;4060;:16::i;:::-;4052:73;;;;-1:-1:-1;;;4052:73:9;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;4143:24:9;;;;:15;:24;;;;;;-1:-1:-1;;;;;4143:24:9;;3957:217::o;3495:401::-;3575:13;3591:23;3606:7;3591:14;:23::i;:::-;3575:39;;3638:5;-1:-1:-1;;;;;3632:11:9;:2;-1:-1:-1;;;;;3632:11:9;;;3624:57;;;;-1:-1:-1;;;3624:57:9;;;;;;;:::i;:::-;3729:5;-1:-1:-1;;;;;3713:21:9;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3713:21:9;;:62;;;;3738:37;3755:5;3762:12;:10;:12::i;3738:37::-;3692:165;;;;-1:-1:-1;;;3692:165:9;;;;;;;:::i;:::-;3868:21;3877:2;3881:7;3868:8;:21::i;:::-;3495:401;;;:::o;4684:330::-;4873:41;4892:12;:10;:12::i;:::-;4906:7;4873:18;:41::i;:::-;4865:103;;;;-1:-1:-1;;;4865:103:9;;;;;;;:::i;:::-;4979:28;4989:4;4995:2;4999:7;4979:9;:28::i;5080:179::-;5213:39;5230:4;5236:2;5240:7;5213:39;;;;;;;;;;;;:16;:39::i;2149:235::-;2221:7;2256:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2256:16:9;2290:19;2282:73;;;;-1:-1:-1;;;2282:73:9;;;;;;;:::i;1887:205::-;1959:7;-1:-1:-1;;;;;1986:19:9;;1978:74;;;;-1:-1:-1;;;1978:74:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2069:16:9;;;;;:9;:16;;;;;;;1887:205::o;2608:102::-;2664:13;2696:7;2689:14;;;;;:::i;4241:153::-;4335:52;4354:12;:10;:12::i;:::-;4368:8;4378;4335:18;:52::i;:::-;4241:153;;:::o;5325:320::-;5494:41;5513:12;:10;:12::i;:::-;5527:7;5494:18;:41::i;:::-;5486:103;;;;-1:-1:-1;;;5486:103:9;;;;;;;:::i;:::-;5599:39;5613:4;5619:2;5623:7;5632:5;5599:13;:39::i;:::-;5325:320;;;;:::o;2776:329::-;2849:13;2882:16;2890:7;2882;:16::i;:::-;2874:76;;;;-1:-1:-1;;;2874:76:9;;;;;;;:::i;:::-;2961:21;2985:10;:8;:10::i;:::-;2961:34;;3036:1;3018:7;3012:21;:25;:86;;;;;;;;;;;;;;;;;3064:7;3073:18;:7;:16;:18::i;:::-;3047:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3012:86;3005:93;2776:329;-1:-1:-1;;;2776:329:9:o;4460:162::-;-1:-1:-1;;;;;4580:25:9;;;4557:4;4580:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4460:162::o;829:155:4:-;-1:-1:-1;;;;;;937:40:4;;-1:-1:-1;;;937:40:4;829:155;;;:::o;7117:125:9:-;7182:4;7205:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7205:16:9;:30;;;7117:125::o;640:96:16:-;719:10;640:96;:::o;10968:171:9:-;11042:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11042:29:9;-1:-1:-1;;;;;11042:29:9;;;;;;;;:24;;11095:23;11042:24;11095:14;:23::i;:::-;-1:-1:-1;;;;;11086:46:9;;;;;;;;;;;10968:171;;:::o;7400:344::-;7493:4;7517:16;7525:7;7517;:16::i;:::-;7509:73;;;;-1:-1:-1;;;7509:73:9;;;;;;;:::i;:::-;7592:13;7608:23;7623:7;7608:14;:23::i;:::-;7592:39;;7660:5;-1:-1:-1;;;;;7649:16:9;:7;-1:-1:-1;;;;;7649:16:9;;:51;;;;7693:7;-1:-1:-1;;;;;7669:31:9;:20;7681:7;7669:11;:20::i;:::-;-1:-1:-1;;;;;7669:31:9;;7649:51;:87;;;;7704:32;7721:5;7728:7;7704:16;:32::i;:::-;7641:96;7400:344;-1:-1:-1;;;;7400:344:9:o;10297:560::-;10451:4;-1:-1:-1;;;;;10424:31:9;:23;10439:7;10424:14;:23::i;:::-;-1:-1:-1;;;;;10424:31:9;;10416:85;;;;-1:-1:-1;;;10416:85:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;10519:16:9;;10511:65;;;;-1:-1:-1;;;10511:65:9;;;;;;;:::i;:::-;10587:39;10608:4;10614:2;10618:7;10587:20;:39::i;:::-;10688:29;10705:1;10709:7;10688:8;:29::i;:::-;-1:-1:-1;;;;;10728:15:9;;;;;;:9;:15;;;;;:20;;10747:1;;10728:15;:20;;10747:1;;10728:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10758:13:9;;;;;;:9;:13;;;;;:18;;10775:1;;10758:13;:18;;10775:1;;10758:18;:::i;:::-;;;;-1:-1:-1;;10786:16:9;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10786:21:9;-1:-1:-1;;;;;10786:21:9;;;;;;;;;10823:27;;10786:16;;10823:27;;;;;;;10297:560;;;:::o;11274:307::-;11424:8;-1:-1:-1;;;;;11415:17:9;:5;-1:-1:-1;;;;;11415:17:9;;;11407:55;;;;-1:-1:-1;;;11407:55:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;11472:25:9;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;:46;;-1:-1:-1;;11472:46:9;;;;;;;11533:41;;;;;11472:46;;11533:41;:::i;:::-;;;;;;;;11274:307;;;:::o;6507:::-;6658:28;6668:4;6674:2;6678:7;6658:9;:28::i;:::-;6704:48;6727:4;6733:2;6737:7;6746:5;6704:22;:48::i;:::-;6696:111;;;;-1:-1:-1;;;6696:111:9;;;;;;;:::i;3346:92::-;3422:9;;;;;;;;;-1:-1:-1;3422:9:9;;3346:92;:::o;328:703:18:-;384:13;601:10;597:51;;-1:-1:-1;627:10:18;;;;;;;;;;;;-1:-1:-1;;;627:10:18;;;;;;597:51;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:18;;-1:-1:-1;773:2:18;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;-1:-1:-1;;;817:17:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:18;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:18;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;-1:-1:-1;;;902:14:18;;;;;;;;;;;;:56;-1:-1:-1;;;;;902:56:18;;;;;;;;-1:-1:-1;972:11:18;981:2;972:11;;:::i;:::-;;;844:150;;12134:778:9;12284:4;12304:15;:2;-1:-1:-1;;;;;12304:13:9;;:15::i;:::-;12300:606;;;12355:2;-1:-1:-1;;;;;12339:36:9;;12376:12;:10;:12::i;:::-;12390:4;12396:7;12405:5;12339:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12339:72:9;;;;;;;;-1:-1:-1;;12339:72:9;;;;;;;;;;;;:::i;:::-;;;12335:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12578:13:9;;12574:266;;12620:60;;-1:-1:-1;;;12620:60:9;;;;;;;:::i;12574:266::-;12792:6;12786:13;12777:6;12773:2;12769:15;12762:38;12335:519;-1:-1:-1;;;;;;12461:51:9;-1:-1:-1;;;12461:51:9;;-1:-1:-1;12454:58:9;;12300:606;-1:-1:-1;12891:4:9;12134:778;;;;;;:::o;771:377:15:-;1087:20;1133:8;;;771:377::o;14:175:19:-;84:20;;-1:-1:-1;;;;;133:31:19;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:1178::-;;;;;1195:3;1183:9;1174:7;1170:23;1166:33;1163:2;;;1217:6;1209;1202:22;1163:2;1245:31;1266:9;1245:31;:::i;:::-;1235:41;;1295:2;1316:40;1352:2;1341:9;1337:18;1316:40;:::i;:::-;1306:50;;1403:2;1392:9;1388:18;1375:32;1365:42;;1458:2;1447:9;1443:18;1430:32;1481:18;1522:2;1514:6;1511:14;1508:2;;;1543:6;1535;1528:22;1508:2;1586:6;1575:9;1571:22;1561:32;;1631:7;1624:4;1620:2;1616:13;1612:27;1602:2;;1658:6;1650;1643:22;1602:2;1699;1686:16;1721:2;1717;1714:10;1711:2;;;1727:18;;:::i;:::-;1776:2;1770:9;1845:2;1826:13;;-1:-1:-1;;1822:27:19;1810:40;;1806:49;;1870:18;;;1890:22;;;1867:46;1864:2;;;1916:18;;:::i;:::-;1952:2;1945:22;1976:18;;;2013:11;;;2009:20;;2006:33;-1:-1:-1;2003:2:19;;;2057:6;2049;2042:22;2003:2;2118;2113;2109;2105:11;2100:2;2092:6;2088:15;2075:46;2141:15;;;2137:24;;;2130:40;;;;-1:-1:-1;1153:1048:19;;;;-1:-1:-1;1153:1048:19;;-1:-1:-1;;1153:1048:19:o;2206:369::-;;;2332:2;2320:9;2311:7;2307:23;2303:32;2300:2;;;2353:6;2345;2338:22;2300:2;2381:31;2402:9;2381:31;:::i;:::-;2371:41;;2462:2;2451:9;2447:18;2434:32;2509:5;2502:13;2495:21;2488:5;2485:32;2475:2;;2536:6;2528;2521:22;2475:2;2564:5;2554:15;;;2290:285;;;;;:::o;2580:266::-;;;2709:2;2697:9;2688:7;2684:23;2680:32;2677:2;;;2730:6;2722;2715:22;2677:2;2758:31;2779:9;2758:31;:::i;:::-;2748:41;2836:2;2821:18;;;;2808:32;;-1:-1:-1;;;2667:179:19:o;2851:257::-;;2962:2;2950:9;2941:7;2937:23;2933:32;2930:2;;;2983:6;2975;2968:22;2930:2;3027:9;3014:23;3046:32;3072:5;3046:32;:::i;3113:261::-;;3235:2;3223:9;3214:7;3210:23;3206:32;3203:2;;;3256:6;3248;3241:22;3203:2;3293:9;3287:16;3312:32;3338:5;3312:32;:::i;3379:190::-;;3491:2;3479:9;3470:7;3466:23;3462:32;3459:2;;;3512:6;3504;3497:22;3459:2;-1:-1:-1;3540:23:19;;3449:120;-1:-1:-1;3449:120:19:o;3574:259::-;;3655:5;3649:12;3682:6;3677:3;3670:19;3698:63;3754:6;3747:4;3742:3;3738:14;3731:4;3724:5;3720:16;3698:63;:::i;:::-;3815:2;3794:15;-1:-1:-1;;3790:29:19;3781:39;;;;3822:4;3777:50;;3625:208;-1:-1:-1;;3625:208:19:o;3838:470::-;;4055:6;4049:13;4071:53;4117:6;4112:3;4105:4;4097:6;4093:17;4071:53;:::i;:::-;4187:13;;4146:16;;;;4209:57;4187:13;4146:16;4243:4;4231:17;;4209:57;:::i;:::-;4282:20;;4025:283;-1:-1:-1;;;;4025:283:19:o;4313:203::-;-1:-1:-1;;;;;4477:32:19;;;;4459:51;;4447:2;4432:18;;4414:102::o;4521:490::-;-1:-1:-1;;;;;4790:15:19;;;4772:34;;4842:15;;4837:2;4822:18;;4815:43;4889:2;4874:18;;4867:34;;;4937:3;4932:2;4917:18;;4910:31;;;4521:490;;4958:47;;4985:19;;4977:6;4958:47;:::i;:::-;4950:55;4724:287;-1:-1:-1;;;;;;4724:287:19:o;5016:187::-;5181:14;;5174:22;5156:41;;5144:2;5129:18;;5111:92::o;5208:221::-;;5357:2;5346:9;5339:21;5377:46;5419:2;5408:9;5404:18;5396:6;5377:46;:::i;5434:414::-;5636:2;5618:21;;;5675:2;5655:18;;;5648:30;5714:34;5709:2;5694:18;;5687:62;-1:-1:-1;;;5780:2:19;5765:18;;5758:48;5838:3;5823:19;;5608:240::o;5853:400::-;6055:2;6037:21;;;6094:2;6074:18;;;6067:30;6133:34;6128:2;6113:18;;6106:62;-1:-1:-1;;;6199:2:19;6184:18;;6177:34;6243:3;6228:19;;6027:226::o;6258:349::-;6460:2;6442:21;;;6499:2;6479:18;;;6472:30;6538:27;6533:2;6518:18;;6511:55;6598:2;6583:18;;6432:175::o;6612:408::-;6814:2;6796:21;;;6853:2;6833:18;;;6826:30;6892:34;6887:2;6872:18;;6865:62;-1:-1:-1;;;6958:2:19;6943:18;;6936:42;7010:3;6995:19;;6786:234::o;7025:420::-;7227:2;7209:21;;;7266:2;7246:18;;;7239:30;7305:34;7300:2;7285:18;;7278:62;7376:26;7371:2;7356:18;;7349:54;7435:3;7420:19;;7199:246::o;7450:406::-;7652:2;7634:21;;;7691:2;7671:18;;;7664:30;7730:34;7725:2;7710:18;;7703:62;-1:-1:-1;;;7796:2:19;7781:18;;7774:40;7846:3;7831:19;;7624:232::o;7861:405::-;8063:2;8045:21;;;8102:2;8082:18;;;8075:30;8141:34;8136:2;8121:18;;8114:62;-1:-1:-1;;;8207:2:19;8192:18;;8185:39;8256:3;8241:19;;8035:231::o;8271:408::-;8473:2;8455:21;;;8512:2;8492:18;;;8485:30;8551:34;8546:2;8531:18;;8524:62;-1:-1:-1;;;8617:2:19;8602:18;;8595:42;8669:3;8654:19;;8445:234::o;8684:405::-;8886:2;8868:21;;;8925:2;8905:18;;;8898:30;8964:34;8959:2;8944:18;;8937:62;-1:-1:-1;;;9030:2:19;9015:18;;9008:39;9079:3;9064:19;;8858:231::o;9094:411::-;9296:2;9278:21;;;9335:2;9315:18;;;9308:30;9374:34;9369:2;9354:18;;9347:62;-1:-1:-1;;;9440:2:19;9425:18;;9418:45;9495:3;9480:19;;9268:237::o;9510:397::-;9712:2;9694:21;;;9751:2;9731:18;;;9724:30;9790:34;9785:2;9770:18;;9763:62;-1:-1:-1;;;9856:2:19;9841:18;;9834:31;9897:3;9882:19;;9684:223::o;9912:413::-;10114:2;10096:21;;;10153:2;10133:18;;;10126:30;10192:34;10187:2;10172:18;;10165:62;-1:-1:-1;;;10258:2:19;10243:18;;10236:47;10315:3;10300:19;;10086:239::o;10330:177::-;10476:25;;;10464:2;10449:18;;10431:76::o;10512:128::-;;10583:1;10579:6;10576:1;10573:13;10570:2;;;10589:18;;:::i;:::-;-1:-1:-1;10625:9:19;;10560:80::o;10645:120::-;;10711:1;10701:2;;10716:18;;:::i;:::-;-1:-1:-1;10750:9:19;;10691:74::o;10770:125::-;;10838:1;10835;10832:8;10829:2;;;10843:18;;:::i;:::-;-1:-1:-1;10880:9:19;;10819:76::o;10900:258::-;10972:1;10982:113;10996:6;10993:1;10990:13;10982:113;;;11072:11;;;11066:18;11053:11;;;11046:39;11018:2;11011:10;10982:113;;;11113:6;11110:1;11107:13;11104:2;;;-1:-1:-1;;11148:1:19;11130:16;;11123:27;10953:205::o;11163:380::-;11248:1;11238:12;;11295:1;11285:12;;;11306:2;;11360:4;11352:6;11348:17;11338:27;;11306:2;11413;11405:6;11402:14;11382:18;11379:38;11376:2;;;11459:10;11454:3;11450:20;11447:1;11440:31;11494:4;11491:1;11484:15;11522:4;11519:1;11512:15;11376:2;;11218:325;;;:::o;11548:135::-;;-1:-1:-1;;11608:17:19;;11605:2;;;11628:18;;:::i;:::-;-1:-1:-1;11675:1:19;11664:13;;11595:88::o;11688:112::-;;11746:1;11736:2;;11751:18;;:::i;:::-;-1:-1:-1;11785:9:19;;11726:74::o;11805:127::-;11866:10;11861:3;11857:20;11854:1;11847:31;11897:4;11894:1;11887:15;11921:4;11918:1;11911:15;11937:127;11998:10;11993:3;11989:20;11986:1;11979:31;12029:4;12026:1;12019:15;12053:4;12050:1;12043:15;12069:127;12130:10;12125:3;12121:20;12118:1;12111:31;12161:4;12158:1;12151:15;12185:4;12182:1;12175:15;12201:133;-1:-1:-1;;;;;;12277:32:19;;12267:43;;12257:2;;12324:1;12321;12314:12;12257:2;12247:87;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    586,
    13592
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1E1 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A0 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x15A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCDE JUMP JUMPDEST PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0xDE5 JUMP JUMPDEST PUSH2 0x125 PUSH2 0x120 CALLDATASIZE PUSH1 0x4 PUSH2 0xD16 JUMP JUMPDEST PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB5 JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x145 PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0xB74 JUMP JUMPDEST PUSH2 0x3B2 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0xB74 JUMP JUMPDEST PUSH2 0x3EA JUMP JUMPDEST PUSH2 0x125 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0xD16 JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST PUSH2 0x193 PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0xB28 JUMP JUMPDEST PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x145 PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST PUSH2 0x145 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xBAF JUMP JUMPDEST PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0xD16 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0xB42 JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x225 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x234 JUMPI POP PUSH2 0x234 DUP3 PUSH2 0x593 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x24B SWAP1 PUSH2 0x11EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x277 SWAP1 PUSH2 0x11EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x299 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D9 DUP3 PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x2FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x325 DUP3 PUSH2 0x405 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x36B PUSH2 0x5C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH2 0x387 DUP2 PUSH2 0x1EF PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x3A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x3AD DUP4 DUP4 PUSH2 0x5CD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3C3 PUSH2 0x3BD PUSH2 0x5C9 JUMP JUMPDEST DUP3 PUSH2 0x63B JUMP JUMPDEST PUSH2 0x3DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1126 JUMP JUMPDEST PUSH2 0x3AD DUP4 DUP4 DUP4 PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x3AD DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x234 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x462 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0xF6E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x24B SWAP1 PUSH2 0x11EF JUMP JUMPDEST PUSH2 0x49F PUSH2 0x498 PUSH2 0x5C9 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x7ED JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4B4 PUSH2 0x4AE PUSH2 0x5C9 JUMP JUMPDEST DUP4 PUSH2 0x63B JUMP JUMPDEST PUSH2 0x4D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1126 JUMP JUMPDEST PUSH2 0x4DC DUP5 DUP5 DUP5 DUP5 PUSH2 0x890 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4ED DUP3 PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x509 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x513 PUSH2 0x8C3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x533 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x55E JUMP JUMPDEST DUP1 PUSH2 0x53D DUP5 PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x54E SWAP3 SWAP2 SWAP1 PUSH2 0xD5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x602 DUP3 PUSH2 0x405 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x646 DUP3 PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66D DUP4 PUSH2 0x405 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x6A8 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x69D DUP5 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x6B8 JUMPI POP PUSH2 0x6B8 DUP2 DUP6 PUSH2 0x565 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6D3 DUP3 PUSH2 0x405 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0x104D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x71F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0xE4A JUMP JUMPDEST PUSH2 0x72A DUP4 DUP4 DUP4 PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x735 PUSH1 0x0 DUP3 PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x75E SWAP1 DUP5 SWAP1 PUSH2 0x11AC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x78C SWAP1 DUP5 SWAP1 PUSH2 0x1180 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x81F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP1 PUSH2 0x883 SWAP1 DUP6 SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x89B DUP5 DUP5 DUP5 PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x8A7 DUP5 DUP5 DUP5 DUP5 PUSH2 0x9F0 JUMP JUMPDEST PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0xDF8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x8FA JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x237 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x924 JUMPI DUP1 PUSH2 0x90E DUP2 PUSH2 0x122A JUMP JUMPDEST SWAP2 POP PUSH2 0x91D SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1198 JUMP JUMPDEST SWAP2 POP PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x94D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x977 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x6B8 JUMPI PUSH2 0x98C PUSH1 0x1 DUP4 PUSH2 0x11AC JUMP JUMPDEST SWAP2 POP PUSH2 0x999 PUSH1 0xA DUP7 PUSH2 0x1245 JUMP JUMPDEST PUSH2 0x9A4 SWAP1 PUSH1 0x30 PUSH2 0x1180 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x9C7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x9E9 PUSH1 0xA DUP7 PUSH2 0x1198 JUMP JUMPDEST SWAP5 POP PUSH2 0x97B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA04 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB0B JUMP JUMPDEST ISZERO PUSH2 0xB00 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x150B7A02 PUSH2 0xA20 PUSH2 0x5C9 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA42 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA8C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA89 SWAP2 DUP2 ADD SWAP1 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAE6 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xABA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xABF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F5 SWAP1 PUSH2 0xDF8 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x6B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB39 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x55E DUP3 PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB54 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB5D DUP4 PUSH2 0xB11 JUMP JUMPDEST SWAP2 POP PUSH2 0xB6B PUSH1 0x20 DUP5 ADD PUSH2 0xB11 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB88 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB91 DUP5 PUSH2 0xB11 JUMP JUMPDEST SWAP3 POP PUSH2 0xB9F PUSH1 0x20 DUP6 ADD PUSH2 0xB11 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xBC4 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xBCD DUP6 PUSH2 0xB11 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 PUSH2 0xBDC DUP2 DUP8 ADD PUSH2 0xB11 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xBFF JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC12 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xC24 JUMPI PUSH2 0xC24 PUSH2 0x1285 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD DUP6 ADD DUP4 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC47 JUMPI PUSH2 0xC47 PUSH2 0x1285 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD DUP6 ADD DUP12 LT ISZERO PUSH2 0xC5D JUMPI DUP6 DUP7 REVERT JUMPDEST DUP2 DUP6 DUP6 ADD DUP7 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD SWAP1 SWAP4 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC8D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xC96 DUP4 PUSH2 0xB11 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCAA JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCC7 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xCD0 DUP4 PUSH2 0xB11 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCEF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x55E DUP2 PUSH2 0x129B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x55E DUP2 PUSH2 0x129B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD27 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD46 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xD6C DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x11C3 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xD80 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x11C3 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xDD0 SWAP1 DUP4 ADD DUP5 PUSH2 0xD2E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x55E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x38 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1193 JUMPI PUSH2 0x1193 PUSH2 0x1259 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11A7 JUMPI PUSH2 0x11A7 PUSH2 0x126F JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x11BE JUMPI PUSH2 0x11BE PUSH2 0x1259 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11DE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x11C6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4DC JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1203 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1224 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x123E JUMPI PUSH2 0x123E PUSH2 0x1259 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1254 JUMPI PUSH2 0x1254 PUSH2 0x126F JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x12B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x5D CODECOPY SMOD XOR 0xC2 0x2B JUMPDEST PUSH16 0xC3AD896774413D1E172AE24588D60801 CALL MSIZE BYTE 0xB2 PUSH14 0xE3DE64736F6C6343000800003300 ",
  "pcMap": {
    "0": {
      "offset": [
        586,
        13592
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "6": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "DUP1",
      "path": "9"
    },
    "7": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "8": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "12": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "DUP1",
      "path": "9"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "REVERT",
      "path": "9"
    },
    "16": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "17": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "POP",
      "path": "9"
    },
    "18": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "21": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "LT",
      "path": "9"
    },
    "22": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "26": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "CALLDATALOAD",
      "path": "9"
    },
    "29": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "SHR",
      "path": "9"
    },
    "32": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "DUP1",
      "path": "9"
    },
    "33": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "GT",
      "path": "9"
    },
    "39": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "43": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "DUP1",
      "path": "9"
    },
    "44": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "GT",
      "path": "9"
    },
    "50": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "54": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "DUP1",
      "path": "9"
    },
    "55": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "EQ",
      "path": "9"
    },
    "61": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1A8"
    },
    "64": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "65": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "DUP1",
      "path": "9"
    },
    "66": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "EQ",
      "path": "9"
    },
    "72": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1BB"
    },
    "75": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "76": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "DUP1",
      "path": "9"
    },
    "77": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "EQ",
      "path": "9"
    },
    "83": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1CE"
    },
    "86": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "87": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "DUP1",
      "path": "9"
    },
    "88": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "EQ",
      "path": "9"
    },
    "94": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1E1"
    },
    "97": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "98": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCF"
    },
    "101": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMP",
      "path": "9"
    },
    "102": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "103": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "DUP1",
      "path": "9"
    },
    "104": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "EQ",
      "path": "9"
    },
    "110": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16D"
    },
    "113": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "114": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "DUP1",
      "path": "9"
    },
    "115": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "EQ",
      "path": "9"
    },
    "121": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x180"
    },
    "124": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "125": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "DUP1",
      "path": "9"
    },
    "126": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "EQ",
      "path": "9"
    },
    "132": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1A0"
    },
    "135": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "136": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCF"
    },
    "139": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMP",
      "path": "9"
    },
    "140": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "141": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "DUP1",
      "path": "9"
    },
    "142": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "EQ",
      "path": "9"
    },
    "148": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "152": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "DUP1",
      "path": "9"
    },
    "153": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "EQ",
      "path": "9"
    },
    "159": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFD"
    },
    "162": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "163": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "DUP1",
      "path": "9"
    },
    "164": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "EQ",
      "path": "9"
    },
    "170": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x112"
    },
    "173": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "174": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "DUP1",
      "path": "9"
    },
    "175": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "EQ",
      "path": "9"
    },
    "181": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x132"
    },
    "184": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "185": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "DUP1",
      "path": "9"
    },
    "186": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "EQ",
      "path": "9"
    },
    "192": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x147"
    },
    "195": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "196": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "DUP1",
      "path": "9"
    },
    "197": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "EQ",
      "path": "9"
    },
    "203": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x15A"
    },
    "206": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "207": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "208": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "DUP1",
      "path": "9"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        586,
        13592
      ],
      "op": "REVERT",
      "path": "9"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCDE"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1528,
        1828
      ],
      "op": "JUMP",
      "path": "9"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1F4"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1528,
        1828
      ],
      "op": "JUMP",
      "path": "9"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "235": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF4"
    },
    "238": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "239": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "240": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDDA"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1528,
        1828
      ],
      "op": "JUMP",
      "path": "9"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "245": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "DUP1",
      "path": "9"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "SUB",
      "path": "9"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "252": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "RETURN",
      "path": "9"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2446,
        2544
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "254": {
      "fn": "ERC721.name",
      "offset": [
        2446,
        2544
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x105"
    },
    "257": {
      "fn": "ERC721.name",
      "offset": [
        2446,
        2544
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x23C"
    },
    "260": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2446,
        2544
      ],
      "op": "JUMP",
      "path": "9"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        2446,
        2544
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "262": {
      "fn": "ERC721.name",
      "offset": [
        2446,
        2544
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        2446,
        2544
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "265": {
      "fn": "ERC721.name",
      "offset": [
        2446,
        2544
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF4"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        2446,
        2544
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        2446,
        2544
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "270": {
      "fn": "ERC721.name",
      "offset": [
        2446,
        2544
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDE5"
    },
    "273": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2446,
        2544
      ],
      "op": "JUMP",
      "path": "9"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        3957,
        4174
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "275": {
      "fn": "ERC721.getApproved",
      "offset": [
        3957,
        4174
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x125"
    },
    "278": {
      "fn": "ERC721.getApproved",
      "offset": [
        3957,
        4174
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x120"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        3957,
        4174
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "282": {
      "fn": "ERC721.getApproved",
      "offset": [
        3957,
        4174
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "284": {
      "fn": "ERC721.getApproved",
      "offset": [
        3957,
        4174
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD16"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3957,
        4174
      ],
      "op": "JUMP",
      "path": "9"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        3957,
        4174
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "289": {
      "fn": "ERC721.getApproved",
      "offset": [
        3957,
        4174
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2CE"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3957,
        4174
      ],
      "op": "JUMP",
      "path": "9"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        3957,
        4174
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "294": {
      "fn": "ERC721.getApproved",
      "offset": [
        3957,
        4174
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "296": {
      "fn": "ERC721.getApproved",
      "offset": [
        3957,
        4174
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "297": {
      "fn": "ERC721.getApproved",
      "offset": [
        3957,
        4174
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF4"
    },
    "300": {
      "fn": "ERC721.getApproved",
      "offset": [
        3957,
        4174
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "301": {
      "fn": "ERC721.getApproved",
      "offset": [
        3957,
        4174
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "302": {
      "fn": "ERC721.getApproved",
      "offset": [
        3957,
        4174
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD89"
    },
    "305": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3957,
        4174
      ],
      "op": "JUMP",
      "path": "9"
    },
    "306": {
      "fn": "ERC721.approve",
      "offset": [
        3495,
        3896
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "307": {
      "fn": "ERC721.approve",
      "offset": [
        3495,
        3896
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x145"
    },
    "310": {
      "fn": "ERC721.approve",
      "offset": [
        3495,
        3896
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x140"
    },
    "313": {
      "fn": "ERC721.approve",
      "offset": [
        3495,
        3896
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "314": {
      "fn": "ERC721.approve",
      "offset": [
        3495,
        3896
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3495,
        3896
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCB5"
    },
    "319": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3495,
        3896
      ],
      "op": "JUMP",
      "path": "9"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3495,
        3896
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "321": {
      "fn": "ERC721.approve",
      "offset": [
        3495,
        3896
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x31A"
    },
    "324": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3495,
        3896
      ],
      "op": "JUMP",
      "path": "9"
    },
    "325": {
      "fn": "ERC721.approve",
      "offset": [
        3495,
        3896
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        3495,
        3896
      ],
      "op": "STOP",
      "path": "9"
    },
    "327": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        5014
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "328": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        5014
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x145"
    },
    "331": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        5014
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x155"
    },
    "334": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        5014
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "335": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        5014
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        5014
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB74"
    },
    "340": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4684,
        5014
      ],
      "op": "JUMP",
      "path": "9"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        5014
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "342": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        5014
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3B2"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4684,
        5014
      ],
      "op": "JUMP",
      "path": "9"
    },
    "346": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5080,
        5259
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "347": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5080,
        5259
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x145"
    },
    "350": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5080,
        5259
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x168"
    },
    "353": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5080,
        5259
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "354": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5080,
        5259
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5080,
        5259
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB74"
    },
    "359": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5080,
        5259
      ],
      "op": "JUMP",
      "path": "9"
    },
    "360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5080,
        5259
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "361": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5080,
        5259
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3EA"
    },
    "364": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5080,
        5259
      ],
      "op": "JUMP",
      "path": "9"
    },
    "365": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2149,
        2384
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "366": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2149,
        2384
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x125"
    },
    "369": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2149,
        2384
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x17B"
    },
    "372": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2149,
        2384
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "373": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2149,
        2384
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2149,
        2384
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD16"
    },
    "378": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2149,
        2384
      ],
      "op": "JUMP",
      "path": "9"
    },
    "379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2149,
        2384
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "380": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2149,
        2384
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x405"
    },
    "383": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2149,
        2384
      ],
      "op": "JUMP",
      "path": "9"
    },
    "384": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1887,
        2092
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "385": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1887,
        2092
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x193"
    },
    "388": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1887,
        2092
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x18E"
    },
    "391": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1887,
        2092
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "392": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1887,
        2092
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1887,
        2092
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB28"
    },
    "397": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1887,
        2092
      ],
      "op": "JUMP",
      "path": "9"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1887,
        2092
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "399": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1887,
        2092
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x43A"
    },
    "402": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1887,
        2092
      ],
      "op": "JUMP",
      "path": "9"
    },
    "403": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1887,
        2092
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1887,
        2092
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "406": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1887,
        2092
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1887,
        2092
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF4"
    },
    "410": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1887,
        2092
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "411": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1887,
        2092
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "412": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1887,
        2092
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1177"
    },
    "415": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1887,
        2092
      ],
      "op": "JUMP",
      "path": "9"
    },
    "416": {
      "fn": "ERC721.symbol",
      "offset": [
        2608,
        2710
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "417": {
      "fn": "ERC721.symbol",
      "offset": [
        2608,
        2710
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x105"
    },
    "420": {
      "fn": "ERC721.symbol",
      "offset": [
        2608,
        2710
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x47E"
    },
    "423": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2608,
        2710
      ],
      "op": "JUMP",
      "path": "9"
    },
    "424": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4241,
        4394
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "425": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4241,
        4394
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x145"
    },
    "428": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4241,
        4394
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1B6"
    },
    "431": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4241,
        4394
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "432": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4241,
        4394
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "434": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4241,
        4394
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xC7B"
    },
    "437": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4241,
        4394
      ],
      "op": "JUMP",
      "path": "9"
    },
    "438": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4241,
        4394
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4241,
        4394
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x48D"
    },
    "442": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4241,
        4394
      ],
      "op": "JUMP",
      "path": "9"
    },
    "443": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5325,
        5645
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "444": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5325,
        5645
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x145"
    },
    "447": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5325,
        5645
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1C9"
    },
    "450": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5325,
        5645
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "451": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5325,
        5645
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "453": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5325,
        5645
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xBAF"
    },
    "456": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5325,
        5645
      ],
      "op": "JUMP",
      "path": "9"
    },
    "457": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5325,
        5645
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5325,
        5645
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4A3"
    },
    "461": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5325,
        5645
      ],
      "op": "JUMP",
      "path": "9"
    },
    "462": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2776,
        3105
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "463": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2776,
        3105
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x105"
    },
    "466": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2776,
        3105
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1DC"
    },
    "469": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2776,
        3105
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "470": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2776,
        3105
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "472": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2776,
        3105
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD16"
    },
    "475": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2776,
        3105
      ],
      "op": "JUMP",
      "path": "9"
    },
    "476": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2776,
        3105
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "477": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2776,
        3105
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4E2"
    },
    "480": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2776,
        3105
      ],
      "op": "JUMP",
      "path": "9"
    },
    "481": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "482": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE7"
    },
    "485": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1EF"
    },
    "488": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "489": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "491": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB42"
    },
    "494": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMP",
      "path": "9"
    },
    "495": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x565"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMP",
      "path": "9"
    },
    "500": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "501": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1630,
        1634
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "507": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "509": {
      "op": "SHL"
    },
    "510": {
      "op": "SUB"
    },
    "511": {
      "op": "NOT"
    },
    "512": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1665,
        1705
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 0
    },
    "513": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1665,
        1705
      ],
      "op": "AND",
      "path": "9"
    },
    "514": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "519": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "521": {
      "op": "SHL"
    },
    "522": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1665,
        1705
      ],
      "op": "EQ",
      "path": "9"
    },
    "523": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1665,
        1705
      ],
      "op": "DUP1",
      "path": "9"
    },
    "524": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1665,
        1769
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x225"
    },
    "527": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1665,
        1769
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "528": {
      "op": "POP"
    },
    "529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "533": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "535": {
      "op": "SHL"
    },
    "536": {
      "op": "SUB"
    },
    "537": {
      "op": "NOT"
    },
    "538": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1721,
        1769
      ],
      "op": "DUP3",
      "path": "9"
    },
    "539": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1721,
        1769
      ],
      "op": "AND",
      "path": "9"
    },
    "540": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "545": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "547": {
      "op": "SHL"
    },
    "548": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1721,
        1769
      ],
      "op": "EQ",
      "path": "9"
    },
    "549": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1665,
        1769
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "550": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1665,
        1821
      ],
      "op": "DUP1",
      "path": "9"
    },
    "551": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1665,
        1821
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x234"
    },
    "554": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1665,
        1821
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "555": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1665,
        1821
      ],
      "op": "POP",
      "path": "9"
    },
    "556": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1785,
        1821
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x234"
    },
    "559": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1809,
        1820
      ],
      "op": "DUP3",
      "path": "9"
    },
    "560": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1785,
        1808
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x593"
    },
    "563": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1785,
        1821
      ],
      "op": "JUMP",
      "path": "9"
    },
    "564": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1785,
        1821
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1646,
        1821
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "566": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1646,
        1821
      ],
      "op": "POP",
      "path": "9"
    },
    "567": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "568": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "569": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "570": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1528,
        1828
      ],
      "op": "POP",
      "path": "9"
    },
    "571": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1528,
        1828
      ],
      "op": "JUMP",
      "path": "9"
    },
    "572": {
      "fn": "ERC721.name",
      "offset": [
        2446,
        2544
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "573": {
      "fn": "ERC721.name",
      "offset": [
        2500,
        2513
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "575": {
      "fn": "ERC721.name",
      "offset": [
        2532,
        2537
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 1,
      "value": "0x0"
    },
    "577": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DUP1",
      "path": "9"
    },
    "578": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "579": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x24B"
    },
    "582": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "583": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11EF"
    },
    "586": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2525,
        2537
      ],
      "op": "JUMP",
      "path": "9"
    },
    "587": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "588": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DUP1",
      "path": "9"
    },
    "589": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "591": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "ADD",
      "path": "9"
    },
    "592": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "594": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DUP1",
      "path": "9"
    },
    "595": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "596": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DIV",
      "path": "9"
    },
    "597": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "MUL",
      "path": "9"
    },
    "598": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "600": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "ADD",
      "path": "9"
    },
    "601": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "603": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "604": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "605": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DUP2",
      "path": "9"
    },
    "606": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "ADD",
      "path": "9"
    },
    "607": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "609": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "610": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DUP1",
      "path": "9"
    },
    "611": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "612": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "613": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "614": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DUP2",
      "path": "9"
    },
    "615": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DUP2",
      "path": "9"
    },
    "616": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "617": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "619": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "ADD",
      "path": "9"
    },
    "620": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DUP3",
      "path": "9"
    },
    "621": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DUP1",
      "path": "9"
    },
    "622": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "623": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x277"
    },
    "626": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "627": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11EF"
    },
    "630": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2525,
        2537
      ],
      "op": "JUMP",
      "path": "9"
    },
    "631": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "632": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DUP1",
      "path": "9"
    },
    "633": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2C4"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "638": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DUP1",
      "path": "9"
    },
    "639": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "LT",
      "path": "9"
    },
    "642": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x299"
    },
    "645": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "646": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "649": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DUP1",
      "path": "9"
    },
    "650": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DUP4",
      "path": "9"
    },
    "651": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "652": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DIV",
      "path": "9"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "MUL",
      "path": "9"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DUP4",
      "path": "9"
    },
    "655": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "656": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "657": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "ADD",
      "path": "9"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "661": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2C4"
    },
    "664": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "JUMP",
      "path": "9"
    },
    "665": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DUP3",
      "path": "9"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "ADD",
      "path": "9"
    },
    "668": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "669": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "670": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "679": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "680": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DUP2",
      "path": "9"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DUP2",
      "path": "9"
    },
    "683": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "687": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "ADD",
      "path": "9"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "691": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "ADD",
      "path": "9"
    },
    "692": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DUP1",
      "path": "9"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DUP4",
      "path": "9"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "GT",
      "path": "9"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2A7"
    },
    "698": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DUP3",
      "path": "9"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SUB",
      "path": "9"
    },
    "702": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "AND",
      "path": "9"
    },
    "705": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "DUP3",
      "path": "9"
    },
    "706": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "ADD",
      "path": "9"
    },
    "707": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "709": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "POP",
      "path": "9"
    },
    "710": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "POP",
      "path": "9"
    },
    "711": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "POP",
      "path": "9"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "POP",
      "path": "9"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "POP",
      "path": "9"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2537
      ],
      "op": "POP",
      "path": "9"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        2446,
        2544
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "717": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2446,
        2544
      ],
      "op": "JUMP",
      "path": "9"
    },
    "718": {
      "fn": "ERC721.getApproved",
      "offset": [
        3957,
        4174
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "719": {
      "fn": "ERC721.getApproved",
      "offset": [
        4033,
        4040
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "721": {
      "fn": "ERC721.getApproved",
      "offset": [
        4060,
        4076
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 2,
      "value": "0x2D9"
    },
    "724": {
      "fn": "ERC721.getApproved",
      "offset": [
        4068,
        4075
      ],
      "op": "DUP3",
      "path": "9"
    },
    "725": {
      "fn": "ERC721.getApproved",
      "offset": [
        4060,
        4067
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5AC"
    },
    "728": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4060,
        4076
      ],
      "op": "JUMP",
      "path": "9"
    },
    "729": {
      "branch": 51,
      "fn": "ERC721.getApproved",
      "offset": [
        4060,
        4076
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "730": {
      "fn": "ERC721.getApproved",
      "offset": [
        4052,
        4125
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2FE"
    },
    "733": {
      "branch": 51,
      "fn": "ERC721.getApproved",
      "offset": [
        4052,
        4125
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "734": {
      "fn": "ERC721.getApproved",
      "offset": [
        4052,
        4125
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "736": {
      "fn": "ERC721.getApproved",
      "offset": [
        4052,
        4125
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "737": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "741": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "743": {
      "op": "SHL"
    },
    "744": {
      "fn": "ERC721.getApproved",
      "offset": [
        4052,
        4125
      ],
      "op": "DUP2",
      "path": "9"
    },
    "745": {
      "fn": "ERC721.getApproved",
      "offset": [
        4052,
        4125
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "746": {
      "fn": "ERC721.getApproved",
      "offset": [
        4052,
        4125
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "748": {
      "fn": "ERC721.getApproved",
      "offset": [
        4052,
        4125
      ],
      "op": "ADD",
      "path": "9"
    },
    "749": {
      "fn": "ERC721.getApproved",
      "offset": [
        4052,
        4125
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F5"
    },
    "752": {
      "fn": "ERC721.getApproved",
      "offset": [
        4052,
        4125
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "753": {
      "fn": "ERC721.getApproved",
      "offset": [
        4052,
        4125
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1001"
    },
    "756": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4052,
        4125
      ],
      "op": "JUMP",
      "path": "9"
    },
    "757": {
      "fn": "ERC721.getApproved",
      "offset": [
        4052,
        4125
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "758": {
      "fn": "ERC721.getApproved",
      "offset": [
        4052,
        4125
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "760": {
      "fn": "ERC721.getApproved",
      "offset": [
        4052,
        4125
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "761": {
      "fn": "ERC721.getApproved",
      "offset": [
        4052,
        4125
      ],
      "op": "DUP1",
      "path": "9"
    },
    "762": {
      "fn": "ERC721.getApproved",
      "offset": [
        4052,
        4125
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "763": {
      "fn": "ERC721.getApproved",
      "offset": [
        4052,
        4125
      ],
      "op": "SUB",
      "path": "9"
    },
    "764": {
      "fn": "ERC721.getApproved",
      "offset": [
        4052,
        4125
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "765": {
      "fn": "ERC721.getApproved",
      "offset": [
        4052,
        4125
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "9"
    },
    "766": {
      "fn": "ERC721.getApproved",
      "offset": [
        4052,
        4125
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "767": {
      "op": "POP"
    },
    "768": {
      "fn": "ERC721.getApproved",
      "offset": [
        4143,
        4167
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 3,
      "value": "0x0"
    },
    "770": {
      "fn": "ERC721.getApproved",
      "offset": [
        4143,
        4167
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "771": {
      "fn": "ERC721.getApproved",
      "offset": [
        4143,
        4167
      ],
      "op": "DUP2",
      "path": "9"
    },
    "772": {
      "fn": "ERC721.getApproved",
      "offset": [
        4143,
        4167
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "773": {
      "fn": "ERC721.getApproved",
      "offset": [
        4143,
        4158
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "775": {
      "fn": "ERC721.getApproved",
      "offset": [
        4143,
        4167
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "777": {
      "fn": "ERC721.getApproved",
      "offset": [
        4143,
        4167
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "778": {
      "fn": "ERC721.getApproved",
      "offset": [
        4143,
        4167
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "780": {
      "fn": "ERC721.getApproved",
      "offset": [
        4143,
        4167
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "781": {
      "fn": "ERC721.getApproved",
      "offset": [
        4143,
        4167
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "782": {
      "fn": "ERC721.getApproved",
      "offset": [
        4143,
        4167
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "789": {
      "op": "SHL"
    },
    "790": {
      "op": "SUB"
    },
    "791": {
      "fn": "ERC721.getApproved",
      "offset": [
        4143,
        4167
      ],
      "op": "AND",
      "path": "9"
    },
    "792": {
      "fn": "ERC721.getApproved",
      "offset": [
        4143,
        4167
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "793": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3957,
        4174
      ],
      "op": "JUMP",
      "path": "9"
    },
    "794": {
      "fn": "ERC721.approve",
      "offset": [
        3495,
        3896
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "795": {
      "fn": "ERC721.approve",
      "offset": [
        3575,
        3588
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "797": {
      "fn": "ERC721.approve",
      "offset": [
        3591,
        3614
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x325"
    },
    "800": {
      "fn": "ERC721.approve",
      "offset": [
        3606,
        3613
      ],
      "op": "DUP3",
      "path": "9"
    },
    "801": {
      "fn": "ERC721.approve",
      "offset": [
        3591,
        3605
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x405"
    },
    "804": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3591,
        3614
      ],
      "op": "JUMP",
      "path": "9"
    },
    "805": {
      "fn": "ERC721.approve",
      "offset": [
        3591,
        3614
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "806": {
      "fn": "ERC721.approve",
      "offset": [
        3575,
        3614
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "807": {
      "fn": "ERC721.approve",
      "offset": [
        3575,
        3614
      ],
      "op": "POP",
      "path": "9"
    },
    "808": {
      "fn": "ERC721.approve",
      "offset": [
        3638,
        3643
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 4
    },
    "809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "815": {
      "op": "SHL"
    },
    "816": {
      "op": "SUB"
    },
    "817": {
      "fn": "ERC721.approve",
      "offset": [
        3632,
        3643
      ],
      "op": "AND",
      "path": "9"
    },
    "818": {
      "fn": "ERC721.approve",
      "offset": [
        3632,
        3634
      ],
      "op": "DUP4",
      "path": "9"
    },
    "819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "825": {
      "op": "SHL"
    },
    "826": {
      "op": "SUB"
    },
    "827": {
      "fn": "ERC721.approve",
      "offset": [
        3632,
        3643
      ],
      "op": "AND",
      "path": "9"
    },
    "828": {
      "fn": "ERC721.approve",
      "offset": [
        3632,
        3643
      ],
      "op": "EQ",
      "path": "9"
    },
    "829": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        3632,
        3643
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "830": {
      "fn": "ERC721.approve",
      "offset": [
        3624,
        3681
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x359"
    },
    "833": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        3624,
        3681
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "834": {
      "fn": "ERC721.approve",
      "offset": [
        3624,
        3681
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "836": {
      "fn": "ERC721.approve",
      "offset": [
        3624,
        3681
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "837": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "841": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "843": {
      "op": "SHL"
    },
    "844": {
      "fn": "ERC721.approve",
      "offset": [
        3624,
        3681
      ],
      "op": "DUP2",
      "path": "9"
    },
    "845": {
      "fn": "ERC721.approve",
      "offset": [
        3624,
        3681
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "846": {
      "fn": "ERC721.approve",
      "offset": [
        3624,
        3681
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "848": {
      "fn": "ERC721.approve",
      "offset": [
        3624,
        3681
      ],
      "op": "ADD",
      "path": "9"
    },
    "849": {
      "fn": "ERC721.approve",
      "offset": [
        3624,
        3681
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F5"
    },
    "852": {
      "fn": "ERC721.approve",
      "offset": [
        3624,
        3681
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "853": {
      "fn": "ERC721.approve",
      "offset": [
        3624,
        3681
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x10E5"
    },
    "856": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3624,
        3681
      ],
      "op": "JUMP",
      "path": "9"
    },
    "857": {
      "fn": "ERC721.approve",
      "offset": [
        3624,
        3681
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "858": {
      "fn": "ERC721.approve",
      "offset": [
        3729,
        3734
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 5
    },
    "859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "865": {
      "op": "SHL"
    },
    "866": {
      "op": "SUB"
    },
    "867": {
      "fn": "ERC721.approve",
      "offset": [
        3713,
        3734
      ],
      "op": "AND",
      "path": "9"
    },
    "868": {
      "fn": "ERC721.approve",
      "offset": [
        3713,
        3725
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x36B"
    },
    "871": {
      "fn": "ERC721.approve",
      "offset": [
        3713,
        3723
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5C9"
    },
    "874": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3713,
        3725
      ],
      "op": "JUMP",
      "path": "9"
    },
    "875": {
      "fn": "ERC721.approve",
      "offset": [
        3713,
        3725
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "882": {
      "op": "SHL"
    },
    "883": {
      "op": "SUB"
    },
    "884": {
      "fn": "ERC721.approve",
      "offset": [
        3713,
        3734
      ],
      "op": "AND",
      "path": "9"
    },
    "885": {
      "branch": 53,
      "fn": "ERC721.approve",
      "offset": [
        3713,
        3734
      ],
      "op": "EQ",
      "path": "9"
    },
    "886": {
      "fn": "ERC721.approve",
      "offset": [
        3713,
        3775
      ],
      "op": "DUP1",
      "path": "9"
    },
    "887": {
      "fn": "ERC721.approve",
      "offset": [
        3713,
        3775
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x387"
    },
    "890": {
      "branch": 53,
      "fn": "ERC721.approve",
      "offset": [
        3713,
        3775
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "891": {
      "fn": "ERC721.approve",
      "offset": [
        3713,
        3775
      ],
      "op": "POP",
      "path": "9"
    },
    "892": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3775
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x387"
    },
    "895": {
      "fn": "ERC721.approve",
      "offset": [
        3755,
        3760
      ],
      "op": "DUP2",
      "path": "9"
    },
    "896": {
      "fn": "ERC721.approve",
      "offset": [
        3762,
        3774
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1EF"
    },
    "899": {
      "fn": "ERC721.approve",
      "offset": [
        3762,
        3772
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5C9"
    },
    "902": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3762,
        3774
      ],
      "op": "JUMP",
      "path": "9"
    },
    "903": {
      "branch": 54,
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3775
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "904": {
      "fn": "ERC721.approve",
      "offset": [
        3692,
        3857
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3A3"
    },
    "907": {
      "branch": 54,
      "fn": "ERC721.approve",
      "offset": [
        3692,
        3857
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "908": {
      "fn": "ERC721.approve",
      "offset": [
        3692,
        3857
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "910": {
      "fn": "ERC721.approve",
      "offset": [
        3692,
        3857
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "911": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "915": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "917": {
      "op": "SHL"
    },
    "918": {
      "fn": "ERC721.approve",
      "offset": [
        3692,
        3857
      ],
      "op": "DUP2",
      "path": "9"
    },
    "919": {
      "fn": "ERC721.approve",
      "offset": [
        3692,
        3857
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "920": {
      "fn": "ERC721.approve",
      "offset": [
        3692,
        3857
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "922": {
      "fn": "ERC721.approve",
      "offset": [
        3692,
        3857
      ],
      "op": "ADD",
      "path": "9"
    },
    "923": {
      "fn": "ERC721.approve",
      "offset": [
        3692,
        3857
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F5"
    },
    "926": {
      "fn": "ERC721.approve",
      "offset": [
        3692,
        3857
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "927": {
      "fn": "ERC721.approve",
      "offset": [
        3692,
        3857
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF11"
    },
    "930": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3692,
        3857
      ],
      "op": "JUMP",
      "path": "9"
    },
    "931": {
      "fn": "ERC721.approve",
      "offset": [
        3692,
        3857
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "932": {
      "fn": "ERC721.approve",
      "offset": [
        3868,
        3889
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 6,
      "value": "0x3AD"
    },
    "935": {
      "fn": "ERC721.approve",
      "offset": [
        3877,
        3879
      ],
      "op": "DUP4",
      "path": "9"
    },
    "936": {
      "fn": "ERC721.approve",
      "offset": [
        3881,
        3888
      ],
      "op": "DUP4",
      "path": "9"
    },
    "937": {
      "fn": "ERC721.approve",
      "offset": [
        3868,
        3876
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5CD"
    },
    "940": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3868,
        3889
      ],
      "op": "JUMP",
      "path": "9"
    },
    "941": {
      "fn": "ERC721.approve",
      "offset": [
        3868,
        3889
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "942": {
      "fn": "ERC721.approve",
      "offset": [
        3495,
        3896
      ],
      "op": "POP",
      "path": "9"
    },
    "943": {
      "fn": "ERC721.approve",
      "offset": [
        3495,
        3896
      ],
      "op": "POP",
      "path": "9"
    },
    "944": {
      "fn": "ERC721.approve",
      "offset": [
        3495,
        3896
      ],
      "op": "POP",
      "path": "9"
    },
    "945": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3495,
        3896
      ],
      "op": "JUMP",
      "path": "9"
    },
    "946": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4684,
        5014
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "947": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4873,
        4914
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 7,
      "value": "0x3C3"
    },
    "950": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4904
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3BD"
    },
    "953": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4902
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5C9"
    },
    "956": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4892,
        4904
      ],
      "op": "JUMP",
      "path": "9"
    },
    "957": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4904
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "958": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4906,
        4913
      ],
      "op": "DUP3",
      "path": "9"
    },
    "959": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4873,
        4891
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x63B"
    },
    "962": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4873,
        4914
      ],
      "op": "JUMP",
      "path": "9"
    },
    "963": {
      "branch": 55,
      "fn": "ERC721.transferFrom",
      "offset": [
        4873,
        4914
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "964": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4865,
        4968
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3DF"
    },
    "967": {
      "branch": 55,
      "fn": "ERC721.transferFrom",
      "offset": [
        4865,
        4968
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "968": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4865,
        4968
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "970": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4865,
        4968
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "971": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "975": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "977": {
      "op": "SHL"
    },
    "978": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4865,
        4968
      ],
      "op": "DUP2",
      "path": "9"
    },
    "979": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4865,
        4968
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "980": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4865,
        4968
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "982": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4865,
        4968
      ],
      "op": "ADD",
      "path": "9"
    },
    "983": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4865,
        4968
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F5"
    },
    "986": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4865,
        4968
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "987": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4865,
        4968
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1126"
    },
    "990": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4865,
        4968
      ],
      "op": "JUMP",
      "path": "9"
    },
    "991": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4865,
        4968
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "992": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4979,
        5007
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 8,
      "value": "0x3AD"
    },
    "995": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4989,
        4993
      ],
      "op": "DUP4",
      "path": "9"
    },
    "996": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4995,
        4997
      ],
      "op": "DUP4",
      "path": "9"
    },
    "997": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4999,
        5006
      ],
      "op": "DUP4",
      "path": "9"
    },
    "998": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4979,
        4988
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6C0"
    },
    "1001": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4979,
        5007
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1002": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5080,
        5259
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1003": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5213,
        5252
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 9,
      "value": "0x3AD"
    },
    "1006": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5230,
        5234
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1007": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5236,
        5238
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1008": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5247
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1009": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5213,
        5252
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1011": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5213,
        5252
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1012": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5213,
        5252
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1013": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5213,
        5252
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1015": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5213,
        5252
      ],
      "op": "ADD",
      "path": "9"
    },
    "1016": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5213,
        5252
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1018": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5213,
        5252
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1019": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5213,
        5252
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1020": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5213,
        5252
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1022": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5213,
        5252
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1023": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5213,
        5252
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1024": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5213,
        5252
      ],
      "op": "POP",
      "path": "9"
    },
    "1025": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5213,
        5229
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4A3"
    },
    "1028": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5213,
        5252
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1029": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2149,
        2384
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1030": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2221,
        2228
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1032": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2272
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1033": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2272
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1034": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2272
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1035": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2263
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1037": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2272
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1039": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2272
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1040": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2272
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1042": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2272
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1043": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2272
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1044": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2272
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1051": {
      "op": "SHL"
    },
    "1052": {
      "op": "SUB"
    },
    "1053": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2256,
        2272
      ],
      "op": "AND",
      "path": "9"
    },
    "1054": {
      "branch": 56,
      "fn": "ERC721.ownerOf",
      "offset": [
        2290,
        2309
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 10
    },
    "1055": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2282,
        2355
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x234"
    },
    "1058": {
      "branch": 56,
      "fn": "ERC721.ownerOf",
      "offset": [
        2282,
        2355
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1059": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2282,
        2355
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1061": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2282,
        2355
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1062": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1068": {
      "op": "SHL"
    },
    "1069": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2282,
        2355
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1070": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2282,
        2355
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1071": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2282,
        2355
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1073": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2282,
        2355
      ],
      "op": "ADD",
      "path": "9"
    },
    "1074": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2282,
        2355
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F5"
    },
    "1077": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2282,
        2355
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1078": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2282,
        2355
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xFB8"
    },
    "1081": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2282,
        2355
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1082": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1887,
        2092
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1083": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1959,
        1966
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1091": {
      "op": "SHL"
    },
    "1092": {
      "op": "SUB"
    },
    "1093": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1986,
        2005
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 11
    },
    "1094": {
      "branch": 57,
      "fn": "ERC721.balanceOf",
      "offset": [
        1986,
        2005
      ],
      "op": "AND",
      "path": "9"
    },
    "1095": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1978,
        2052
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x462"
    },
    "1098": {
      "branch": 57,
      "fn": "ERC721.balanceOf",
      "offset": [
        1978,
        2052
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1099": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1978,
        2052
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1101": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1978,
        2052
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1102": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1108": {
      "op": "SHL"
    },
    "1109": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1978,
        2052
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1110": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1978,
        2052
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1111": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1978,
        2052
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1113": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1978,
        2052
      ],
      "op": "ADD",
      "path": "9"
    },
    "1114": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1978,
        2052
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F5"
    },
    "1117": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1978,
        2052
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1118": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1978,
        2052
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xF6E"
    },
    "1121": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1978,
        2052
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1122": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1978,
        2052
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1123": {
      "op": "POP"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1130": {
      "op": "SHL"
    },
    "1131": {
      "op": "SUB"
    },
    "1132": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2069,
        2085
      ],
      "op": "AND",
      "path": "9",
      "statement": 12
    },
    "1133": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2069,
        2085
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1135": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2069,
        2085
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1136": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2069,
        2085
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1137": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2069,
        2085
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1138": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2069,
        2078
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "1140": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2069,
        2085
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1142": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2069,
        2085
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1143": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2069,
        2085
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1145": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2069,
        2085
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1146": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2069,
        2085
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1147": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2069,
        2085
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1148": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2069,
        2085
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1149": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1887,
        2092
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1150": {
      "fn": "ERC721.symbol",
      "offset": [
        2608,
        2710
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1151": {
      "fn": "ERC721.symbol",
      "offset": [
        2664,
        2677
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "1153": {
      "fn": "ERC721.symbol",
      "offset": [
        2696,
        2703
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 13,
      "value": "0x1"
    },
    "1155": {
      "fn": "ERC721.symbol",
      "offset": [
        2689,
        2703
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1156": {
      "fn": "ERC721.symbol",
      "offset": [
        2689,
        2703
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1157": {
      "fn": "ERC721.symbol",
      "offset": [
        2689,
        2703
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x24B"
    },
    "1160": {
      "fn": "ERC721.symbol",
      "offset": [
        2689,
        2703
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1161": {
      "fn": "ERC721.symbol",
      "offset": [
        2689,
        2703
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11EF"
    },
    "1164": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2689,
        2703
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1165": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4241,
        4394
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1166": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4335,
        4387
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 14,
      "value": "0x49F"
    },
    "1169": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4354,
        4366
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x498"
    },
    "1172": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4354,
        4364
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5C9"
    },
    "1175": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4354,
        4366
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1176": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4354,
        4366
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1177": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4368,
        4376
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1178": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4378,
        4386
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1179": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4335,
        4353
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x7ED"
    },
    "1182": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4335,
        4387
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1183": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4335,
        4387
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1184": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4241,
        4394
      ],
      "op": "POP",
      "path": "9"
    },
    "1185": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4241,
        4394
      ],
      "op": "POP",
      "path": "9"
    },
    "1186": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4241,
        4394
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1187": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5325,
        5645
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1188": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5494,
        5535
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 15,
      "value": "0x4B4"
    },
    "1191": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5525
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4AE"
    },
    "1194": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5523
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5C9"
    },
    "1197": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5513,
        5525
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1198": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5525
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1199": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5527,
        5534
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1200": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5494,
        5512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x63B"
    },
    "1203": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5494,
        5535
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1204": {
      "branch": 58,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5494,
        5535
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1205": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5486,
        5589
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4D0"
    },
    "1208": {
      "branch": 58,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5486,
        5589
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1209": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5486,
        5589
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1211": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5486,
        5589
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1212": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1218": {
      "op": "SHL"
    },
    "1219": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5486,
        5589
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1220": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5486,
        5589
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1221": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5486,
        5589
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1223": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5486,
        5589
      ],
      "op": "ADD",
      "path": "9"
    },
    "1224": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5486,
        5589
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F5"
    },
    "1227": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5486,
        5589
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1228": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5486,
        5589
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1126"
    },
    "1231": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5486,
        5589
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1232": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5486,
        5589
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1233": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5599,
        5638
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 16,
      "value": "0x4DC"
    },
    "1236": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5613,
        5617
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1237": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5619,
        5621
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1238": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5623,
        5630
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1239": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5632,
        5637
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1240": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5599,
        5612
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x890"
    },
    "1243": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5599,
        5638
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1244": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5599,
        5638
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1245": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5325,
        5645
      ],
      "op": "POP",
      "path": "9"
    },
    "1246": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5325,
        5645
      ],
      "op": "POP",
      "path": "9"
    },
    "1247": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5325,
        5645
      ],
      "op": "POP",
      "path": "9"
    },
    "1248": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5325,
        5645
      ],
      "op": "POP",
      "path": "9"
    },
    "1249": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5325,
        5645
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1250": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2776,
        3105
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1251": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2849,
        2862
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "1253": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2882,
        2898
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 17,
      "value": "0x4ED"
    },
    "1256": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2890,
        2897
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1257": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2882,
        2889
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5AC"
    },
    "1260": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2882,
        2898
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1261": {
      "branch": 59,
      "fn": "ERC721.tokenURI",
      "offset": [
        2882,
        2898
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1262": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2874,
        2950
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x509"
    },
    "1265": {
      "branch": 59,
      "fn": "ERC721.tokenURI",
      "offset": [
        2874,
        2950
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1266": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2874,
        2950
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1268": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2874,
        2950
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1269": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1275": {
      "op": "SHL"
    },
    "1276": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2874,
        2950
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1277": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2874,
        2950
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1278": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2874,
        2950
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1280": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2874,
        2950
      ],
      "op": "ADD",
      "path": "9"
    },
    "1281": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2874,
        2950
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F5"
    },
    "1284": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2874,
        2950
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1285": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2874,
        2950
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1096"
    },
    "1288": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2874,
        2950
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1289": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2874,
        2950
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1290": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2961,
        2982
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1292": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2985,
        2995
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x513"
    },
    "1295": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2985,
        2993
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8C3"
    },
    "1298": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2985,
        2995
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1299": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2985,
        2995
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1300": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2961,
        2995
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1301": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2961,
        2995
      ],
      "op": "POP",
      "path": "9"
    },
    "1302": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3036,
        3037
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 18,
      "value": "0x0"
    },
    "1304": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3018,
        3025
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1305": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3033
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1306": {
      "branch": 60,
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3037
      ],
      "op": "GT",
      "path": "9"
    },
    "1307": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3098
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x533"
    },
    "1310": {
      "branch": 60,
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3098
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1311": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3098
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1313": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3098
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1314": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3098
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1315": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3098
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1317": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3098
      ],
      "op": "ADD",
      "path": "9"
    },
    "1318": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3098
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1320": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3098
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1321": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3098
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1322": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3098
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1324": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3098
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1325": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3098
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1326": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3098
      ],
      "op": "POP",
      "path": "9"
    },
    "1327": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3098
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x55E"
    },
    "1330": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3098
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1331": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3098
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1332": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3064,
        3071
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1333": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3073,
        3091
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x53D"
    },
    "1336": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3073,
        3080
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1337": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3073,
        3089
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8D5"
    },
    "1340": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3073,
        3091
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1341": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3073,
        3091
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1342": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1344": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1345": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1347": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "ADD",
      "path": "9"
    },
    "1348": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x54E"
    },
    "1351": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1352": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1353": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1354": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD5A"
    },
    "1357": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3047,
        3092
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1358": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1359": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1361": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1362": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1364": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1365": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1366": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "SUB",
      "path": "9"
    },
    "1367": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "SUB",
      "path": "9"
    },
    "1368": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1369": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1370": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1371": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1373": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3092
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1374": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3098
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1375": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3005,
        3098
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1376": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2776,
        3105
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1377": {
      "op": "POP"
    },
    "1378": {
      "op": "POP"
    },
    "1379": {
      "op": "POP"
    },
    "1380": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2776,
        3105
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1381": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1388": {
      "op": "SHL"
    },
    "1389": {
      "op": "SUB"
    },
    "1390": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "SWAP2",
      "path": "9",
      "statement": 19
    },
    "1391": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1392": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "AND",
      "path": "9"
    },
    "1393": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4557,
        4561
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1395": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1396": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1397": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1398": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4598
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5"
    },
    "1400": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1402": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1403": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1404": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1405": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1407": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1408": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1409": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4605
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1410": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1411": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1412": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "1413": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "AND",
      "path": "9"
    },
    "1414": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1415": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1416": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1417": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1418": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1419": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1420": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1421": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1422": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "1424": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "AND",
      "path": "9"
    },
    "1425": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4580,
        4615
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1426": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "o",
      "offset": [
        4460,
        4622
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1427": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1434": {
      "op": "SHL"
    },
    "1435": {
      "op": "SUB"
    },
    "1436": {
      "op": "NOT"
    },
    "1437": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 20
    },
    "1438": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "4"
    },
    "1439": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1446": {
      "op": "SHL"
    },
    "1447": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "4"
    },
    "1448": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1449": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1450": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "POP",
      "path": "4"
    },
    "1451": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        829,
        984
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1452": {
      "fn": "ERC721._exists",
      "offset": [
        7117,
        7242
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1453": {
      "fn": "ERC721._exists",
      "offset": [
        7182,
        7186
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1455": {
      "fn": "ERC721._exists",
      "offset": [
        7205,
        7221
      ],
      "op": "SWAP1",
      "path": "9",
      "statement": 21
    },
    "1456": {
      "fn": "ERC721._exists",
      "offset": [
        7205,
        7221
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1457": {
      "fn": "ERC721._exists",
      "offset": [
        7205,
        7221
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1458": {
      "fn": "ERC721._exists",
      "offset": [
        7205,
        7212
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1460": {
      "fn": "ERC721._exists",
      "offset": [
        7205,
        7221
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1462": {
      "fn": "ERC721._exists",
      "offset": [
        7205,
        7221
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1463": {
      "fn": "ERC721._exists",
      "offset": [
        7205,
        7221
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1465": {
      "fn": "ERC721._exists",
      "offset": [
        7205,
        7221
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1466": {
      "fn": "ERC721._exists",
      "offset": [
        7205,
        7221
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1467": {
      "fn": "ERC721._exists",
      "offset": [
        7205,
        7221
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1472": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1474": {
      "op": "SHL"
    },
    "1475": {
      "op": "SUB"
    },
    "1476": {
      "fn": "ERC721._exists",
      "offset": [
        7205,
        7221
      ],
      "op": "AND",
      "path": "9"
    },
    "1477": {
      "fn": "ERC721._exists",
      "offset": [
        7205,
        7235
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1478": {
      "fn": "ERC721._exists",
      "offset": [
        7205,
        7235
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1479": {
      "fn": "ERC721._exists",
      "offset": [
        7205,
        7235
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1480": {
      "fn": "ERC721._exists",
      "jump": "o",
      "offset": [
        7117,
        7242
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1481": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1482": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 22
    },
    "1483": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1484": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1485": {
      "fn": "ERC721._approve",
      "offset": [
        10968,
        11139
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1486": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11066
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 23,
      "value": "0x0"
    },
    "1488": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11066
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1489": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11066
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1490": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11066
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1491": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11057
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1493": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11066
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1495": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11066
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1496": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11066
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1498": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11066
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1499": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11066
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1500": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11071
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1501": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11071
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1508": {
      "op": "SHL"
    },
    "1509": {
      "op": "SUB"
    },
    "1510": {
      "op": "NOT"
    },
    "1511": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11071
      ],
      "op": "AND",
      "path": "9"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1518": {
      "op": "SHL"
    },
    "1519": {
      "op": "SUB"
    },
    "1520": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11071
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1521": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11071
      ],
      "op": "AND",
      "path": "9"
    },
    "1522": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11071
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1523": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11071
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1524": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11071
      ],
      "op": "OR",
      "path": "9"
    },
    "1525": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11071
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1526": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11071
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1527": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11071
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1528": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11066
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1529": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11066
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1530": {
      "fn": "ERC721._approve",
      "offset": [
        11095,
        11118
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 24,
      "value": "0x602"
    },
    "1533": {
      "fn": "ERC721._approve",
      "offset": [
        11042,
        11066
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1534": {
      "fn": "ERC721._approve",
      "offset": [
        11095,
        11109
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x405"
    },
    "1537": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11095,
        11118
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1538": {
      "fn": "ERC721._approve",
      "offset": [
        11095,
        11118
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1545": {
      "op": "SHL"
    },
    "1546": {
      "op": "SUB"
    },
    "1547": {
      "fn": "ERC721._approve",
      "offset": [
        11086,
        11132
      ],
      "op": "AND",
      "path": "9"
    },
    "1548": {
      "fn": "ERC721._approve",
      "offset": [
        11086,
        11132
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1581": {
      "fn": "ERC721._approve",
      "offset": [
        11086,
        11132
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1583": {
      "fn": "ERC721._approve",
      "offset": [
        11086,
        11132
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1584": {
      "fn": "ERC721._approve",
      "offset": [
        11086,
        11132
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1586": {
      "fn": "ERC721._approve",
      "offset": [
        11086,
        11132
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1587": {
      "fn": "ERC721._approve",
      "offset": [
        11086,
        11132
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1588": {
      "fn": "ERC721._approve",
      "offset": [
        11086,
        11132
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1589": {
      "fn": "ERC721._approve",
      "offset": [
        11086,
        11132
      ],
      "op": "SUB",
      "path": "9"
    },
    "1590": {
      "fn": "ERC721._approve",
      "offset": [
        11086,
        11132
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1591": {
      "fn": "ERC721._approve",
      "offset": [
        11086,
        11132
      ],
      "op": "LOG4",
      "path": "9"
    },
    "1592": {
      "fn": "ERC721._approve",
      "offset": [
        10968,
        11139
      ],
      "op": "POP",
      "path": "9"
    },
    "1593": {
      "fn": "ERC721._approve",
      "offset": [
        10968,
        11139
      ],
      "op": "POP",
      "path": "9"
    },
    "1594": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        10968,
        11139
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1595": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7400,
        7744
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1596": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7493,
        7497
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1598": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7517,
        7533
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 25,
      "value": "0x646"
    },
    "1601": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7525,
        7532
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1602": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7517,
        7524
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5AC"
    },
    "1605": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7517,
        7533
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1606": {
      "branch": 61,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7517,
        7533
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1607": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7509,
        7582
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x662"
    },
    "1610": {
      "branch": 61,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7509,
        7582
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1611": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7509,
        7582
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1613": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7509,
        7582
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1614": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1620": {
      "op": "SHL"
    },
    "1621": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7509,
        7582
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1622": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7509,
        7582
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1623": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7509,
        7582
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1625": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7509,
        7582
      ],
      "op": "ADD",
      "path": "9"
    },
    "1626": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7509,
        7582
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F5"
    },
    "1629": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7509,
        7582
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1630": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7509,
        7582
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xEC5"
    },
    "1633": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7509,
        7582
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1634": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7509,
        7582
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1635": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7592,
        7605
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1637": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7608,
        7631
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x66D"
    },
    "1640": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7623,
        7630
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1641": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7608,
        7622
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x405"
    },
    "1644": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7608,
        7631
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1645": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7608,
        7631
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1646": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7592,
        7631
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1647": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7592,
        7631
      ],
      "op": "POP",
      "path": "9"
    },
    "1648": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7660,
        7665
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 26
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1655": {
      "op": "SHL"
    },
    "1656": {
      "op": "SUB"
    },
    "1657": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7649,
        7665
      ],
      "op": "AND",
      "path": "9"
    },
    "1658": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7649,
        7656
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1665": {
      "op": "SHL"
    },
    "1666": {
      "op": "SUB"
    },
    "1667": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7649,
        7665
      ],
      "op": "AND",
      "path": "9"
    },
    "1668": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7649,
        7665
      ],
      "op": "EQ",
      "path": "9"
    },
    "1669": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7649,
        7700
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1670": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7649,
        7700
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6A8"
    },
    "1673": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7649,
        7700
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1674": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7649,
        7700
      ],
      "op": "POP",
      "path": "9"
    },
    "1675": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7693,
        7700
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1682": {
      "op": "SHL"
    },
    "1683": {
      "op": "SUB"
    },
    "1684": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7669,
        7700
      ],
      "op": "AND",
      "path": "9"
    },
    "1685": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7669,
        7689
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x69D"
    },
    "1688": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7681,
        7688
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1689": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7669,
        7680
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2CE"
    },
    "1692": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7669,
        7689
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1693": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7669,
        7689
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1700": {
      "op": "SHL"
    },
    "1701": {
      "op": "SUB"
    },
    "1702": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7669,
        7700
      ],
      "op": "AND",
      "path": "9"
    },
    "1703": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7669,
        7700
      ],
      "op": "EQ",
      "path": "9"
    },
    "1704": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7649,
        7700
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1705": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7649,
        7736
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1706": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7649,
        7736
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6B8"
    },
    "1709": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7649,
        7736
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1710": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7649,
        7736
      ],
      "op": "POP",
      "path": "9"
    },
    "1711": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7704,
        7736
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6B8"
    },
    "1714": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7721,
        7726
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1715": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7728,
        7735
      ],
      "op": "DUP6",
      "path": "9"
    },
    "1716": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7704,
        7720
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x565"
    },
    "1719": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7704,
        7736
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1720": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7704,
        7736
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1721": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7641,
        7737
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "1722": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7400,
        7744
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1723": {
      "op": "POP"
    },
    "1724": {
      "op": "POP"
    },
    "1725": {
      "op": "POP"
    },
    "1726": {
      "op": "POP"
    },
    "1727": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7400,
        7744
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1728": {
      "fn": "ERC721._transfer",
      "offset": [
        10297,
        10857
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1729": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10455
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 27
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1736": {
      "op": "SHL"
    },
    "1737": {
      "op": "SUB"
    },
    "1738": {
      "fn": "ERC721._transfer",
      "offset": [
        10424,
        10455
      ],
      "op": "AND",
      "path": "9"
    },
    "1739": {
      "fn": "ERC721._transfer",
      "offset": [
        10424,
        10447
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6D3"
    },
    "1742": {
      "fn": "ERC721._transfer",
      "offset": [
        10439,
        10446
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1743": {
      "fn": "ERC721._transfer",
      "offset": [
        10424,
        10438
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x405"
    },
    "1746": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10424,
        10447
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1747": {
      "fn": "ERC721._transfer",
      "offset": [
        10424,
        10447
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1754": {
      "op": "SHL"
    },
    "1755": {
      "op": "SUB"
    },
    "1756": {
      "fn": "ERC721._transfer",
      "offset": [
        10424,
        10455
      ],
      "op": "AND",
      "path": "9"
    },
    "1757": {
      "branch": 62,
      "fn": "ERC721._transfer",
      "offset": [
        10424,
        10455
      ],
      "op": "EQ",
      "path": "9"
    },
    "1758": {
      "fn": "ERC721._transfer",
      "offset": [
        10416,
        10501
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6F9"
    },
    "1761": {
      "branch": 62,
      "fn": "ERC721._transfer",
      "offset": [
        10416,
        10501
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1762": {
      "fn": "ERC721._transfer",
      "offset": [
        10416,
        10501
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1764": {
      "fn": "ERC721._transfer",
      "offset": [
        10416,
        10501
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1765": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1771": {
      "op": "SHL"
    },
    "1772": {
      "fn": "ERC721._transfer",
      "offset": [
        10416,
        10501
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1773": {
      "fn": "ERC721._transfer",
      "offset": [
        10416,
        10501
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1774": {
      "fn": "ERC721._transfer",
      "offset": [
        10416,
        10501
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1776": {
      "fn": "ERC721._transfer",
      "offset": [
        10416,
        10501
      ],
      "op": "ADD",
      "path": "9"
    },
    "1777": {
      "fn": "ERC721._transfer",
      "offset": [
        10416,
        10501
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F5"
    },
    "1780": {
      "fn": "ERC721._transfer",
      "offset": [
        10416,
        10501
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1781": {
      "fn": "ERC721._transfer",
      "offset": [
        10416,
        10501
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x104D"
    },
    "1784": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10416,
        10501
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1785": {
      "fn": "ERC721._transfer",
      "offset": [
        10416,
        10501
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1792": {
      "op": "SHL"
    },
    "1793": {
      "op": "SUB"
    },
    "1794": {
      "fn": "ERC721._transfer",
      "offset": [
        10519,
        10535
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 28
    },
    "1795": {
      "branch": 63,
      "fn": "ERC721._transfer",
      "offset": [
        10519,
        10535
      ],
      "op": "AND",
      "path": "9"
    },
    "1796": {
      "fn": "ERC721._transfer",
      "offset": [
        10511,
        10576
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x71F"
    },
    "1799": {
      "branch": 63,
      "fn": "ERC721._transfer",
      "offset": [
        10511,
        10576
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1800": {
      "fn": "ERC721._transfer",
      "offset": [
        10511,
        10576
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1802": {
      "fn": "ERC721._transfer",
      "offset": [
        10511,
        10576
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1803": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1809": {
      "op": "SHL"
    },
    "1810": {
      "fn": "ERC721._transfer",
      "offset": [
        10511,
        10576
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1811": {
      "fn": "ERC721._transfer",
      "offset": [
        10511,
        10576
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1812": {
      "fn": "ERC721._transfer",
      "offset": [
        10511,
        10576
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1814": {
      "fn": "ERC721._transfer",
      "offset": [
        10511,
        10576
      ],
      "op": "ADD",
      "path": "9"
    },
    "1815": {
      "fn": "ERC721._transfer",
      "offset": [
        10511,
        10576
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F5"
    },
    "1818": {
      "fn": "ERC721._transfer",
      "offset": [
        10511,
        10576
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1819": {
      "fn": "ERC721._transfer",
      "offset": [
        10511,
        10576
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE4A"
    },
    "1822": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10511,
        10576
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1823": {
      "fn": "ERC721._transfer",
      "offset": [
        10511,
        10576
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1824": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10626
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 29,
      "value": "0x72A"
    },
    "1827": {
      "fn": "ERC721._transfer",
      "offset": [
        10608,
        10612
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1828": {
      "fn": "ERC721._transfer",
      "offset": [
        10614,
        10616
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1829": {
      "fn": "ERC721._transfer",
      "offset": [
        10618,
        10625
      ],
      "op": "DUP4",
      "path": "9"
    },
    "1830": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10607
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3AD"
    },
    "1833": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10587,
        10626
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1834": {
      "fn": "ERC721._transfer",
      "offset": [
        10587,
        10626
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1835": {
      "fn": "ERC721._transfer",
      "offset": [
        10688,
        10717
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 30,
      "value": "0x735"
    },
    "1838": {
      "fn": "ERC721._transfer",
      "offset": [
        10705,
        10706
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1840": {
      "fn": "ERC721._transfer",
      "offset": [
        10709,
        10716
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1841": {
      "fn": "ERC721._transfer",
      "offset": [
        10688,
        10696
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5CD"
    },
    "1844": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10688,
        10717
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1845": {
      "fn": "ERC721._transfer",
      "offset": [
        10688,
        10717
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1852": {
      "op": "SHL"
    },
    "1853": {
      "op": "SUB"
    },
    "1854": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10743
      ],
      "op": "DUP4",
      "path": "9",
      "statement": 31
    },
    "1855": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10743
      ],
      "op": "AND",
      "path": "9"
    },
    "1856": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10743
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1858": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10743
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1859": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10743
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1860": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10743
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1861": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10737
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "1863": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10743
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1865": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10743
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1866": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10743
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1868": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10743
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1869": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10743
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1870": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10748
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1871": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10748
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1872": {
      "fn": "ERC721._transfer",
      "offset": [
        10747,
        10748
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1874": {
      "fn": "ERC721._transfer",
      "offset": [
        10747,
        10748
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1875": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10743
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1876": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10748
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x75E"
    },
    "1879": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10748
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1880": {
      "fn": "ERC721._transfer",
      "offset": [
        10747,
        10748
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1881": {
      "fn": "ERC721._transfer",
      "offset": [
        10747,
        10748
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1882": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10748
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11AC"
    },
    "1885": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10728,
        10748
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1886": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10748
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1887": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10748
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1888": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10748
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1889": {
      "fn": "ERC721._transfer",
      "offset": [
        10728,
        10748
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1890": {
      "op": "POP"
    },
    "1891": {
      "op": "POP"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1898": {
      "op": "SHL"
    },
    "1899": {
      "op": "SUB"
    },
    "1900": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10771
      ],
      "op": "DUP3",
      "path": "9",
      "statement": 32
    },
    "1901": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10771
      ],
      "op": "AND",
      "path": "9"
    },
    "1902": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10771
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1904": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10771
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1905": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10771
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1906": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10771
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1907": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10767
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3"
    },
    "1909": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10771
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1911": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10771
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1912": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10771
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1914": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10771
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1915": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10771
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1916": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10776
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1917": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10776
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1918": {
      "fn": "ERC721._transfer",
      "offset": [
        10775,
        10776
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "1920": {
      "fn": "ERC721._transfer",
      "offset": [
        10775,
        10776
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1921": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10771
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1922": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10776
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x78C"
    },
    "1925": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10776
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1926": {
      "fn": "ERC721._transfer",
      "offset": [
        10775,
        10776
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1927": {
      "fn": "ERC721._transfer",
      "offset": [
        10775,
        10776
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1928": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10776
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1180"
    },
    "1931": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10758,
        10776
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1932": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10776
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1933": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10776
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1934": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10776
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1935": {
      "fn": "ERC721._transfer",
      "offset": [
        10758,
        10776
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1936": {
      "op": "POP"
    },
    "1937": {
      "op": "POP"
    },
    "1938": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10802
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 33,
      "value": "0x0"
    },
    "1940": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10802
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1941": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10802
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1942": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10802
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1943": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10793
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x2"
    },
    "1945": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10802
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "1947": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10802
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "1948": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10802
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "1950": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10802
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1951": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10802
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1952": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10802
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "1953": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10807
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1954": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10807
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1961": {
      "op": "SHL"
    },
    "1962": {
      "op": "SUB"
    },
    "1963": {
      "op": "NOT"
    },
    "1964": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10807
      ],
      "op": "AND",
      "path": "9"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1971": {
      "op": "SHL"
    },
    "1972": {
      "op": "SUB"
    },
    "1973": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10807
      ],
      "op": "DUP7",
      "path": "9"
    },
    "1974": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10807
      ],
      "op": "DUP2",
      "path": "9"
    },
    "1975": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10807
      ],
      "op": "AND",
      "path": "9"
    },
    "1976": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10807
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1977": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10807
      ],
      "op": "DUP3",
      "path": "9"
    },
    "1978": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10807
      ],
      "op": "OR",
      "path": "9"
    },
    "1979": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10807
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "1980": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10807
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "1981": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10807
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "1982": {
      "fn": "ERC721._transfer",
      "offset": [
        10823,
        10850
      ],
      "op": "SWAP2",
      "path": "9",
      "statement": 34
    },
    "1983": {
      "fn": "ERC721._transfer",
      "offset": [
        10823,
        10850
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "1984": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10802
      ],
      "op": "DUP5",
      "path": "9"
    },
    "1985": {
      "fn": "ERC721._transfer",
      "offset": [
        10786,
        10802
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "1986": {
      "fn": "ERC721._transfer",
      "offset": [
        10823,
        10850
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1987": {
      "fn": "ERC721._transfer",
      "offset": [
        10823,
        10850
      ],
      "op": "DUP8",
      "path": "9"
    },
    "1988": {
      "fn": "ERC721._transfer",
      "offset": [
        10823,
        10850
      ],
      "op": "AND",
      "path": "9"
    },
    "1989": {
      "fn": "ERC721._transfer",
      "offset": [
        10823,
        10850
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "1990": {
      "fn": "ERC721._transfer",
      "offset": [
        10823,
        10850
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2023": {
      "fn": "ERC721._transfer",
      "offset": [
        10823,
        10850
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2024": {
      "fn": "ERC721._transfer",
      "offset": [
        10823,
        10850
      ],
      "op": "LOG4",
      "path": "9"
    },
    "2025": {
      "fn": "ERC721._transfer",
      "offset": [
        10297,
        10857
      ],
      "op": "POP",
      "path": "9"
    },
    "2026": {
      "fn": "ERC721._transfer",
      "offset": [
        10297,
        10857
      ],
      "op": "POP",
      "path": "9"
    },
    "2027": {
      "fn": "ERC721._transfer",
      "offset": [
        10297,
        10857
      ],
      "op": "POP",
      "path": "9"
    },
    "2028": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10297,
        10857
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2029": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11274,
        11581
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2030": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11424,
        11432
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 35
    },
    "2031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2037": {
      "op": "SHL"
    },
    "2038": {
      "op": "SUB"
    },
    "2039": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11415,
        11432
      ],
      "op": "AND",
      "path": "9"
    },
    "2040": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11415,
        11420
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2047": {
      "op": "SHL"
    },
    "2048": {
      "op": "SUB"
    },
    "2049": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11415,
        11432
      ],
      "op": "AND",
      "path": "9"
    },
    "2050": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11415,
        11432
      ],
      "op": "EQ",
      "path": "9"
    },
    "2051": {
      "branch": 64,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11415,
        11432
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2052": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11462
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x81F"
    },
    "2055": {
      "branch": 64,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11462
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2056": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11462
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2058": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11462
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2059": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2065": {
      "op": "SHL"
    },
    "2066": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11462
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2067": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11462
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2068": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11462
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2070": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11462
      ],
      "op": "ADD",
      "path": "9"
    },
    "2071": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11462
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F5"
    },
    "2074": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11462
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2075": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11462
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE8E"
    },
    "2078": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "i",
      "offset": [
        11407,
        11462
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2079": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11462
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2086": {
      "op": "SHL"
    },
    "2087": {
      "op": "SUB"
    },
    "2088": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11497
      ],
      "op": "DUP4",
      "path": "9",
      "statement": 36
    },
    "2089": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11497
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2090": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11497
      ],
      "op": "AND",
      "path": "9"
    },
    "2091": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11497
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2093": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11497
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2094": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11497
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2095": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11497
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2096": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11490
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x5"
    },
    "2098": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11497
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2100": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11497
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2101": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11497
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2102": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11497
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2103": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11497
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2105": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11497
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2106": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11497
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2107": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11497
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2108": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11507
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "2109": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11507
      ],
      "op": "DUP8",
      "path": "9"
    },
    "2110": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11507
      ],
      "op": "AND",
      "path": "9"
    },
    "2111": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11507
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2112": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11507
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2113": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11507
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2114": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11507
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "2115": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11507
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2116": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11507
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2117": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11507
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2118": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11507
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2119": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11507
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2120": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11507
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2121": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11507
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2122": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11518
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2123": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11518
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2126": {
      "op": "NOT"
    },
    "2127": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11518
      ],
      "op": "AND",
      "path": "9"
    },
    "2128": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11518
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2129": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11518
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2130": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11518
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2131": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11518
      ],
      "op": "OR",
      "path": "9"
    },
    "2132": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11518
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2133": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11518
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "2134": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11533,
        11574
      ],
      "op": "MLOAD",
      "path": "9",
      "statement": 37
    },
    "2135": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11533,
        11574
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2168": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11533,
        11574
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2169": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11533,
        11574
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x883"
    },
    "2172": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11533,
        11574
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2173": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11518
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2174": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11472,
        11518
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2175": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11533,
        11574
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDDA"
    },
    "2178": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "i",
      "offset": [
        11533,
        11574
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2179": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11533,
        11574
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2180": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11533,
        11574
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2182": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11533,
        11574
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2183": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11533,
        11574
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2184": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11533,
        11574
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2185": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11533,
        11574
      ],
      "op": "SUB",
      "path": "9"
    },
    "2186": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11533,
        11574
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2187": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11533,
        11574
      ],
      "op": "LOG3",
      "path": "9"
    },
    "2188": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11274,
        11581
      ],
      "op": "POP",
      "path": "9"
    },
    "2189": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11274,
        11581
      ],
      "op": "POP",
      "path": "9"
    },
    "2190": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11274,
        11581
      ],
      "op": "POP",
      "path": "9"
    },
    "2191": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11274,
        11581
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2192": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6507,
        6814
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2193": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6658,
        6686
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 38,
      "value": "0x89B"
    },
    "2196": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6668,
        6672
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2197": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6674,
        6676
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2198": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6678,
        6685
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2199": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6658,
        6667
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6C0"
    },
    "2202": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6658,
        6686
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2203": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6658,
        6686
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2204": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6704,
        6752
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 39,
      "value": "0x8A7"
    },
    "2207": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6727,
        6731
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2208": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6733,
        6735
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2209": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6737,
        6744
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2210": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6746,
        6751
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2211": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6704,
        6726
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x9F0"
    },
    "2214": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6704,
        6752
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2215": {
      "branch": 65,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6704,
        6752
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2216": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6696,
        6807
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4DC"
    },
    "2219": {
      "branch": 65,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6696,
        6807
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2220": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6696,
        6807
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2222": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6696,
        6807
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2223": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2229": {
      "op": "SHL"
    },
    "2230": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6696,
        6807
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2231": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6696,
        6807
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2232": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6696,
        6807
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2234": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6696,
        6807
      ],
      "op": "ADD",
      "path": "9"
    },
    "2235": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6696,
        6807
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F5"
    },
    "2238": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6696,
        6807
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2239": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6696,
        6807
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDF8"
    },
    "2242": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6696,
        6807
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2243": {
      "fn": "ERC721._baseURI",
      "offset": [
        3346,
        3438
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2244": {
      "fn": "ERC721._baseURI",
      "offset": [
        3422,
        3431
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 40,
      "value": "0x40"
    },
    "2246": {
      "fn": "ERC721._baseURI",
      "offset": [
        3422,
        3431
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2247": {
      "fn": "ERC721._baseURI",
      "offset": [
        3422,
        3431
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2248": {
      "fn": "ERC721._baseURI",
      "offset": [
        3422,
        3431
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2250": {
      "fn": "ERC721._baseURI",
      "offset": [
        3422,
        3431
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2251": {
      "fn": "ERC721._baseURI",
      "offset": [
        3422,
        3431
      ],
      "op": "ADD",
      "path": "9"
    },
    "2252": {
      "fn": "ERC721._baseURI",
      "offset": [
        3422,
        3431
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2253": {
      "fn": "ERC721._baseURI",
      "offset": [
        3422,
        3431
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2254": {
      "fn": "ERC721._baseURI",
      "offset": [
        3422,
        3431
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2257": {
      "fn": "ERC721._baseURI",
      "offset": [
        3422,
        3431
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2258": {
      "fn": "ERC721._baseURI",
      "offset": [
        3422,
        3431
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2259": {
      "fn": "ERC721._baseURI",
      "offset": [
        3346,
        3438
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2260": {
      "fn": "ERC721._baseURI",
      "jump": "o",
      "offset": [
        3346,
        3438
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2261": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2262": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x60"
    },
    "2264": {
      "branch": 67,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2265": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8FA"
    },
    "2268": {
      "branch": 67,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2269": {
      "op": "POP"
    },
    "2270": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 41,
      "value": "0x40"
    },
    "2272": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2273": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2274": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2275": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2276": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "18"
    },
    "2277": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2278": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2279": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2280": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2282": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2283": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "2288": {
      "op": "SHL"
    },
    "2289": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2291": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2292": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "18"
    },
    "2293": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2294": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x237"
    },
    "2297": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2298": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2299": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2300": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2302": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2303": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2304": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2305": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x924"
    },
    "2308": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2309": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 42
    },
    "2310": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x90E"
    },
    "2313": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2314": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x122A"
    },
    "2317": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2318": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2319": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2320": {
      "op": "POP"
    },
    "2321": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 43,
      "value": "0x91D"
    },
    "2324": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2325": {
      "op": "POP"
    },
    "2326": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "2328": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2329": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1198"
    },
    "2332": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2333": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2334": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2335": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "18"
    },
    "2336": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x8FE"
    },
    "2339": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2340": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2341": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2343": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2344": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "18",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2353": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2354": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "18"
    },
    "2355": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2356": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x94D"
    },
    "2359": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2360": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2367": {
      "op": "SHL"
    },
    "2368": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2370": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2371": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x41"
    },
    "2373": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2375": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2376": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "2378": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2380": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2381": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2382": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2384": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2385": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2386": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2387": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2388": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2389": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2390": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "2392": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "18"
    },
    "2393": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1F"
    },
    "2395": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "18"
    },
    "2396": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "18"
    },
    "2397": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2399": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "18"
    },
    "2400": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2401": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "18"
    },
    "2402": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "2404": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2405": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2406": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2407": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x977"
    },
    "2410": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2411": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2413": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "18"
    },
    "2414": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "18"
    },
    "2415": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2416": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "18"
    },
    "2417": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "2418": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2419": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "18"
    },
    "2420": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "18"
    },
    "2421": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2422": {
      "op": "POP"
    },
    "2423": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2424": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "18"
    },
    "2425": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2426": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "18"
    },
    "2427": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2428": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2429": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2430": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6B8"
    },
    "2433": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2434": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 44,
      "value": "0x98C"
    },
    "2437": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "2439": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2440": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x11AC"
    },
    "2443": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2444": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2445": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2446": {
      "op": "POP"
    },
    "2447": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 45,
      "value": "0x999"
    },
    "2450": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "2452": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "18"
    },
    "2453": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1245"
    },
    "2456": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2457": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2458": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9A4"
    },
    "2461": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2462": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x30"
    },
    "2464": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1180"
    },
    "2467": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2468": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2469": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xF8"
    },
    "2471": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "18"
    },
    "2472": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2473": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2474": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2475": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "2476": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2477": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "18"
    },
    "2478": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x9C7"
    },
    "2481": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2482": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2487": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2489": {
      "op": "SHL"
    },
    "2490": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2492": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2493": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x32"
    },
    "2495": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "2497": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "2498": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x24"
    },
    "2500": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2502": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "REVERT",
      "path": "18"
    },
    "2503": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2504": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "2506": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "18"
    },
    "2507": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "18"
    },
    "2508": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "2515": {
      "op": "SHL"
    },
    "2516": {
      "op": "SUB"
    },
    "2517": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "18"
    },
    "2518": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "18"
    },
    "2519": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2520": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2521": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2523": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "18"
    },
    "2524": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2525": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "18"
    },
    "2526": {
      "op": "POP"
    },
    "2527": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 46,
      "value": "0x9E9"
    },
    "2530": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xA"
    },
    "2532": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "18"
    },
    "2533": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1198"
    },
    "2536": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2537": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2538": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "2539": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "18"
    },
    "2540": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x97B"
    },
    "2543": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2544": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12134,
        12912
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2545": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12284,
        12288
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2547": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12304,
        12319
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA04"
    },
    "2550": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12304,
        12306
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2557": {
      "op": "SHL"
    },
    "2558": {
      "op": "SUB"
    },
    "2559": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12304,
        12317
      ],
      "op": "AND",
      "path": "9"
    },
    "2560": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12304,
        12317
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB0B"
    },
    "2563": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12304,
        12319
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2564": {
      "branch": 66,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12304,
        12319
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2565": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12300,
        12906
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2566": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12300,
        12906
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xB00"
    },
    "2569": {
      "branch": 66,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12300,
        12906
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2570": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12355,
        12357
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2577": {
      "op": "SHL"
    },
    "2578": {
      "op": "SUB"
    },
    "2579": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12375
      ],
      "op": "AND",
      "path": "9"
    },
    "2580": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12375
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0x150B7A02"
    },
    "2585": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12376,
        12388
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA20"
    },
    "2588": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12376,
        12386
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x5C9"
    },
    "2591": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12376,
        12388
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2592": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12376,
        12388
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2593": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12390,
        12394
      ],
      "op": "DUP8",
      "path": "9"
    },
    "2594": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12396,
        12403
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2595": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12405,
        12410
      ],
      "op": "DUP7",
      "path": "9"
    },
    "2596": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2598": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2599": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "DUP6",
      "path": "9"
    },
    "2600": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "2605": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "AND",
      "path": "9"
    },
    "2606": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xE0"
    },
    "2608": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "SHL",
      "path": "9"
    },
    "2609": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2610": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2611": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2613": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "ADD",
      "path": "9"
    },
    "2614": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA42"
    },
    "2617": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "2618": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2619": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2620": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2621": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2622": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xD9D"
    },
    "2625": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12339,
        12411
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2626": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2627": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2629": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2631": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2632": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2633": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "DUP4",
      "path": "9"
    },
    "2634": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "SUB",
      "path": "9"
    },
    "2635": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2636": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2638": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "DUP8",
      "path": "9"
    },
    "2639": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2640": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "2641": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2642": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2643": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2644": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA5C"
    },
    "2647": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2648": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2650": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2651": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2652": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2653": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "POP",
      "path": "9"
    },
    "2654": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "GAS",
      "path": "9"
    },
    "2655": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "CALL",
      "path": "9"
    },
    "2656": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2657": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "POP",
      "path": "9"
    },
    "2658": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "POP",
      "path": "9"
    },
    "2659": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "POP",
      "path": "9"
    },
    "2660": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2661": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2662": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA8C"
    },
    "2665": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2666": {
      "op": "POP"
    },
    "2667": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2669": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2670": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2671": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "2673": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2674": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2675": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2676": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "ADD",
      "path": "9"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2679": {
      "op": "NOT"
    },
    "2680": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "AND",
      "path": "9"
    },
    "2681": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2682": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "ADD",
      "path": "9"
    },
    "2683": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2684": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "2685": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2686": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA89"
    },
    "2689": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2690": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2691": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "ADD",
      "path": "9"
    },
    "2692": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2693": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xCFA"
    },
    "2696": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12339,
        12411
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2697": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2698": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2700": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12339,
        12411
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2701": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xAE6"
    },
    "2704": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2705": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2706": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2707": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2708": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2709": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xABA"
    },
    "2712": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2713": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2715": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2716": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2717": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "POP",
      "path": "9"
    },
    "2718": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "2720": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "NOT",
      "path": "9"
    },
    "2721": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3F"
    },
    "2723": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2724": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "ADD",
      "path": "9"
    },
    "2725": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "AND",
      "path": "9"
    },
    "2726": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2727": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "ADD",
      "path": "9"
    },
    "2728": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2730": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2731": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2732": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "DUP3",
      "path": "9"
    },
    "2733": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2734": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "2735": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2737": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2739": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "DUP5",
      "path": "9"
    },
    "2740": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "ADD",
      "path": "9"
    },
    "2741": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "2742": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xABF"
    },
    "2745": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2746": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2747": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "2749": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "2750": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "POP",
      "path": "9"
    },
    "2751": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2752": {
      "op": "POP"
    },
    "2753": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12578,
        12591
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2754": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12578,
        12591
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2755": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12574,
        12840
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xADE"
    },
    "2758": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12574,
        12840
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2759": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12620,
        12680
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 47,
      "value": "0x40"
    },
    "2761": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12620,
        12680
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2762": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2768": {
      "op": "SHL"
    },
    "2769": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12620,
        12680
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2770": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12620,
        12680
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2771": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12620,
        12680
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2773": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12620,
        12680
      ],
      "op": "ADD",
      "path": "9"
    },
    "2774": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12620,
        12680
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2F5"
    },
    "2777": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12620,
        12680
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2778": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12620,
        12680
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xDF8"
    },
    "2781": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12620,
        12680
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2782": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12574,
        12840
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2783": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12792,
        12798
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2784": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12786,
        12799
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "2785": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12777,
        12783
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2786": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12773,
        12775
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2788": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12769,
        12784
      ],
      "op": "ADD",
      "path": "9"
    },
    "2789": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12762,
        12800
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2790": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        12854
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2797": {
      "op": "SHL"
    },
    "2798": {
      "op": "SUB"
    },
    "2799": {
      "op": "NOT"
    },
    "2800": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12461,
        12512
      ],
      "op": "AND",
      "path": "9",
      "statement": 48
    },
    "2801": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "2806": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2808": {
      "op": "SHL"
    },
    "2809": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12461,
        12512
      ],
      "op": "EQ",
      "path": "9"
    },
    "2810": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12461,
        12512
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2811": {
      "op": "POP"
    },
    "2812": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12454,
        12512
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x6B8"
    },
    "2815": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12454,
        12512
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2816": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12300,
        12906
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2817": {
      "op": "POP"
    },
    "2818": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12891,
        12895
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 49,
      "value": "0x1"
    },
    "2820": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12134,
        12912
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "2821": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12134,
        12912
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "2822": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12134,
        12912
      ],
      "op": "POP",
      "path": "9"
    },
    "2823": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12134,
        12912
      ],
      "op": "POP",
      "path": "9"
    },
    "2824": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12134,
        12912
      ],
      "op": "POP",
      "path": "9"
    },
    "2825": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12134,
        12912
      ],
      "op": "POP",
      "path": "9"
    },
    "2826": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12134,
        12912
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2827": {
      "fn": "Address.isContract",
      "offset": [
        771,
        1148
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "2828": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "2829": {
      "fn": "Address.isContract",
      "offset": [
        1133,
        1141
      ],
      "op": "ISZERO",
      "path": "15",
      "statement": 50
    },
    "2830": {
      "fn": "Address.isContract",
      "offset": [
        1133,
        1141
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2831": {
      "fn": "Address.isContract",
      "offset": [
        1133,
        1141
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2832": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        771,
        1148
      ],
      "op": "JUMP",
      "path": "15"
    },
    "2833": {
      "op": "JUMPDEST"
    },
    "2834": {
      "op": "DUP1"
    },
    "2835": {
      "op": "CALLDATALOAD"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2840": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2842": {
      "op": "SHL"
    },
    "2843": {
      "op": "SUB"
    },
    "2844": {
      "op": "DUP2"
    },
    "2845": {
      "op": "AND"
    },
    "2846": {
      "op": "DUP2"
    },
    "2847": {
      "op": "EQ"
    },
    "2848": {
      "op": "PUSH2",
      "value": "0x237"
    },
    "2851": {
      "op": "JUMPI"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2854": {
      "op": "DUP1"
    },
    "2855": {
      "op": "REVERT"
    },
    "2856": {
      "op": "JUMPDEST"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2861": {
      "op": "DUP3"
    },
    "2862": {
      "op": "DUP5"
    },
    "2863": {
      "op": "SUB"
    },
    "2864": {
      "op": "SLT"
    },
    "2865": {
      "op": "ISZERO"
    },
    "2866": {
      "op": "PUSH2",
      "value": "0xB39"
    },
    "2869": {
      "op": "JUMPI"
    },
    "2870": {
      "op": "DUP1"
    },
    "2871": {
      "op": "DUP2"
    },
    "2872": {
      "op": "REVERT"
    },
    "2873": {
      "op": "JUMPDEST"
    },
    "2874": {
      "op": "PUSH2",
      "value": "0x55E"
    },
    "2877": {
      "op": "DUP3"
    },
    "2878": {
      "op": "PUSH2",
      "value": "0xB11"
    },
    "2881": {
      "jump": "i",
      "op": "JUMP"
    },
    "2882": {
      "op": "JUMPDEST"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2885": {
      "op": "DUP1"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2888": {
      "op": "DUP4"
    },
    "2889": {
      "op": "DUP6"
    },
    "2890": {
      "op": "SUB"
    },
    "2891": {
      "op": "SLT"
    },
    "2892": {
      "op": "ISZERO"
    },
    "2893": {
      "op": "PUSH2",
      "value": "0xB54"
    },
    "2896": {
      "op": "JUMPI"
    },
    "2897": {
      "op": "DUP1"
    },
    "2898": {
      "op": "DUP2"
    },
    "2899": {
      "op": "REVERT"
    },
    "2900": {
      "op": "JUMPDEST"
    },
    "2901": {
      "op": "PUSH2",
      "value": "0xB5D"
    },
    "2904": {
      "op": "DUP4"
    },
    "2905": {
      "op": "PUSH2",
      "value": "0xB11"
    },
    "2908": {
      "jump": "i",
      "op": "JUMP"
    },
    "2909": {
      "op": "JUMPDEST"
    },
    "2910": {
      "op": "SWAP2"
    },
    "2911": {
      "op": "POP"
    },
    "2912": {
      "op": "PUSH2",
      "value": "0xB6B"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2917": {
      "op": "DUP5"
    },
    "2918": {
      "op": "ADD"
    },
    "2919": {
      "op": "PUSH2",
      "value": "0xB11"
    },
    "2922": {
      "jump": "i",
      "op": "JUMP"
    },
    "2923": {
      "op": "JUMPDEST"
    },
    "2924": {
      "op": "SWAP1"
    },
    "2925": {
      "op": "POP"
    },
    "2926": {
      "op": "SWAP3"
    },
    "2927": {
      "op": "POP"
    },
    "2928": {
      "op": "SWAP3"
    },
    "2929": {
      "op": "SWAP1"
    },
    "2930": {
      "op": "POP"
    },
    "2931": {
      "jump": "o",
      "op": "JUMP"
    },
    "2932": {
      "op": "JUMPDEST"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2935": {
      "op": "DUP1"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2940": {
      "op": "DUP5"
    },
    "2941": {
      "op": "DUP7"
    },
    "2942": {
      "op": "SUB"
    },
    "2943": {
      "op": "SLT"
    },
    "2944": {
      "op": "ISZERO"
    },
    "2945": {
      "op": "PUSH2",
      "value": "0xB88"
    },
    "2948": {
      "op": "JUMPI"
    },
    "2949": {
      "op": "DUP1"
    },
    "2950": {
      "op": "DUP2"
    },
    "2951": {
      "op": "REVERT"
    },
    "2952": {
      "op": "JUMPDEST"
    },
    "2953": {
      "op": "PUSH2",
      "value": "0xB91"
    },
    "2956": {
      "op": "DUP5"
    },
    "2957": {
      "op": "PUSH2",
      "value": "0xB11"
    },
    "2960": {
      "jump": "i",
      "op": "JUMP"
    },
    "2961": {
      "op": "JUMPDEST"
    },
    "2962": {
      "op": "SWAP3"
    },
    "2963": {
      "op": "POP"
    },
    "2964": {
      "op": "PUSH2",
      "value": "0xB9F"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2969": {
      "op": "DUP6"
    },
    "2970": {
      "op": "ADD"
    },
    "2971": {
      "op": "PUSH2",
      "value": "0xB11"
    },
    "2974": {
      "jump": "i",
      "op": "JUMP"
    },
    "2975": {
      "op": "JUMPDEST"
    },
    "2976": {
      "op": "SWAP2"
    },
    "2977": {
      "op": "POP"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2980": {
      "op": "DUP5"
    },
    "2981": {
      "op": "ADD"
    },
    "2982": {
      "op": "CALLDATALOAD"
    },
    "2983": {
      "op": "SWAP1"
    },
    "2984": {
      "op": "POP"
    },
    "2985": {
      "op": "SWAP3"
    },
    "2986": {
      "op": "POP"
    },
    "2987": {
      "op": "SWAP3"
    },
    "2988": {
      "op": "POP"
    },
    "2989": {
      "op": "SWAP3"
    },
    "2990": {
      "jump": "o",
      "op": "JUMP"
    },
    "2991": {
      "op": "JUMPDEST"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2994": {
      "op": "DUP1"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2997": {
      "op": "DUP1"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3000": {
      "op": "DUP6"
    },
    "3001": {
      "op": "DUP8"
    },
    "3002": {
      "op": "SUB"
    },
    "3003": {
      "op": "SLT"
    },
    "3004": {
      "op": "ISZERO"
    },
    "3005": {
      "op": "PUSH2",
      "value": "0xBC4"
    },
    "3008": {
      "op": "JUMPI"
    },
    "3009": {
      "op": "DUP1"
    },
    "3010": {
      "op": "DUP2"
    },
    "3011": {
      "op": "REVERT"
    },
    "3012": {
      "op": "JUMPDEST"
    },
    "3013": {
      "op": "PUSH2",
      "value": "0xBCD"
    },
    "3016": {
      "op": "DUP6"
    },
    "3017": {
      "op": "PUSH2",
      "value": "0xB11"
    },
    "3020": {
      "jump": "i",
      "op": "JUMP"
    },
    "3021": {
      "op": "JUMPDEST"
    },
    "3022": {
      "op": "SWAP4"
    },
    "3023": {
      "op": "POP"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3026": {
      "op": "PUSH2",
      "value": "0xBDC"
    },
    "3029": {
      "op": "DUP2"
    },
    "3030": {
      "op": "DUP8"
    },
    "3031": {
      "op": "ADD"
    },
    "3032": {
      "op": "PUSH2",
      "value": "0xB11"
    },
    "3035": {
      "jump": "i",
      "op": "JUMP"
    },
    "3036": {
      "op": "JUMPDEST"
    },
    "3037": {
      "op": "SWAP4"
    },
    "3038": {
      "op": "POP"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3041": {
      "op": "DUP7"
    },
    "3042": {
      "op": "ADD"
    },
    "3043": {
      "op": "CALLDATALOAD"
    },
    "3044": {
      "op": "SWAP3"
    },
    "3045": {
      "op": "POP"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3048": {
      "op": "DUP7"
    },
    "3049": {
      "op": "ADD"
    },
    "3050": {
      "op": "CALLDATALOAD"
    },
    "3051": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3060": {
      "op": "DUP1"
    },
    "3061": {
      "op": "DUP3"
    },
    "3062": {
      "op": "GT"
    },
    "3063": {
      "op": "ISZERO"
    },
    "3064": {
      "op": "PUSH2",
      "value": "0xBFF"
    },
    "3067": {
      "op": "JUMPI"
    },
    "3068": {
      "op": "DUP4"
    },
    "3069": {
      "op": "DUP5"
    },
    "3070": {
      "op": "REVERT"
    },
    "3071": {
      "op": "JUMPDEST"
    },
    "3072": {
      "op": "DUP2"
    },
    "3073": {
      "op": "DUP9"
    },
    "3074": {
      "op": "ADD"
    },
    "3075": {
      "op": "SWAP2"
    },
    "3076": {
      "op": "POP"
    },
    "3077": {
      "op": "DUP9"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3080": {
      "op": "DUP4"
    },
    "3081": {
      "op": "ADD"
    },
    "3082": {
      "op": "SLT"
    },
    "3083": {
      "op": "PUSH2",
      "value": "0xC12"
    },
    "3086": {
      "op": "JUMPI"
    },
    "3087": {
      "op": "DUP4"
    },
    "3088": {
      "op": "DUP5"
    },
    "3089": {
      "op": "REVERT"
    },
    "3090": {
      "op": "JUMPDEST"
    },
    "3091": {
      "op": "DUP2"
    },
    "3092": {
      "op": "CALLDATALOAD"
    },
    "3093": {
      "op": "DUP2"
    },
    "3094": {
      "op": "DUP2"
    },
    "3095": {
      "op": "GT"
    },
    "3096": {
      "op": "ISZERO"
    },
    "3097": {
      "op": "PUSH2",
      "value": "0xC24"
    },
    "3100": {
      "op": "JUMPI"
    },
    "3101": {
      "op": "PUSH2",
      "value": "0xC24"
    },
    "3104": {
      "op": "PUSH2",
      "value": "0x1285"
    },
    "3107": {
      "jump": "i",
      "op": "JUMP"
    },
    "3108": {
      "op": "JUMPDEST"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3111": {
      "op": "MLOAD"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3114": {
      "op": "DUP3"
    },
    "3115": {
      "op": "ADD"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3118": {
      "op": "NOT"
    },
    "3119": {
      "op": "AND"
    },
    "3120": {
      "op": "DUP2"
    },
    "3121": {
      "op": "ADD"
    },
    "3122": {
      "op": "DUP6"
    },
    "3123": {
      "op": "ADD"
    },
    "3124": {
      "op": "DUP4"
    },
    "3125": {
      "op": "DUP2"
    },
    "3126": {
      "op": "GT"
    },
    "3127": {
      "op": "DUP3"
    },
    "3128": {
      "op": "DUP3"
    },
    "3129": {
      "op": "LT"
    },
    "3130": {
      "op": "OR"
    },
    "3131": {
      "op": "ISZERO"
    },
    "3132": {
      "op": "PUSH2",
      "value": "0xC47"
    },
    "3135": {
      "op": "JUMPI"
    },
    "3136": {
      "op": "PUSH2",
      "value": "0xC47"
    },
    "3139": {
      "op": "PUSH2",
      "value": "0x1285"
    },
    "3142": {
      "jump": "i",
      "op": "JUMP"
    },
    "3143": {
      "op": "JUMPDEST"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3146": {
      "op": "MSTORE"
    },
    "3147": {
      "op": "DUP2"
    },
    "3148": {
      "op": "DUP2"
    },
    "3149": {
      "op": "MSTORE"
    },
    "3150": {
      "op": "DUP4"
    },
    "3151": {
      "op": "DUP3"
    },
    "3152": {
      "op": "ADD"
    },
    "3153": {
      "op": "DUP6"
    },
    "3154": {
      "op": "ADD"
    },
    "3155": {
      "op": "DUP12"
    },
    "3156": {
      "op": "LT"
    },
    "3157": {
      "op": "ISZERO"
    },
    "3158": {
      "op": "PUSH2",
      "value": "0xC5D"
    },
    "3161": {
      "op": "JUMPI"
    },
    "3162": {
      "op": "DUP6"
    },
    "3163": {
      "op": "DUP7"
    },
    "3164": {
      "op": "REVERT"
    },
    "3165": {
      "op": "JUMPDEST"
    },
    "3166": {
      "op": "DUP2"
    },
    "3167": {
      "op": "DUP6"
    },
    "3168": {
      "op": "DUP6"
    },
    "3169": {
      "op": "ADD"
    },
    "3170": {
      "op": "DUP7"
    },
    "3171": {
      "op": "DUP4"
    },
    "3172": {
      "op": "ADD"
    },
    "3173": {
      "op": "CALLDATACOPY"
    },
    "3174": {
      "op": "SWAP1"
    },
    "3175": {
      "op": "DUP2"
    },
    "3176": {
      "op": "ADD"
    },
    "3177": {
      "op": "SWAP1"
    },
    "3178": {
      "op": "SWAP4"
    },
    "3179": {
      "op": "ADD"
    },
    "3180": {
      "op": "SWAP4"
    },
    "3181": {
      "op": "SWAP1"
    },
    "3182": {
      "op": "SWAP4"
    },
    "3183": {
      "op": "MSTORE"
    },
    "3184": {
      "op": "POP"
    },
    "3185": {
      "op": "SWAP4"
    },
    "3186": {
      "op": "SWAP7"
    },
    "3187": {
      "op": "SWAP3"
    },
    "3188": {
      "op": "SWAP6"
    },
    "3189": {
      "op": "POP"
    },
    "3190": {
      "op": "SWAP1"
    },
    "3191": {
      "op": "SWAP4"
    },
    "3192": {
      "op": "POP"
    },
    "3193": {
      "op": "POP"
    },
    "3194": {
      "jump": "o",
      "op": "JUMP"
    },
    "3195": {
      "op": "JUMPDEST"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3198": {
      "op": "DUP1"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3201": {
      "op": "DUP4"
    },
    "3202": {
      "op": "DUP6"
    },
    "3203": {
      "op": "SUB"
    },
    "3204": {
      "op": "SLT"
    },
    "3205": {
      "op": "ISZERO"
    },
    "3206": {
      "op": "PUSH2",
      "value": "0xC8D"
    },
    "3209": {
      "op": "JUMPI"
    },
    "3210": {
      "op": "DUP2"
    },
    "3211": {
      "op": "DUP3"
    },
    "3212": {
      "op": "REVERT"
    },
    "3213": {
      "op": "JUMPDEST"
    },
    "3214": {
      "op": "PUSH2",
      "value": "0xC96"
    },
    "3217": {
      "op": "DUP4"
    },
    "3218": {
      "op": "PUSH2",
      "value": "0xB11"
    },
    "3221": {
      "jump": "i",
      "op": "JUMP"
    },
    "3222": {
      "op": "JUMPDEST"
    },
    "3223": {
      "op": "SWAP2"
    },
    "3224": {
      "op": "POP"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3227": {
      "op": "DUP4"
    },
    "3228": {
      "op": "ADD"
    },
    "3229": {
      "op": "CALLDATALOAD"
    },
    "3230": {
      "op": "DUP1"
    },
    "3231": {
      "op": "ISZERO"
    },
    "3232": {
      "op": "ISZERO"
    },
    "3233": {
      "op": "DUP2"
    },
    "3234": {
      "op": "EQ"
    },
    "3235": {
      "op": "PUSH2",
      "value": "0xCAA"
    },
    "3238": {
      "op": "JUMPI"
    },
    "3239": {
      "op": "DUP2"
    },
    "3240": {
      "op": "DUP3"
    },
    "3241": {
      "op": "REVERT"
    },
    "3242": {
      "op": "JUMPDEST"
    },
    "3243": {
      "op": "DUP1"
    },
    "3244": {
      "op": "SWAP2"
    },
    "3245": {
      "op": "POP"
    },
    "3246": {
      "op": "POP"
    },
    "3247": {
      "op": "SWAP3"
    },
    "3248": {
      "op": "POP"
    },
    "3249": {
      "op": "SWAP3"
    },
    "3250": {
      "op": "SWAP1"
    },
    "3251": {
      "op": "POP"
    },
    "3252": {
      "jump": "o",
      "op": "JUMP"
    },
    "3253": {
      "op": "JUMPDEST"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3256": {
      "op": "DUP1"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3259": {
      "op": "DUP4"
    },
    "3260": {
      "op": "DUP6"
    },
    "3261": {
      "op": "SUB"
    },
    "3262": {
      "op": "SLT"
    },
    "3263": {
      "op": "ISZERO"
    },
    "3264": {
      "op": "PUSH2",
      "value": "0xCC7"
    },
    "3267": {
      "op": "JUMPI"
    },
    "3268": {
      "op": "DUP2"
    },
    "3269": {
      "op": "DUP3"
    },
    "3270": {
      "op": "REVERT"
    },
    "3271": {
      "op": "JUMPDEST"
    },
    "3272": {
      "op": "PUSH2",
      "value": "0xCD0"
    },
    "3275": {
      "op": "DUP4"
    },
    "3276": {
      "op": "PUSH2",
      "value": "0xB11"
    },
    "3279": {
      "jump": "i",
      "op": "JUMP"
    },
    "3280": {
      "op": "JUMPDEST"
    },
    "3281": {
      "op": "SWAP5"
    },
    "3282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3284": {
      "op": "SWAP4"
    },
    "3285": {
      "op": "SWAP1"
    },
    "3286": {
      "op": "SWAP4"
    },
    "3287": {
      "op": "ADD"
    },
    "3288": {
      "op": "CALLDATALOAD"
    },
    "3289": {
      "op": "SWAP4"
    },
    "3290": {
      "op": "POP"
    },
    "3291": {
      "op": "POP"
    },
    "3292": {
      "op": "POP"
    },
    "3293": {
      "jump": "o",
      "op": "JUMP"
    },
    "3294": {
      "op": "JUMPDEST"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3299": {
      "op": "DUP3"
    },
    "3300": {
      "op": "DUP5"
    },
    "3301": {
      "op": "SUB"
    },
    "3302": {
      "op": "SLT"
    },
    "3303": {
      "op": "ISZERO"
    },
    "3304": {
      "op": "PUSH2",
      "value": "0xCEF"
    },
    "3307": {
      "op": "JUMPI"
    },
    "3308": {
      "op": "DUP1"
    },
    "3309": {
      "op": "DUP2"
    },
    "3310": {
      "op": "REVERT"
    },
    "3311": {
      "op": "JUMPDEST"
    },
    "3312": {
      "op": "DUP2"
    },
    "3313": {
      "op": "CALLDATALOAD"
    },
    "3314": {
      "op": "PUSH2",
      "value": "0x55E"
    },
    "3317": {
      "op": "DUP2"
    },
    "3318": {
      "op": "PUSH2",
      "value": "0x129B"
    },
    "3321": {
      "jump": "i",
      "op": "JUMP"
    },
    "3322": {
      "op": "JUMPDEST"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3327": {
      "op": "DUP3"
    },
    "3328": {
      "op": "DUP5"
    },
    "3329": {
      "op": "SUB"
    },
    "3330": {
      "op": "SLT"
    },
    "3331": {
      "op": "ISZERO"
    },
    "3332": {
      "op": "PUSH2",
      "value": "0xD0B"
    },
    "3335": {
      "op": "JUMPI"
    },
    "3336": {
      "op": "DUP1"
    },
    "3337": {
      "op": "DUP2"
    },
    "3338": {
      "op": "REVERT"
    },
    "3339": {
      "op": "JUMPDEST"
    },
    "3340": {
      "op": "DUP2"
    },
    "3341": {
      "op": "MLOAD"
    },
    "3342": {
      "op": "PUSH2",
      "value": "0x55E"
    },
    "3345": {
      "op": "DUP2"
    },
    "3346": {
      "op": "PUSH2",
      "value": "0x129B"
    },
    "3349": {
      "jump": "i",
      "op": "JUMP"
    },
    "3350": {
      "op": "JUMPDEST"
    },
    "3351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3355": {
      "op": "DUP3"
    },
    "3356": {
      "op": "DUP5"
    },
    "3357": {
      "op": "SUB"
    },
    "3358": {
      "op": "SLT"
    },
    "3359": {
      "op": "ISZERO"
    },
    "3360": {
      "op": "PUSH2",
      "value": "0xD27"
    },
    "3363": {
      "op": "JUMPI"
    },
    "3364": {
      "op": "DUP1"
    },
    "3365": {
      "op": "DUP2"
    },
    "3366": {
      "op": "REVERT"
    },
    "3367": {
      "op": "JUMPDEST"
    },
    "3368": {
      "op": "POP"
    },
    "3369": {
      "op": "CALLDATALOAD"
    },
    "3370": {
      "op": "SWAP2"
    },
    "3371": {
      "op": "SWAP1"
    },
    "3372": {
      "op": "POP"
    },
    "3373": {
      "jump": "o",
      "op": "JUMP"
    },
    "3374": {
      "op": "JUMPDEST"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3377": {
      "op": "DUP2"
    },
    "3378": {
      "op": "MLOAD"
    },
    "3379": {
      "op": "DUP1"
    },
    "3380": {
      "op": "DUP5"
    },
    "3381": {
      "op": "MSTORE"
    },
    "3382": {
      "op": "PUSH2",
      "value": "0xD46"
    },
    "3385": {
      "op": "DUP2"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3388": {
      "op": "DUP7"
    },
    "3389": {
      "op": "ADD"
    },
    "3390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3392": {
      "op": "DUP7"
    },
    "3393": {
      "op": "ADD"
    },
    "3394": {
      "op": "PUSH2",
      "value": "0x11C3"
    },
    "3397": {
      "jump": "i",
      "op": "JUMP"
    },
    "3398": {
      "op": "JUMPDEST"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3401": {
      "op": "ADD"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3404": {
      "op": "NOT"
    },
    "3405": {
      "op": "AND"
    },
    "3406": {
      "op": "SWAP3"
    },
    "3407": {
      "op": "SWAP1"
    },
    "3408": {
      "op": "SWAP3"
    },
    "3409": {
      "op": "ADD"
    },
    "3410": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3412": {
      "op": "ADD"
    },
    "3413": {
      "op": "SWAP3"
    },
    "3414": {
      "op": "SWAP2"
    },
    "3415": {
      "op": "POP"
    },
    "3416": {
      "op": "POP"
    },
    "3417": {
      "jump": "o",
      "op": "JUMP"
    },
    "3418": {
      "op": "JUMPDEST"
    },
    "3419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3421": {
      "op": "DUP4"
    },
    "3422": {
      "op": "MLOAD"
    },
    "3423": {
      "op": "PUSH2",
      "value": "0xD6C"
    },
    "3426": {
      "op": "DUP2"
    },
    "3427": {
      "op": "DUP5"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3430": {
      "op": "DUP9"
    },
    "3431": {
      "op": "ADD"
    },
    "3432": {
      "op": "PUSH2",
      "value": "0x11C3"
    },
    "3435": {
      "jump": "i",
      "op": "JUMP"
    },
    "3436": {
      "op": "JUMPDEST"
    },
    "3437": {
      "op": "DUP4"
    },
    "3438": {
      "op": "MLOAD"
    },
    "3439": {
      "op": "SWAP1"
    },
    "3440": {
      "op": "DUP4"
    },
    "3441": {
      "op": "ADD"
    },
    "3442": {
      "op": "SWAP1"
    },
    "3443": {
      "op": "PUSH2",
      "value": "0xD80"
    },
    "3446": {
      "op": "DUP2"
    },
    "3447": {
      "op": "DUP4"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3450": {
      "op": "DUP9"
    },
    "3451": {
      "op": "ADD"
    },
    "3452": {
      "op": "PUSH2",
      "value": "0x11C3"
    },
    "3455": {
      "jump": "i",
      "op": "JUMP"
    },
    "3456": {
      "op": "JUMPDEST"
    },
    "3457": {
      "op": "ADD"
    },
    "3458": {
      "op": "SWAP5"
    },
    "3459": {
      "op": "SWAP4"
    },
    "3460": {
      "op": "POP"
    },
    "3461": {
      "op": "POP"
    },
    "3462": {
      "op": "POP"
    },
    "3463": {
      "op": "POP"
    },
    "3464": {
      "jump": "o",
      "op": "JUMP"
    },
    "3465": {
      "op": "JUMPDEST"
    },
    "3466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3472": {
      "op": "SHL"
    },
    "3473": {
      "op": "SUB"
    },
    "3474": {
      "op": "SWAP2"
    },
    "3475": {
      "op": "SWAP1"
    },
    "3476": {
      "op": "SWAP2"
    },
    "3477": {
      "op": "AND"
    },
    "3478": {
      "op": "DUP2"
    },
    "3479": {
      "op": "MSTORE"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3482": {
      "op": "ADD"
    },
    "3483": {
      "op": "SWAP1"
    },
    "3484": {
      "jump": "o",
      "op": "JUMP"
    },
    "3485": {
      "op": "JUMPDEST"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3490": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3492": {
      "op": "SHL"
    },
    "3493": {
      "op": "SUB"
    },
    "3494": {
      "op": "DUP6"
    },
    "3495": {
      "op": "DUP2"
    },
    "3496": {
      "op": "AND"
    },
    "3497": {
      "op": "DUP3"
    },
    "3498": {
      "op": "MSTORE"
    },
    "3499": {
      "op": "DUP5"
    },
    "3500": {
      "op": "AND"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3503": {
      "op": "DUP3"
    },
    "3504": {
      "op": "ADD"
    },
    "3505": {
      "op": "MSTORE"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3508": {
      "op": "DUP2"
    },
    "3509": {
      "op": "ADD"
    },
    "3510": {
      "op": "DUP4"
    },
    "3511": {
      "op": "SWAP1"
    },
    "3512": {
      "op": "MSTORE"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3517": {
      "op": "DUP3"
    },
    "3518": {
      "op": "ADD"
    },
    "3519": {
      "op": "DUP2"
    },
    "3520": {
      "op": "SWAP1"
    },
    "3521": {
      "op": "MSTORE"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3524": {
      "op": "SWAP1"
    },
    "3525": {
      "op": "PUSH2",
      "value": "0xDD0"
    },
    "3528": {
      "op": "SWAP1"
    },
    "3529": {
      "op": "DUP4"
    },
    "3530": {
      "op": "ADD"
    },
    "3531": {
      "op": "DUP5"
    },
    "3532": {
      "op": "PUSH2",
      "value": "0xD2E"
    },
    "3535": {
      "jump": "i",
      "op": "JUMP"
    },
    "3536": {
      "op": "JUMPDEST"
    },
    "3537": {
      "op": "SWAP7"
    },
    "3538": {
      "op": "SWAP6"
    },
    "3539": {
      "op": "POP"
    },
    "3540": {
      "op": "POP"
    },
    "3541": {
      "op": "POP"
    },
    "3542": {
      "op": "POP"
    },
    "3543": {
      "op": "POP"
    },
    "3544": {
      "op": "POP"
    },
    "3545": {
      "jump": "o",
      "op": "JUMP"
    },
    "3546": {
      "op": "JUMPDEST"
    },
    "3547": {
      "op": "SWAP1"
    },
    "3548": {
      "op": "ISZERO"
    },
    "3549": {
      "op": "ISZERO"
    },
    "3550": {
      "op": "DUP2"
    },
    "3551": {
      "op": "MSTORE"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3554": {
      "op": "ADD"
    },
    "3555": {
      "op": "SWAP1"
    },
    "3556": {
      "jump": "o",
      "op": "JUMP"
    },
    "3557": {
      "op": "JUMPDEST"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3562": {
      "op": "DUP3"
    },
    "3563": {
      "op": "MSTORE"
    },
    "3564": {
      "op": "PUSH2",
      "value": "0x55E"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3569": {
      "op": "DUP4"
    },
    "3570": {
      "op": "ADD"
    },
    "3571": {
      "op": "DUP5"
    },
    "3572": {
      "op": "PUSH2",
      "value": "0xD2E"
    },
    "3575": {
      "jump": "i",
      "op": "JUMP"
    },
    "3576": {
      "op": "JUMPDEST"
    },
    "3577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3579": {
      "op": "DUP1"
    },
    "3580": {
      "op": "DUP3"
    },
    "3581": {
      "op": "MSTORE"
    },
    "3582": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3584": {
      "op": "SWAP1"
    },
    "3585": {
      "op": "DUP3"
    },
    "3586": {
      "op": "ADD"
    },
    "3587": {
      "op": "MSTORE"
    },
    "3588": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3623": {
      "op": "DUP3"
    },
    "3624": {
      "op": "ADD"
    },
    "3625": {
      "op": "MSTORE"
    },
    "3626": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "3647": {
      "op": "SHL"
    },
    "3648": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3650": {
      "op": "DUP3"
    },
    "3651": {
      "op": "ADD"
    },
    "3652": {
      "op": "MSTORE"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3655": {
      "op": "ADD"
    },
    "3656": {
      "op": "SWAP1"
    },
    "3657": {
      "jump": "o",
      "op": "JUMP"
    },
    "3658": {
      "op": "JUMPDEST"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3661": {
      "op": "DUP1"
    },
    "3662": {
      "op": "DUP3"
    },
    "3663": {
      "op": "MSTORE"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3666": {
      "op": "SWAP1"
    },
    "3667": {
      "op": "DUP3"
    },
    "3668": {
      "op": "ADD"
    },
    "3669": {
      "op": "MSTORE"
    },
    "3670": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3705": {
      "op": "DUP3"
    },
    "3706": {
      "op": "ADD"
    },
    "3707": {
      "op": "MSTORE"
    },
    "3708": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3715": {
      "op": "SHL"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3718": {
      "op": "DUP3"
    },
    "3719": {
      "op": "ADD"
    },
    "3720": {
      "op": "MSTORE"
    },
    "3721": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3723": {
      "op": "ADD"
    },
    "3724": {
      "op": "SWAP1"
    },
    "3725": {
      "jump": "o",
      "op": "JUMP"
    },
    "3726": {
      "op": "JUMPDEST"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3729": {
      "op": "DUP1"
    },
    "3730": {
      "op": "DUP3"
    },
    "3731": {
      "op": "MSTORE"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3734": {
      "op": "SWAP1"
    },
    "3735": {
      "op": "DUP3"
    },
    "3736": {
      "op": "ADD"
    },
    "3737": {
      "op": "MSTORE"
    },
    "3738": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "3771": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3773": {
      "op": "DUP3"
    },
    "3774": {
      "op": "ADD"
    },
    "3775": {
      "op": "MSTORE"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3778": {
      "op": "ADD"
    },
    "3779": {
      "op": "SWAP1"
    },
    "3780": {
      "jump": "o",
      "op": "JUMP"
    },
    "3781": {
      "op": "JUMPDEST"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3784": {
      "op": "DUP1"
    },
    "3785": {
      "op": "DUP3"
    },
    "3786": {
      "op": "MSTORE"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "3789": {
      "op": "SWAP1"
    },
    "3790": {
      "op": "DUP3"
    },
    "3791": {
      "op": "ADD"
    },
    "3792": {
      "op": "MSTORE"
    },
    "3793": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3828": {
      "op": "DUP3"
    },
    "3829": {
      "op": "ADD"
    },
    "3830": {
      "op": "MSTORE"
    },
    "3831": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "3846": {
      "op": "SHL"
    },
    "3847": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3849": {
      "op": "DUP3"
    },
    "3850": {
      "op": "ADD"
    },
    "3851": {
      "op": "MSTORE"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3854": {
      "op": "ADD"
    },
    "3855": {
      "op": "SWAP1"
    },
    "3856": {
      "jump": "o",
      "op": "JUMP"
    },
    "3857": {
      "op": "JUMPDEST"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3860": {
      "op": "DUP1"
    },
    "3861": {
      "op": "DUP3"
    },
    "3862": {
      "op": "MSTORE"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3865": {
      "op": "SWAP1"
    },
    "3866": {
      "op": "DUP3"
    },
    "3867": {
      "op": "ADD"
    },
    "3868": {
      "op": "MSTORE"
    },
    "3869": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3904": {
      "op": "DUP3"
    },
    "3905": {
      "op": "ADD"
    },
    "3906": {
      "op": "MSTORE"
    },
    "3907": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3942": {
      "op": "DUP3"
    },
    "3943": {
      "op": "ADD"
    },
    "3944": {
      "op": "MSTORE"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3947": {
      "op": "ADD"
    },
    "3948": {
      "op": "SWAP1"
    },
    "3949": {
      "jump": "o",
      "op": "JUMP"
    },
    "3950": {
      "op": "JUMPDEST"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3953": {
      "op": "DUP1"
    },
    "3954": {
      "op": "DUP3"
    },
    "3955": {
      "op": "MSTORE"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3958": {
      "op": "SWAP1"
    },
    "3959": {
      "op": "DUP3"
    },
    "3960": {
      "op": "ADD"
    },
    "3961": {
      "op": "MSTORE"
    },
    "3962": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3997": {
      "op": "DUP3"
    },
    "3998": {
      "op": "ADD"
    },
    "3999": {
      "op": "MSTORE"
    },
    "4000": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "4011": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4013": {
      "op": "SHL"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4016": {
      "op": "DUP3"
    },
    "4017": {
      "op": "ADD"
    },
    "4018": {
      "op": "MSTORE"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4021": {
      "op": "ADD"
    },
    "4022": {
      "op": "SWAP1"
    },
    "4023": {
      "jump": "o",
      "op": "JUMP"
    },
    "4024": {
      "op": "JUMPDEST"
    },
    "4025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4027": {
      "op": "DUP1"
    },
    "4028": {
      "op": "DUP3"
    },
    "4029": {
      "op": "MSTORE"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "4032": {
      "op": "SWAP1"
    },
    "4033": {
      "op": "DUP3"
    },
    "4034": {
      "op": "ADD"
    },
    "4035": {
      "op": "MSTORE"
    },
    "4036": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "4069": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4071": {
      "op": "DUP3"
    },
    "4072": {
      "op": "ADD"
    },
    "4073": {
      "op": "MSTORE"
    },
    "4074": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "4086": {
      "op": "SHL"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4089": {
      "op": "DUP3"
    },
    "4090": {
      "op": "ADD"
    },
    "4091": {
      "op": "MSTORE"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4094": {
      "op": "ADD"
    },
    "4095": {
      "op": "SWAP1"
    },
    "4096": {
      "jump": "o",
      "op": "JUMP"
    },
    "4097": {
      "op": "JUMPDEST"
    },
    "4098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4100": {
      "op": "DUP1"
    },
    "4101": {
      "op": "DUP3"
    },
    "4102": {
      "op": "MSTORE"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "4105": {
      "op": "SWAP1"
    },
    "4106": {
      "op": "DUP3"
    },
    "4107": {
      "op": "ADD"
    },
    "4108": {
      "op": "MSTORE"
    },
    "4109": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4144": {
      "op": "DUP3"
    },
    "4145": {
      "op": "ADD"
    },
    "4146": {
      "op": "MSTORE"
    },
    "4147": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "4160": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "4162": {
      "op": "SHL"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4165": {
      "op": "DUP3"
    },
    "4166": {
      "op": "ADD"
    },
    "4167": {
      "op": "MSTORE"
    },
    "4168": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4170": {
      "op": "ADD"
    },
    "4171": {
      "op": "SWAP1"
    },
    "4172": {
      "jump": "o",
      "op": "JUMP"
    },
    "4173": {
      "op": "JUMPDEST"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4176": {
      "op": "DUP1"
    },
    "4177": {
      "op": "DUP3"
    },
    "4178": {
      "op": "MSTORE"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "4181": {
      "op": "SWAP1"
    },
    "4182": {
      "op": "DUP3"
    },
    "4183": {
      "op": "ADD"
    },
    "4184": {
      "op": "MSTORE"
    },
    "4185": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4220": {
      "op": "DUP3"
    },
    "4221": {
      "op": "ADD"
    },
    "4222": {
      "op": "MSTORE"
    },
    "4223": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "4235": {
      "op": "SHL"
    },
    "4236": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4238": {
      "op": "DUP3"
    },
    "4239": {
      "op": "ADD"
    },
    "4240": {
      "op": "MSTORE"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4243": {
      "op": "ADD"
    },
    "4244": {
      "op": "SWAP1"
    },
    "4245": {
      "jump": "o",
      "op": "JUMP"
    },
    "4246": {
      "op": "JUMPDEST"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4249": {
      "op": "DUP1"
    },
    "4250": {
      "op": "DUP3"
    },
    "4251": {
      "op": "MSTORE"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "4254": {
      "op": "SWAP1"
    },
    "4255": {
      "op": "DUP3"
    },
    "4256": {
      "op": "ADD"
    },
    "4257": {
      "op": "MSTORE"
    },
    "4258": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4293": {
      "op": "DUP3"
    },
    "4294": {
      "op": "ADD"
    },
    "4295": {
      "op": "MSTORE"
    },
    "4296": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "4314": {
      "op": "SHL"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4317": {
      "op": "DUP3"
    },
    "4318": {
      "op": "ADD"
    },
    "4319": {
      "op": "MSTORE"
    },
    "4320": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4322": {
      "op": "ADD"
    },
    "4323": {
      "op": "SWAP1"
    },
    "4324": {
      "jump": "o",
      "op": "JUMP"
    },
    "4325": {
      "op": "JUMPDEST"
    },
    "4326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4328": {
      "op": "DUP1"
    },
    "4329": {
      "op": "DUP3"
    },
    "4330": {
      "op": "MSTORE"
    },
    "4331": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4333": {
      "op": "SWAP1"
    },
    "4334": {
      "op": "DUP3"
    },
    "4335": {
      "op": "ADD"
    },
    "4336": {
      "op": "MSTORE"
    },
    "4337": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4372": {
      "op": "DUP3"
    },
    "4373": {
      "op": "ADD"
    },
    "4374": {
      "op": "MSTORE"
    },
    "4375": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "4377": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "4379": {
      "op": "SHL"
    },
    "4380": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4382": {
      "op": "DUP3"
    },
    "4383": {
      "op": "ADD"
    },
    "4384": {
      "op": "MSTORE"
    },
    "4385": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4387": {
      "op": "ADD"
    },
    "4388": {
      "op": "SWAP1"
    },
    "4389": {
      "jump": "o",
      "op": "JUMP"
    },
    "4390": {
      "op": "JUMPDEST"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4393": {
      "op": "DUP1"
    },
    "4394": {
      "op": "DUP3"
    },
    "4395": {
      "op": "MSTORE"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4398": {
      "op": "SWAP1"
    },
    "4399": {
      "op": "DUP3"
    },
    "4400": {
      "op": "ADD"
    },
    "4401": {
      "op": "MSTORE"
    },
    "4402": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4437": {
      "op": "DUP3"
    },
    "4438": {
      "op": "ADD"
    },
    "4439": {
      "op": "MSTORE"
    },
    "4440": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "4458": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4460": {
      "op": "SHL"
    },
    "4461": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4463": {
      "op": "DUP3"
    },
    "4464": {
      "op": "ADD"
    },
    "4465": {
      "op": "MSTORE"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4468": {
      "op": "ADD"
    },
    "4469": {
      "op": "SWAP1"
    },
    "4470": {
      "jump": "o",
      "op": "JUMP"
    },
    "4471": {
      "op": "JUMPDEST"
    },
    "4472": {
      "op": "SWAP1"
    },
    "4473": {
      "op": "DUP2"
    },
    "4474": {
      "op": "MSTORE"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4477": {
      "op": "ADD"
    },
    "4478": {
      "op": "SWAP1"
    },
    "4479": {
      "jump": "o",
      "op": "JUMP"
    },
    "4480": {
      "op": "JUMPDEST"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4483": {
      "op": "DUP3"
    },
    "4484": {
      "op": "NOT"
    },
    "4485": {
      "op": "DUP3"
    },
    "4486": {
      "op": "GT"
    },
    "4487": {
      "op": "ISZERO"
    },
    "4488": {
      "op": "PUSH2",
      "value": "0x1193"
    },
    "4491": {
      "op": "JUMPI"
    },
    "4492": {
      "op": "PUSH2",
      "value": "0x1193"
    },
    "4495": {
      "op": "PUSH2",
      "value": "0x1259"
    },
    "4498": {
      "jump": "i",
      "op": "JUMP"
    },
    "4499": {
      "op": "JUMPDEST"
    },
    "4500": {
      "op": "POP"
    },
    "4501": {
      "op": "ADD"
    },
    "4502": {
      "op": "SWAP1"
    },
    "4503": {
      "jump": "o",
      "op": "JUMP"
    },
    "4504": {
      "op": "JUMPDEST"
    },
    "4505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4507": {
      "op": "DUP3"
    },
    "4508": {
      "op": "PUSH2",
      "value": "0x11A7"
    },
    "4511": {
      "op": "JUMPI"
    },
    "4512": {
      "op": "PUSH2",
      "value": "0x11A7"
    },
    "4515": {
      "op": "PUSH2",
      "value": "0x126F"
    },
    "4518": {
      "jump": "i",
      "op": "JUMP"
    },
    "4519": {
      "op": "JUMPDEST"
    },
    "4520": {
      "op": "POP"
    },
    "4521": {
      "op": "DIV"
    },
    "4522": {
      "op": "SWAP1"
    },
    "4523": {
      "jump": "o",
      "op": "JUMP"
    },
    "4524": {
      "op": "JUMPDEST"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4527": {
      "op": "DUP3"
    },
    "4528": {
      "op": "DUP3"
    },
    "4529": {
      "op": "LT"
    },
    "4530": {
      "op": "ISZERO"
    },
    "4531": {
      "op": "PUSH2",
      "value": "0x11BE"
    },
    "4534": {
      "op": "JUMPI"
    },
    "4535": {
      "op": "PUSH2",
      "value": "0x11BE"
    },
    "4538": {
      "op": "PUSH2",
      "value": "0x1259"
    },
    "4541": {
      "jump": "i",
      "op": "JUMP"
    },
    "4542": {
      "op": "JUMPDEST"
    },
    "4543": {
      "op": "POP"
    },
    "4544": {
      "op": "SUB"
    },
    "4545": {
      "op": "SWAP1"
    },
    "4546": {
      "jump": "o",
      "op": "JUMP"
    },
    "4547": {
      "op": "JUMPDEST"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4550": {
      "op": "JUMPDEST"
    },
    "4551": {
      "op": "DUP4"
    },
    "4552": {
      "op": "DUP2"
    },
    "4553": {
      "op": "LT"
    },
    "4554": {
      "op": "ISZERO"
    },
    "4555": {
      "op": "PUSH2",
      "value": "0x11DE"
    },
    "4558": {
      "op": "JUMPI"
    },
    "4559": {
      "op": "DUP2"
    },
    "4560": {
      "op": "DUP2"
    },
    "4561": {
      "op": "ADD"
    },
    "4562": {
      "op": "MLOAD"
    },
    "4563": {
      "op": "DUP4"
    },
    "4564": {
      "op": "DUP3"
    },
    "4565": {
      "op": "ADD"
    },
    "4566": {
      "op": "MSTORE"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4569": {
      "op": "ADD"
    },
    "4570": {
      "op": "PUSH2",
      "value": "0x11C6"
    },
    "4573": {
      "op": "JUMP"
    },
    "4574": {
      "op": "JUMPDEST"
    },
    "4575": {
      "op": "DUP4"
    },
    "4576": {
      "op": "DUP2"
    },
    "4577": {
      "op": "GT"
    },
    "4578": {
      "op": "ISZERO"
    },
    "4579": {
      "op": "PUSH2",
      "value": "0x4DC"
    },
    "4582": {
      "op": "JUMPI"
    },
    "4583": {
      "op": "POP"
    },
    "4584": {
      "op": "POP"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4587": {
      "op": "SWAP2"
    },
    "4588": {
      "op": "ADD"
    },
    "4589": {
      "op": "MSTORE"
    },
    "4590": {
      "jump": "o",
      "op": "JUMP"
    },
    "4591": {
      "op": "JUMPDEST"
    },
    "4592": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4594": {
      "op": "DUP2"
    },
    "4595": {
      "op": "DIV"
    },
    "4596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4598": {
      "op": "DUP3"
    },
    "4599": {
      "op": "AND"
    },
    "4600": {
      "op": "DUP1"
    },
    "4601": {
      "op": "PUSH2",
      "value": "0x1203"
    },
    "4604": {
      "op": "JUMPI"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4607": {
      "op": "DUP3"
    },
    "4608": {
      "op": "AND"
    },
    "4609": {
      "op": "SWAP2"
    },
    "4610": {
      "op": "POP"
    },
    "4611": {
      "op": "JUMPDEST"
    },
    "4612": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4614": {
      "op": "DUP3"
    },
    "4615": {
      "op": "LT"
    },
    "4616": {
      "op": "DUP2"
    },
    "4617": {
      "op": "EQ"
    },
    "4618": {
      "op": "ISZERO"
    },
    "4619": {
      "op": "PUSH2",
      "value": "0x1224"
    },
    "4622": {
      "op": "JUMPI"
    },
    "4623": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4628": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4630": {
      "op": "SHL"
    },
    "4631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4633": {
      "op": "MSTORE"
    },
    "4634": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4636": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4638": {
      "op": "MSTORE"
    },
    "4639": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4643": {
      "op": "REVERT"
    },
    "4644": {
      "op": "JUMPDEST"
    },
    "4645": {
      "op": "POP"
    },
    "4646": {
      "op": "SWAP2"
    },
    "4647": {
      "op": "SWAP1"
    },
    "4648": {
      "op": "POP"
    },
    "4649": {
      "jump": "o",
      "op": "JUMP"
    },
    "4650": {
      "op": "JUMPDEST"
    },
    "4651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4655": {
      "op": "NOT"
    },
    "4656": {
      "op": "DUP3"
    },
    "4657": {
      "op": "EQ"
    },
    "4658": {
      "op": "ISZERO"
    },
    "4659": {
      "op": "PUSH2",
      "value": "0x123E"
    },
    "4662": {
      "op": "JUMPI"
    },
    "4663": {
      "op": "PUSH2",
      "value": "0x123E"
    },
    "4666": {
      "op": "PUSH2",
      "value": "0x1259"
    },
    "4669": {
      "jump": "i",
      "op": "JUMP"
    },
    "4670": {
      "op": "JUMPDEST"
    },
    "4671": {
      "op": "POP"
    },
    "4672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4674": {
      "op": "ADD"
    },
    "4675": {
      "op": "SWAP1"
    },
    "4676": {
      "jump": "o",
      "op": "JUMP"
    },
    "4677": {
      "op": "JUMPDEST"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4680": {
      "op": "DUP3"
    },
    "4681": {
      "op": "PUSH2",
      "value": "0x1254"
    },
    "4684": {
      "op": "JUMPI"
    },
    "4685": {
      "op": "PUSH2",
      "value": "0x1254"
    },
    "4688": {
      "op": "PUSH2",
      "value": "0x126F"
    },
    "4691": {
      "jump": "i",
      "op": "JUMP"
    },
    "4692": {
      "op": "JUMPDEST"
    },
    "4693": {
      "op": "POP"
    },
    "4694": {
      "op": "MOD"
    },
    "4695": {
      "op": "SWAP1"
    },
    "4696": {
      "jump": "o",
      "op": "JUMP"
    },
    "4697": {
      "op": "JUMPDEST"
    },
    "4698": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4703": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4705": {
      "op": "SHL"
    },
    "4706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4708": {
      "op": "MSTORE"
    },
    "4709": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4711": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4713": {
      "op": "MSTORE"
    },
    "4714": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4718": {
      "op": "REVERT"
    },
    "4719": {
      "op": "JUMPDEST"
    },
    "4720": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4727": {
      "op": "SHL"
    },
    "4728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4730": {
      "op": "MSTORE"
    },
    "4731": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4733": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4735": {
      "op": "MSTORE"
    },
    "4736": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4740": {
      "op": "REVERT"
    },
    "4741": {
      "op": "JUMPDEST"
    },
    "4742": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4749": {
      "op": "SHL"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4752": {
      "op": "MSTORE"
    },
    "4753": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4757": {
      "op": "MSTORE"
    },
    "4758": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4762": {
      "op": "REVERT"
    },
    "4763": {
      "op": "JUMPDEST"
    },
    "4764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4768": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4770": {
      "op": "SHL"
    },
    "4771": {
      "op": "SUB"
    },
    "4772": {
      "op": "NOT"
    },
    "4773": {
      "op": "DUP2"
    },
    "4774": {
      "op": "AND"
    },
    "4775": {
      "op": "DUP2"
    },
    "4776": {
      "op": "EQ"
    },
    "4777": {
      "op": "PUSH2",
      "value": "0x12B1"
    },
    "4780": {
      "op": "JUMPI"
    },
    "4781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4783": {
      "op": "DUP1"
    },
    "4784": {
      "op": "REVERT"
    },
    "4785": {
      "op": "JUMPDEST"
    },
    "4786": {
      "op": "POP"
    },
    "4787": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "565517d832430f8bf8ad2ffa878b36567fcfeeeb",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../erc165/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n",
  "sourceMap": "586:13006:9:-:0;;;1348:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1414:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1437:17:9;;;;:7;;:17;;;;;:::i;:::-;;1348:113;;586:13006;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;586:13006:9;;;-1:-1:-1;586:13006:9;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:881:19;;123:3;116:4;108:6;104:17;100:27;90:2;;145:5;138;131:20;90:2;172:13;;-1:-1:-1;;;;;234:10:19;;;231:2;;;247:18;;:::i;:::-;296:2;290:9;318:4;388:2;369:13;;-1:-1:-1;;365:27:19;353:40;;349:49;;413:18;;;433:22;;;410:46;407:2;;;459:18;;:::i;:::-;495:2;488:22;519:18;;;556:15;;;552:24;;549:33;-1:-1:-1;546:2:19;;;599:5;592;585:20;546:2;625:5;616:14;;639:133;653:2;650:1;647:9;639:133;;;741:14;;;737:23;;731:30;710:14;;;706:23;;699:63;664:10;;;;639:133;;;790:2;787:1;784:9;781:2;;;849:5;844:2;839;831:6;827:15;823:24;816:39;781:2;-1:-1:-1;883:6:19;80:815;-1:-1:-1;;;;;80:815:19:o;900:596::-;;;1060:2;1048:9;1039:7;1035:23;1031:32;1028:2;;;1081:6;1073;1066:22;1028:2;1113:16;;-1:-1:-1;;;;;1178:14:19;;;1175:2;;;1210:6;1202;1195:22;1175:2;1238:63;1293:7;1284:6;1273:9;1269:22;1238:63;:::i;:::-;1228:73;;1347:2;1336:9;1332:18;1326:25;1310:41;;1376:2;1366:8;1363:16;1360:2;;;1397:6;1389;1382:22;1360:2;;1425:65;1482:7;1471:8;1460:9;1456:24;1425:65;:::i;:::-;1415:75;;;1018:478;;;;;:::o;1501:380::-;1586:1;1576:12;;1633:1;1623:12;;;1644:2;;1698:4;1690:6;1686:17;1676:27;;1644:2;1751;1743:6;1740:14;1720:18;1717:38;1714:2;;;1797:10;1792:3;1788:20;1785:1;1778:31;1832:4;1829:1;1822:15;1860:4;1857:1;1850:15;1714:2;;1556:325;;;:::o;1886:127::-;1947:10;1942:3;1938:20;1935:1;1928:31;1978:4;1975:1;1968:15;2002:4;1999:1;1992:15;1918:95;586:13006:9;;;;;;",
  "sourcePath": "contracts/token/erc721/ERC721.sol",
  "type": "contract"
}