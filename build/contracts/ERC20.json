{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "16": "contracts/utils/Context.sol",
    "6": "contracts/token/erc20/ERC20.sol",
    "7": "contracts/token/erc20/IERC20.sol",
    "8": "contracts/token/erc20/IERC20Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/token/erc20/ERC20.sol",
    "exportedSymbols": {
      "Context": [
        3284
      ],
      "ERC20": [
        1501
      ],
      "IERC20": [
        1579
      ],
      "IERC20Metadata": [
        1604
      ]
    },
    "id": 1502,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 957,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "90:23:6"
      },
      {
        "absolutePath": "contracts/token/erc20/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 958,
        "nodeType": "ImportDirective",
        "scope": 1502,
        "sourceUnit": 1580,
        "src": "115:22:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/token/erc20/IERC20Metadata.sol",
        "file": "./IERC20Metadata.sol",
        "id": 959,
        "nodeType": "ImportDirective",
        "scope": 1502,
        "sourceUnit": 1605,
        "src": "138:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 960,
        "nodeType": "ImportDirective",
        "scope": 1502,
        "sourceUnit": 3285,
        "src": "169:33:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 962,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3284,
              "src": "1395:7:6"
            },
            "id": 963,
            "nodeType": "InheritanceSpecifier",
            "src": "1395:7:6"
          },
          {
            "baseName": {
              "id": 964,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1579,
              "src": "1404:6:6"
            },
            "id": 965,
            "nodeType": "InheritanceSpecifier",
            "src": "1404:6:6"
          },
          {
            "baseName": {
              "id": 966,
              "name": "IERC20Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1604,
              "src": "1412:14:6"
            },
            "id": 967,
            "nodeType": "InheritanceSpecifier",
            "src": "1412:14:6"
          }
        ],
        "contractDependencies": [
          1579,
          1604,
          3284
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 961,
          "nodeType": "StructuredDocumentation",
          "src": "204:1172:6",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 1501,
        "linearizedBaseContracts": [
          1501,
          1604,
          1579,
          3284
        ],
        "name": "ERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 971,
            "mutability": "mutable",
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "scope": 1501,
            "src": "1433:45:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 970,
              "keyType": {
                "id": 968,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1441:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1433:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 969,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1452:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 977,
            "mutability": "mutable",
            "name": "_allowances",
            "nodeType": "VariableDeclaration",
            "scope": 1501,
            "src": "1485:67:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 976,
              "keyType": {
                "id": 972,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1493:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1485:47:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 975,
                "keyType": {
                  "id": 973,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1512:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1504:27:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 974,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1523:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 979,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 1501,
            "src": "1559:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 978,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1559:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 981,
            "mutability": "mutable",
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 1501,
            "src": "1594:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 980,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1594:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 983,
            "mutability": "mutable",
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1501,
            "src": "1620:22:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 982,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1620:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 999,
              "nodeType": "Block",
              "src": "2008:57:6",
              "statements": [
                {
                  "expression": {
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 991,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 981,
                      "src": "2018:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 992,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 986,
                      "src": "2026:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2018:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 994,
                  "nodeType": "ExpressionStatement",
                  "src": "2018:13:6"
                },
                {
                  "expression": {
                    "id": 997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 995,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 983,
                      "src": "2041:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 996,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 988,
                      "src": "2051:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2041:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 998,
                  "nodeType": "ExpressionStatement",
                  "src": "2041:17:6"
                }
              ]
            },
            "documentation": {
              "id": 984,
              "nodeType": "StructuredDocumentation",
              "src": "1649:298:6",
              "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
            },
            "id": 1000,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 986,
                  "mutability": "mutable",
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1000,
                  "src": "1964:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 985,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1964:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 988,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1000,
                  "src": "1985:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 987,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1985:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1963:44:6"
            },
            "returnParameters": {
              "id": 990,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2008:0:6"
            },
            "scope": 1501,
            "src": "1952:113:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1591
            ],
            "body": {
              "id": 1009,
              "nodeType": "Block",
              "src": "2199:29:6",
              "statements": [
                {
                  "expression": {
                    "id": 1007,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 981,
                    "src": "2216:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1006,
                  "id": 1008,
                  "nodeType": "Return",
                  "src": "2209:12:6"
                }
              ]
            },
            "documentation": {
              "id": 1001,
              "nodeType": "StructuredDocumentation",
              "src": "2071:54:6",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 1010,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1003,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2166:8:6"
            },
            "parameters": {
              "id": 1002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2143:2:6"
            },
            "returnParameters": {
              "id": 1006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1005,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1010,
                  "src": "2184:13:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1004,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2184:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2183:15:6"
            },
            "scope": 1501,
            "src": "2130:98:6",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1597
            ],
            "body": {
              "id": 1019,
              "nodeType": "Block",
              "src": "2412:31:6",
              "statements": [
                {
                  "expression": {
                    "id": 1017,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 983,
                    "src": "2429:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1016,
                  "id": 1018,
                  "nodeType": "Return",
                  "src": "2422:14:6"
                }
              ]
            },
            "documentation": {
              "id": 1011,
              "nodeType": "StructuredDocumentation",
              "src": "2234:102:6",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 1020,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1013,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2379:8:6"
            },
            "parameters": {
              "id": 1012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2356:2:6"
            },
            "returnParameters": {
              "id": 1016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1015,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1020,
                  "src": "2397:13:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1014,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2397:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2396:15:6"
            },
            "scope": 1501,
            "src": "2341:102:6",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1603
            ],
            "body": {
              "id": 1029,
              "nodeType": "Block",
              "src": "3132:26:6",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 1027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3149:2:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 1026,
                  "id": 1028,
                  "nodeType": "Return",
                  "src": "3142:9:6"
                }
              ]
            },
            "documentation": {
              "id": 1021,
              "nodeType": "StructuredDocumentation",
              "src": "2449:613:6",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 1030,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1023,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3107:8:6"
            },
            "parameters": {
              "id": 1022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3084:2:6"
            },
            "returnParameters": {
              "id": 1026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1025,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "3125:5:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1024,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3125:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3124:7:6"
            },
            "scope": 1501,
            "src": "3067:91:6",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1510
            ],
            "body": {
              "id": 1039,
              "nodeType": "Block",
              "src": "3288:36:6",
              "statements": [
                {
                  "expression": {
                    "id": 1037,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 979,
                    "src": "3305:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1036,
                  "id": 1038,
                  "nodeType": "Return",
                  "src": "3298:19:6"
                }
              ]
            },
            "documentation": {
              "id": 1031,
              "nodeType": "StructuredDocumentation",
              "src": "3164:49:6",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 1040,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1033,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3261:8:6"
            },
            "parameters": {
              "id": 1032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3238:2:6"
            },
            "returnParameters": {
              "id": 1036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1035,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1040,
                  "src": "3279:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3279:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3278:9:6"
            },
            "scope": 1501,
            "src": "3218:106:6",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1518
            ],
            "body": {
              "id": 1053,
              "nodeType": "Block",
              "src": "3465:42:6",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1049,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 971,
                      "src": "3482:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1051,
                    "indexExpression": {
                      "id": 1050,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1043,
                      "src": "3492:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3482:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1048,
                  "id": 1052,
                  "nodeType": "Return",
                  "src": "3475:25:6"
                }
              ]
            },
            "documentation": {
              "id": 1041,
              "nodeType": "StructuredDocumentation",
              "src": "3330:47:6",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 1054,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1045,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3438:8:6"
            },
            "parameters": {
              "id": 1044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1043,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1054,
                  "src": "3401:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3401:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3400:17:6"
            },
            "returnParameters": {
              "id": 1048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1047,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1054,
                  "src": "3456:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1046,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3456:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3455:9:6"
            },
            "scope": 1501,
            "src": "3382:125:6",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1528
            ],
            "body": {
              "id": 1074,
              "nodeType": "Block",
              "src": "3802:80:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1066,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3274,
                          "src": "3822:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3822:12:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1068,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1057,
                        "src": "3836:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1069,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "3847:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1065,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1305,
                      "src": "3812:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3812:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1071,
                  "nodeType": "ExpressionStatement",
                  "src": "3812:42:6"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3871:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1064,
                  "id": 1073,
                  "nodeType": "Return",
                  "src": "3864:11:6"
                }
              ]
            },
            "documentation": {
              "id": 1055,
              "nodeType": "StructuredDocumentation",
              "src": "3513:192:6",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 1075,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1061,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3778:8:6"
            },
            "parameters": {
              "id": 1060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1057,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1075,
                  "src": "3728:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1056,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3728:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1059,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1075,
                  "src": "3747:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3747:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3727:35:6"
            },
            "returnParameters": {
              "id": 1064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1063,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1075,
                  "src": "3796:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1062,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3796:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3795:6:6"
            },
            "scope": 1501,
            "src": "3710:172:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1538
            ],
            "body": {
              "id": 1092,
              "nodeType": "Block",
              "src": "4038:51:6",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1086,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 977,
                        "src": "4055:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 1088,
                      "indexExpression": {
                        "id": 1087,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1078,
                        "src": "4067:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4055:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1090,
                    "indexExpression": {
                      "id": 1089,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1080,
                      "src": "4074:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4055:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1085,
                  "id": 1091,
                  "nodeType": "Return",
                  "src": "4048:34:6"
                }
              ]
            },
            "documentation": {
              "id": 1076,
              "nodeType": "StructuredDocumentation",
              "src": "3888:47:6",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 1093,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1082,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4011:8:6"
            },
            "parameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1078,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1093,
                  "src": "3959:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1077,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3959:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1080,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1093,
                  "src": "3974:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3974:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3958:32:6"
            },
            "returnParameters": {
              "id": 1085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1084,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1093,
                  "src": "4029:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4029:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4028:9:6"
            },
            "scope": 1501,
            "src": "3940:149:6",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1548
            ],
            "body": {
              "id": 1113,
              "nodeType": "Block",
              "src": "4316:77:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1105,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3274,
                          "src": "4335:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4335:12:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1107,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1096,
                        "src": "4349:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1108,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1098,
                        "src": "4358:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1104,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1478,
                      "src": "4326:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4326:39:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1110,
                  "nodeType": "ExpressionStatement",
                  "src": "4326:39:6"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4382:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1103,
                  "id": 1112,
                  "nodeType": "Return",
                  "src": "4375:11:6"
                }
              ]
            },
            "documentation": {
              "id": 1094,
              "nodeType": "StructuredDocumentation",
              "src": "4095:127:6",
              "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 1114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1100,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4292:8:6"
            },
            "parameters": {
              "id": 1099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1096,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1114,
                  "src": "4244:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4244:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1098,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1114,
                  "src": "4261:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1097,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4261:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4243:33:6"
            },
            "returnParameters": {
              "id": 1103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1102,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1114,
                  "src": "4310:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1101,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4310:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4309:6:6"
            },
            "scope": 1501,
            "src": "4227:166:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1560
            ],
            "body": {
              "id": 1161,
              "nodeType": "Block",
              "src": "5002:336:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1128,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1117,
                        "src": "5022:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1129,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1119,
                        "src": "5030:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1130,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "5041:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1127,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1305,
                      "src": "5012:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5012:36:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1132,
                  "nodeType": "ExpressionStatement",
                  "src": "5012:36:6"
                },
                {
                  "assignments": [
                    1134
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1134,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1161,
                      "src": "5059:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1133,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5059:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1141,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1135,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 977,
                        "src": "5086:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 1137,
                      "indexExpression": {
                        "id": 1136,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1117,
                        "src": "5098:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5086:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1140,
                    "indexExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1138,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3274,
                        "src": "5106:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5106:12:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5086:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5059:60:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1143,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1134,
                          "src": "5137:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1144,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1121,
                          "src": "5157:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5137:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 1146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5165:42:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        },
                        "value": "ERC20: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 1142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5129:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5129:79:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1148,
                  "nodeType": "ExpressionStatement",
                  "src": "5129:79:6"
                },
                {
                  "id": 1158,
                  "nodeType": "UncheckedBlock",
                  "src": "5218:92:6",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1150,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1117,
                            "src": "5251:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1151,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3274,
                              "src": "5259:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5259:12:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1153,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1134,
                              "src": "5273:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1154,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1121,
                              "src": "5292:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5273:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1149,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1478,
                          "src": "5242:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 1156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5242:57:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1157,
                      "nodeType": "ExpressionStatement",
                      "src": "5242:57:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5327:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1126,
                  "id": 1160,
                  "nodeType": "Return",
                  "src": "5320:11:6"
                }
              ]
            },
            "documentation": {
              "id": 1115,
              "nodeType": "StructuredDocumentation",
              "src": "4399:456:6",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 1162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1123,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4978:8:6"
            },
            "parameters": {
              "id": 1122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1117,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1162,
                  "src": "4891:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4891:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1119,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1162,
                  "src": "4915:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4915:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1121,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1162,
                  "src": "4942:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4942:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4881:81:6"
            },
            "returnParameters": {
              "id": 1126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1125,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1162,
                  "src": "4996:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1124,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4996:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4995:6:6"
            },
            "scope": 1501,
            "src": "4860:478:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1188,
              "nodeType": "Block",
              "src": "5827:118:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1173,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3274,
                          "src": "5846:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5846:12:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1175,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1165,
                        "src": "5860:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1176,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 977,
                              "src": "5869:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1179,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1177,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3274,
                                "src": "5881:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5881:12:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5869:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1181,
                          "indexExpression": {
                            "id": 1180,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1165,
                            "src": "5895:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5869:34:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 1182,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1167,
                          "src": "5906:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5869:47:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1172,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1478,
                      "src": "5837:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5837:80:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1185,
                  "nodeType": "ExpressionStatement",
                  "src": "5837:80:6"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5934:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1171,
                  "id": 1187,
                  "nodeType": "Return",
                  "src": "5927:11:6"
                }
              ]
            },
            "documentation": {
              "id": 1163,
              "nodeType": "StructuredDocumentation",
              "src": "5344:384:6",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 1189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1165,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "5760:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5760:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1167,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "5777:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5777:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5759:37:6"
            },
            "returnParameters": {
              "id": 1171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1170,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "5821:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1169,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5821:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5820:6:6"
            },
            "scope": 1501,
            "src": "5733:212:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1227,
              "nodeType": "Block",
              "src": "6531:306:6",
              "statements": [
                {
                  "assignments": [
                    1200
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1200,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1227,
                      "src": "6541:24:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1199,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6541:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1207,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1201,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 977,
                        "src": "6568:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 1204,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1202,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3274,
                          "src": "6580:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6580:12:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6568:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1206,
                    "indexExpression": {
                      "id": 1205,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1192,
                      "src": "6594:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6568:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6541:61:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1209,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "6620:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1210,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1194,
                          "src": "6640:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6620:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 1212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6657:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 1208,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6612:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6612:85:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1214,
                  "nodeType": "ExpressionStatement",
                  "src": "6612:85:6"
                },
                {
                  "id": 1224,
                  "nodeType": "UncheckedBlock",
                  "src": "6707:102:6",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1216,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3274,
                              "src": "6740:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6740:12:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1218,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "6754:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1219,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1200,
                              "src": "6763:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1220,
                              "name": "subtractedValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1194,
                              "src": "6782:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6763:34:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1215,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1478,
                          "src": "6731:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 1222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6731:67:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1223,
                      "nodeType": "ExpressionStatement",
                      "src": "6731:67:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6826:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1198,
                  "id": 1226,
                  "nodeType": "Return",
                  "src": "6819:11:6"
                }
              ]
            },
            "documentation": {
              "id": 1190,
              "nodeType": "StructuredDocumentation",
              "src": "5951:476:6",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 1228,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1192,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1228,
                  "src": "6459:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6459:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1194,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 1228,
                  "src": "6476:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6476:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6458:42:6"
            },
            "returnParameters": {
              "id": 1198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1197,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1228,
                  "src": "6525:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1196,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6525:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6524:6:6"
            },
            "scope": 1501,
            "src": "6432:405:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1304,
              "nodeType": "Block",
              "src": "7428:596:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1239,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1231,
                          "src": "7446:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7464:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7456:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1240,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7456:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7456:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7446:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 1245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7468:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 1238,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7438:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7438:70:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1247,
                  "nodeType": "ExpressionStatement",
                  "src": "7438:70:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1249,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1233,
                          "src": "7526:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7547:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7539:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1250,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7539:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7539:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7526:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 1255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7551:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 1248,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7518:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7518:71:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1257,
                  "nodeType": "ExpressionStatement",
                  "src": "7518:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1259,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1231,
                        "src": "7621:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1260,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1233,
                        "src": "7629:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1261,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1235,
                        "src": "7640:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1258,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1489,
                      "src": "7600:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7600:47:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1263,
                  "nodeType": "ExpressionStatement",
                  "src": "7600:47:6"
                },
                {
                  "assignments": [
                    1265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1265,
                      "mutability": "mutable",
                      "name": "senderBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1304,
                      "src": "7658:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1264,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7658:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1269,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1266,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 971,
                      "src": "7682:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1268,
                    "indexExpression": {
                      "id": 1267,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1231,
                      "src": "7692:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7682:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7658:41:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1271,
                          "name": "senderBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1265,
                          "src": "7717:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1272,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1235,
                          "src": "7734:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7717:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 1274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7742:40:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 1270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7709:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7709:74:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1276,
                  "nodeType": "ExpressionStatement",
                  "src": "7709:74:6"
                },
                {
                  "id": 1285,
                  "nodeType": "UncheckedBlock",
                  "src": "7793:77:6",
                  "statements": [
                    {
                      "expression": {
                        "id": 1283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 1277,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "7817:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1279,
                          "indexExpression": {
                            "id": 1278,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1231,
                            "src": "7827:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "7817:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1280,
                            "name": "senderBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1265,
                            "src": "7837:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1281,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1235,
                            "src": "7853:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7837:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7817:42:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1284,
                      "nodeType": "ExpressionStatement",
                      "src": "7817:42:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 1290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1286,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "7879:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1288,
                      "indexExpression": {
                        "id": 1287,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1233,
                        "src": "7889:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7879:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1289,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1235,
                      "src": "7903:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7879:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1291,
                  "nodeType": "ExpressionStatement",
                  "src": "7879:30:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1293,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1231,
                        "src": "7934:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1294,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1233,
                        "src": "7942:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1295,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1235,
                        "src": "7953:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1292,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1569,
                      "src": "7925:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7925:35:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1297,
                  "nodeType": "EmitStatement",
                  "src": "7920:40:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1299,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1231,
                        "src": "7991:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1300,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1233,
                        "src": "7999:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1301,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1235,
                        "src": "8010:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1298,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1500,
                      "src": "7971:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7971:46:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1303,
                  "nodeType": "ExpressionStatement",
                  "src": "7971:46:6"
                }
              ]
            },
            "documentation": {
              "id": 1229,
              "nodeType": "StructuredDocumentation",
              "src": "6843:463:6",
              "text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 1305,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1231,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1305,
                  "src": "7339:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7339:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1233,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1305,
                  "src": "7363:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7363:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1235,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1305,
                  "src": "7390:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7390:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7329:81:6"
            },
            "returnParameters": {
              "id": 1237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7428:0:6"
            },
            "scope": 1501,
            "src": "7311:713:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1360,
              "nodeType": "Block",
              "src": "8365:324:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1314,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1308,
                          "src": "8383:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8402:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8394:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1315,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8394:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8394:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8383:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 1320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8406:33:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 1313,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8375:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8375:65:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1322,
                  "nodeType": "ExpressionStatement",
                  "src": "8375:65:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8480:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8472:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1324,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8472:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8472:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1328,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1308,
                        "src": "8484:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1329,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1310,
                        "src": "8493:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1323,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1489,
                      "src": "8451:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8451:49:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1331,
                  "nodeType": "ExpressionStatement",
                  "src": "8451:49:6"
                },
                {
                  "expression": {
                    "id": 1334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1332,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 979,
                      "src": "8511:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1333,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1310,
                      "src": "8527:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8511:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1335,
                  "nodeType": "ExpressionStatement",
                  "src": "8511:22:6"
                },
                {
                  "expression": {
                    "id": 1340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1336,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "8543:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1338,
                      "indexExpression": {
                        "id": 1337,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1308,
                        "src": "8553:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8543:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1339,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1310,
                      "src": "8565:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8543:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1341,
                  "nodeType": "ExpressionStatement",
                  "src": "8543:28:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8603:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8595:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1343,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8595:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8595:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1347,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1308,
                        "src": "8607:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1348,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1310,
                        "src": "8616:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1342,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1569,
                      "src": "8586:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8586:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1350,
                  "nodeType": "EmitStatement",
                  "src": "8581:42:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8662:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8654:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1352,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8654:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8654:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1356,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1308,
                        "src": "8666:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1357,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1310,
                        "src": "8675:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1351,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1500,
                      "src": "8634:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8634:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1359,
                  "nodeType": "ExpressionStatement",
                  "src": "8634:48:6"
                }
              ]
            },
            "documentation": {
              "id": 1306,
              "nodeType": "StructuredDocumentation",
              "src": "8030:265:6",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
            },
            "id": 1361,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1308,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "8315:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8315:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1310,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "8332:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8332:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8314:33:6"
            },
            "returnParameters": {
              "id": 1312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8365:0:6"
            },
            "scope": 1501,
            "src": "8300:389:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1432,
              "nodeType": "Block",
              "src": "9074:511:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1370,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1364,
                          "src": "9092:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9111:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9103:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1371,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9103:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9103:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9092:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 1376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9115:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 1369,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9084:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9084:67:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1378,
                  "nodeType": "ExpressionStatement",
                  "src": "9084:67:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1380,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "9183:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9200:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9192:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1381,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9192:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9192:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1385,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1366,
                        "src": "9204:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1379,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1489,
                      "src": "9162:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9162:49:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1387,
                  "nodeType": "ExpressionStatement",
                  "src": "9162:49:6"
                },
                {
                  "assignments": [
                    1389
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1389,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1432,
                      "src": "9222:22:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1388,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9222:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1393,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1390,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 971,
                      "src": "9247:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1392,
                    "indexExpression": {
                      "id": 1391,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1364,
                      "src": "9257:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9247:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9222:43:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1395,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1389,
                          "src": "9283:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1396,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1366,
                          "src": "9301:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9283:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 1398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9309:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 1394,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9275:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9275:71:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1400,
                  "nodeType": "ExpressionStatement",
                  "src": "9275:71:6"
                },
                {
                  "id": 1409,
                  "nodeType": "UncheckedBlock",
                  "src": "9356:79:6",
                  "statements": [
                    {
                      "expression": {
                        "id": 1407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 1401,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "9380:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1403,
                          "indexExpression": {
                            "id": 1402,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1364,
                            "src": "9390:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "9380:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1404,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1389,
                            "src": "9401:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1405,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1366,
                            "src": "9418:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9401:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9380:44:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1408,
                      "nodeType": "ExpressionStatement",
                      "src": "9380:44:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 1412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1410,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 979,
                      "src": "9444:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1411,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1366,
                      "src": "9460:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9444:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1413,
                  "nodeType": "ExpressionStatement",
                  "src": "9444:22:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1415,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "9491:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9508:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9500:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1416,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9500:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9500:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1420,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1366,
                        "src": "9512:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1414,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1569,
                      "src": "9482:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9482:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1422,
                  "nodeType": "EmitStatement",
                  "src": "9477:42:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1424,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "9550:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9567:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9559:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1425,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9559:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9559:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1429,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1366,
                        "src": "9571:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1423,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1500,
                      "src": "9530:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9530:48:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1431,
                  "nodeType": "ExpressionStatement",
                  "src": "9530:48:6"
                }
              ]
            },
            "documentation": {
              "id": 1362,
              "nodeType": "StructuredDocumentation",
              "src": "8695:309:6",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 1433,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1364,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "9024:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9024:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1366,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "9041:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9041:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9023:33:6"
            },
            "returnParameters": {
              "id": 1368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9074:0:6"
            },
            "scope": 1501,
            "src": "9009:576:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1477,
              "nodeType": "Block",
              "src": "10121:257:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1444,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1436,
                          "src": "10139:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10156:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10148:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1445,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10148:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10148:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10139:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 1450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10160:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 1443,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10131:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10131:68:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1452,
                  "nodeType": "ExpressionStatement",
                  "src": "10131:68:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1454,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1438,
                          "src": "10217:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10236:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10228:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1455,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10228:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10228:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10217:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 1460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10240:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 1453,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10209:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10209:68:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1462,
                  "nodeType": "ExpressionStatement",
                  "src": "10209:68:6"
                },
                {
                  "expression": {
                    "id": 1469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1463,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 977,
                          "src": "10288:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 1466,
                        "indexExpression": {
                          "id": 1464,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1436,
                          "src": "10300:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10288:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1467,
                      "indexExpression": {
                        "id": 1465,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1438,
                        "src": "10307:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10288:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1468,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1440,
                      "src": "10318:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10288:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1470,
                  "nodeType": "ExpressionStatement",
                  "src": "10288:36:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1472,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "10348:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1473,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1438,
                        "src": "10355:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1474,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1440,
                        "src": "10364:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1471,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1578,
                      "src": "10339:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10339:32:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1476,
                  "nodeType": "EmitStatement",
                  "src": "10334:37:6"
                }
              ]
            },
            "documentation": {
              "id": 1434,
              "nodeType": "StructuredDocumentation",
              "src": "9591:412:6",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 1478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1436,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "10035:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10035:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1438,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "10058:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1437,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10058:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1440,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "10083:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10083:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10025:78:6"
            },
            "returnParameters": {
              "id": 1442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10121:0:6"
            },
            "scope": 1501,
            "src": "10008:370:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1488,
              "nodeType": "Block",
              "src": "11081:2:6",
              "statements": []
            },
            "documentation": {
              "id": 1479,
              "nodeType": "StructuredDocumentation",
              "src": "10384:573:6",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 1489,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1481,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1489,
                  "src": "11001:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11001:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1483,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1489,
                  "src": "11023:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11023:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1485,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1489,
                  "src": "11043:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11043:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10991:72:6"
            },
            "returnParameters": {
              "id": 1487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11081:0:6"
            },
            "scope": 1501,
            "src": "10962:121:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1499,
              "nodeType": "Block",
              "src": "11789:2:6",
              "statements": []
            },
            "documentation": {
              "id": 1490,
              "nodeType": "StructuredDocumentation",
              "src": "11089:577:6",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 1500,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1492,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1500,
                  "src": "11709:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1491,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11709:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1494,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1500,
                  "src": "11731:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1493,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11731:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1496,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1500,
                  "src": "11751:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1495,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11751:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11699:72:6"
            },
            "returnParameters": {
              "id": 1498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11789:0:6"
            },
            "scope": 1501,
            "src": "11671:120:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1502,
        "src": "1377:10416:6"
      }
    ],
    "src": "90:11704:6"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000c4038038062000c408339810160408190526200003491620001b9565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000273565b828054620000769062000220565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c6200025d565b6040516020601f8401601f19168201810183811183821017156200016457620001646200025d565b60405283825285840181018710156200017b578485fd5b8492505b838310156200019e57858301810151828401820152918201916200017f565b83831115620001af57848185840101525b5095945050505050565b60008060408385031215620001cc578182fd5b82516001600160401b0380821115620001e3578384fd5b620001f1868387016200010e565b9350602085015191508082111562000207578283fd5b5062000216858286016200010e565b9150509250929050565b6002810460018216806200023557607f821691505b602082108114156200025757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6109bd80620002836000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012957806370a082311461013c57806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ec57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b6610190565b6040516100c391906106dd565b60405180910390f35b6100df6100da3660046106a9565b610222565b6040516100c391906106d2565b6100f461023f565b6040516100c39190610911565b6100df61010f36600461066e565b610245565b61011c6102de565b6040516100c3919061091a565b6100df6101373660046106a9565b6102e3565b6100f461014a36600461061b565b610337565b6100b6610356565b6100df6101653660046106a9565b610365565b6100df6101783660046106a9565b6103de565b6100f461018b36600461063c565b6103f2565b60606003805461019f9061094c565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb9061094c565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b5050505050905090565b600061023661022f61041d565b8484610421565b50600192915050565b60025490565b60006102528484846104d5565b6001600160a01b03841660009081526001602052604081208161027361041d565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156102bf5760405162461bcd60e51b81526004016102b6906107fb565b60405180910390fd5b6102d3856102cb61041d565b858403610421565b506001949350505050565b601290565b60006102366102f061041d565b8484600160006102fe61041d565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103329190610928565b610421565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461019f9061094c565b6000806001600061037461041d565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156103c05760405162461bcd60e51b81526004016102b6906108cc565b6103d46103cb61041d565b85858403610421565b5060019392505050565b60006102366103eb61041d565b84846104d5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104475760405162461bcd60e51b81526004016102b690610888565b6001600160a01b03821661046d5760405162461bcd60e51b81526004016102b690610773565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104c8908590610911565b60405180910390a3505050565b6001600160a01b0383166104fb5760405162461bcd60e51b81526004016102b690610843565b6001600160a01b0382166105215760405162461bcd60e51b81526004016102b690610730565b61052c8383836105ff565b6001600160a01b038316600090815260208190526040902054818110156105655760405162461bcd60e51b81526004016102b6906107b5565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061059c908490610928565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105e69190610911565b60405180910390a36105f98484846105ff565b50505050565b505050565b80356001600160a01b038116811461035157600080fd5b60006020828403121561062c578081fd5b61063582610604565b9392505050565b6000806040838503121561064e578081fd5b61065783610604565b915061066560208401610604565b90509250929050565b600080600060608486031215610682578081fd5b61068b84610604565b925061069960208501610604565b9150604084013590509250925092565b600080604083850312156106bb578182fd5b6106c483610604565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b81811015610709578581018301518582016040015282016106ed565b8181111561071a5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b60ff91909116815260200190565b6000821982111561094757634e487b7160e01b81526011600452602481fd5b500190565b60028104600182168061096057607f821691505b6020821081141561098157634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212200b40c76b5400805232e5e57628aeafcb329dc259049d2d895d51c1f0abdace3264736f6c63430008000033",
  "bytecodeSha1": "46265bce5d8560fb57eeebb5352b753a38dd6665",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.0+commit.c7dfd78e"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "16": {},
      "6": {
        "ERC20._approve": {
          "32": [
            10139,
            10158,
            true
          ],
          "33": [
            10217,
            10238,
            true
          ]
        },
        "ERC20._transfer": {
          "34": [
            7446,
            7466,
            true
          ],
          "35": [
            7526,
            7549,
            true
          ],
          "36": [
            7717,
            7740,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "31": [
            6620,
            6655,
            true
          ]
        },
        "ERC20.transferFrom": {
          "30": [
            5137,
            5163,
            true
          ]
        }
      },
      "7": {},
      "8": {}
    },
    "statements": {
      "16": {
        "Context._msgSender": {
          "17": [
            712,
            729
          ]
        }
      },
      "6": {
        "ERC20._approve": {
          "18": [
            10131,
            10199
          ],
          "19": [
            10209,
            10277
          ],
          "20": [
            10288,
            10324
          ],
          "21": [
            10334,
            10371
          ]
        },
        "ERC20._transfer": {
          "22": [
            7438,
            7508
          ],
          "23": [
            7518,
            7589
          ],
          "24": [
            7600,
            7647
          ],
          "25": [
            7709,
            7783
          ],
          "26": [
            7817,
            7859
          ],
          "27": [
            7879,
            7909
          ],
          "28": [
            7920,
            7960
          ],
          "29": [
            7971,
            8017
          ]
        },
        "ERC20.allowance": {
          "16": [
            4048,
            4082
          ]
        },
        "ERC20.approve": {
          "1": [
            4326,
            4365
          ],
          "2": [
            4375,
            4386
          ]
        },
        "ERC20.balanceOf": {
          "10": [
            3475,
            3500
          ]
        },
        "ERC20.decimals": {
          "8": [
            3142,
            3151
          ]
        },
        "ERC20.decreaseAllowance": {
          "12": [
            6612,
            6697
          ],
          "13": [
            6731,
            6798
          ],
          "14": [
            6819,
            6830
          ]
        },
        "ERC20.increaseAllowance": {
          "9": [
            5837,
            5917
          ]
        },
        "ERC20.name": {
          "0": [
            2209,
            2221
          ]
        },
        "ERC20.symbol": {
          "11": [
            2422,
            2436
          ]
        },
        "ERC20.totalSupply": {
          "3": [
            3298,
            3317
          ]
        },
        "ERC20.transfer": {
          "15": [
            3812,
            3854
          ]
        },
        "ERC20.transferFrom": {
          "4": [
            5012,
            5048
          ],
          "5": [
            5129,
            5208
          ],
          "6": [
            5242,
            5299
          ],
          "7": [
            5320,
            5331
          ]
        }
      },
      "7": {},
      "8": {}
    }
  },
  "dependencies": [
    "Context",
    "IERC20",
    "IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012957806370a082311461013c57806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ec57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b6610190565b6040516100c391906106dd565b60405180910390f35b6100df6100da3660046106a9565b610222565b6040516100c391906106d2565b6100f461023f565b6040516100c39190610911565b6100df61010f36600461066e565b610245565b61011c6102de565b6040516100c3919061091a565b6100df6101373660046106a9565b6102e3565b6100f461014a36600461061b565b610337565b6100b6610356565b6100df6101653660046106a9565b610365565b6100df6101783660046106a9565b6103de565b6100f461018b36600461063c565b6103f2565b60606003805461019f9061094c565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb9061094c565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b5050505050905090565b600061023661022f61041d565b8484610421565b50600192915050565b60025490565b60006102528484846104d5565b6001600160a01b03841660009081526001602052604081208161027361041d565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156102bf5760405162461bcd60e51b81526004016102b6906107fb565b60405180910390fd5b6102d3856102cb61041d565b858403610421565b506001949350505050565b601290565b60006102366102f061041d565b8484600160006102fe61041d565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103329190610928565b610421565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461019f9061094c565b6000806001600061037461041d565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156103c05760405162461bcd60e51b81526004016102b6906108cc565b6103d46103cb61041d565b85858403610421565b5060019392505050565b60006102366103eb61041d565b84846104d5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104475760405162461bcd60e51b81526004016102b690610888565b6001600160a01b03821661046d5760405162461bcd60e51b81526004016102b690610773565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104c8908590610911565b60405180910390a3505050565b6001600160a01b0383166104fb5760405162461bcd60e51b81526004016102b690610843565b6001600160a01b0382166105215760405162461bcd60e51b81526004016102b690610730565b61052c8383836105ff565b6001600160a01b038316600090815260208190526040902054818110156105655760405162461bcd60e51b81526004016102b6906107b5565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061059c908490610928565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105e69190610911565b60405180910390a36105f98484846105ff565b50505050565b505050565b80356001600160a01b038116811461035157600080fd5b60006020828403121561062c578081fd5b61063582610604565b9392505050565b6000806040838503121561064e578081fd5b61065783610604565b915061066560208401610604565b90509250929050565b600080600060608486031215610682578081fd5b61068b84610604565b925061069960208501610604565b9150604084013590509250925092565b600080604083850312156106bb578182fd5b6106c483610604565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b81811015610709578581018301518582016040015282016106ed565b8181111561071a5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b60ff91909116815260200190565b6000821982111561094757634e487b7160e01b81526011600452602481fd5b500190565b60028104600182168061096057607f821691505b6020821081141561098157634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212200b40c76b5400805232e5e57628aeafcb329dc259049d2d895d51c1f0abdace3264736f6c63430008000033",
  "deployedSourceMap": "1377:10416:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2130:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4227:166;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3218:106::-;;;:::i;:::-;;;;;;;:::i;4860:478::-;;;;;;:::i;:::-;;:::i;3067:91::-;;;:::i;:::-;;;;;;;:::i;5733:212::-;;;;;;:::i;:::-;;:::i;3382:125::-;;;;;;:::i;:::-;;:::i;2341:102::-;;;:::i;6432:405::-;;;;;;:::i;:::-;;:::i;3710:172::-;;;;;;:::i;:::-;;:::i;3940:149::-;;;;;;:::i;:::-;;:::i;2130:98::-;2184:13;2216:5;2209:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2130:98;:::o;4227:166::-;4310:4;4326:39;4335:12;:10;:12::i;:::-;4349:7;4358:6;4326:8;:39::i;:::-;-1:-1:-1;4382:4:6;4227:166;;;;:::o;3218:106::-;3305:12;;3218:106;:::o;4860:478::-;4996:4;5012:36;5022:6;5030:9;5041:6;5012:9;:36::i;:::-;-1:-1:-1;;;;;5086:19:6;;5059:24;5086:19;;;:11;:19;;;;;5059:24;5106:12;:10;:12::i;:::-;-1:-1:-1;;;;;5086:33:6;-1:-1:-1;;;;;5086:33:6;;;;;;;;;;;;;5059:60;;5157:6;5137:16;:26;;5129:79;;;;-1:-1:-1;;;5129:79:6;;;;;;;:::i;:::-;;;;;;;;;5242:57;5251:6;5259:12;:10;:12::i;:::-;5292:6;5273:16;:25;5242:8;:57::i;:::-;-1:-1:-1;5327:4:6;;4860:478;-1:-1:-1;;;;4860:478:6:o;3067:91::-;3149:2;3067:91;:::o;5733:212::-;5821:4;5837:80;5846:12;:10;:12::i;:::-;5860:7;5906:10;5869:11;:25;5881:12;:10;:12::i;:::-;-1:-1:-1;;;;;5869:25:6;;;;;;;;;;;;;;;;;-1:-1:-1;5869:25:6;;;:34;;;;;;;;;;:47;;;;:::i;:::-;5837:8;:80::i;3382:125::-;-1:-1:-1;;;;;3482:18:6;;3456:7;3482:18;;;;;;;;;;;3382:125;;;;:::o;2341:102::-;2397:13;2429:7;2422:14;;;;;:::i;6432:405::-;6525:4;6541:24;6568:11;:25;6580:12;:10;:12::i;:::-;-1:-1:-1;;;;;6568:25:6;;;;;;;;;;;;;;;;;-1:-1:-1;6568:25:6;;;:34;;;;;;;;;;;-1:-1:-1;6620:35:6;;;;6612:85;;;;-1:-1:-1;;;6612:85:6;;;;;;;:::i;:::-;6731:67;6740:12;:10;:12::i;:::-;6754:7;6782:15;6763:16;:34;6731:8;:67::i;:::-;-1:-1:-1;6826:4:6;;6432:405;-1:-1:-1;;;6432:405:6:o;3710:172::-;3796:4;3812:42;3822:12;:10;:12::i;:::-;3836:9;3847:6;3812:9;:42::i;3940:149::-;-1:-1:-1;;;;;4055:18:6;;;4029:7;4055:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3940:149::o;640:96:16:-;719:10;640:96;:::o;10008:370:6:-;-1:-1:-1;;;;;10139:19:6;;10131:68;;;;-1:-1:-1;;;10131:68:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;10217:21:6;;10209:68;;;;-1:-1:-1;;;10209:68:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;10288:18:6;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10339:32;;;;;10318:6;;10339:32;:::i;:::-;;;;;;;;10008:370;;;:::o;7311:713::-;-1:-1:-1;;;;;7446:20:6;;7438:70;;;;-1:-1:-1;;;7438:70:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;7526:23:6;;7518:71;;;;-1:-1:-1;;;7518:71:6;;;;;;;:::i;:::-;7600:47;7621:6;7629:9;7640:6;7600:20;:47::i;:::-;-1:-1:-1;;;;;7682:17:6;;7658:21;7682:17;;;;;;;;;;;7717:23;;;;7709:74;;;;-1:-1:-1;;;7709:74:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;7817:17:6;;;:9;:17;;;;;;;;;;;7837:22;;;7817:42;;7879:20;;;;;;;;:30;;7853:6;;7817:9;7879:30;;7853:6;;7879:30;:::i;:::-;;;;;;;;7942:9;-1:-1:-1;;;;;7925:35:6;7934:6;-1:-1:-1;;;;;7925:35:6;;7953:6;7925:35;;;;;;:::i;:::-;;;;;;;;7971:46;7991:6;7999:9;8010:6;7971:19;:46::i;:::-;7311:713;;;;:::o;10962:121::-;;;;:::o;14:175:19:-;84:20;;-1:-1:-1;;;;;133:31:19;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:19:o;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:19:o;1294:187::-;1459:14;;1452:22;1434:41;;1422:2;1407:18;;1389:92::o;1486:603::-;;1627:2;1656;1645:9;1638:21;1688:6;1682:13;1731:6;1726:2;1715:9;1711:18;1704:34;1756:4;1769:140;1783:6;1780:1;1777:13;1769:140;;;1878:14;;;1874:23;;1868:30;1844:17;;;1863:2;1840:26;1833:66;1798:10;;1769:140;;;1927:6;1924:1;1921:13;1918:2;;;1997:4;1992:2;1983:6;1972:9;1968:22;1964:31;1957:45;1918:2;-1:-1:-1;2073:2:19;2052:15;-1:-1:-1;;2048:29:19;2033:45;;;;2080:2;2029:54;;1607:482;-1:-1:-1;;;1607:482:19:o;2094:399::-;2296:2;2278:21;;;2335:2;2315:18;;;2308:30;2374:34;2369:2;2354:18;;2347:62;-1:-1:-1;;;2440:2:19;2425:18;;2418:33;2483:3;2468:19;;2268:225::o;2498:398::-;2700:2;2682:21;;;2739:2;2719:18;;;2712:30;2778:34;2773:2;2758:18;;2751:62;-1:-1:-1;;;2844:2:19;2829:18;;2822:32;2886:3;2871:19;;2672:224::o;2901:402::-;3103:2;3085:21;;;3142:2;3122:18;;;3115:30;3181:34;3176:2;3161:18;;3154:62;-1:-1:-1;;;3247:2:19;3232:18;;3225:36;3293:3;3278:19;;3075:228::o;3308:404::-;3510:2;3492:21;;;3549:2;3529:18;;;3522:30;3588:34;3583:2;3568:18;;3561:62;-1:-1:-1;;;3654:2:19;3639:18;;3632:38;3702:3;3687:19;;3482:230::o;3717:401::-;3919:2;3901:21;;;3958:2;3938:18;;;3931:30;3997:34;3992:2;3977:18;;3970:62;-1:-1:-1;;;4063:2:19;4048:18;;4041:35;4108:3;4093:19;;3891:227::o;4123:400::-;4325:2;4307:21;;;4364:2;4344:18;;;4337:30;4403:34;4398:2;4383:18;;4376:62;-1:-1:-1;;;4469:2:19;4454:18;;4447:34;4513:3;4498:19;;4297:226::o;4528:401::-;4730:2;4712:21;;;4769:2;4749:18;;;4742:30;4808:34;4803:2;4788:18;;4781:62;-1:-1:-1;;;4874:2:19;4859:18;;4852:35;4919:3;4904:19;;4702:227::o;4934:177::-;5080:25;;;5068:2;5053:18;;5035:76::o;5116:184::-;5288:4;5276:17;;;;5258:36;;5246:2;5231:18;;5213:87::o;5305:229::-;;5376:1;5372:6;5369:1;5366:13;5363:2;;;-1:-1:-1;;;5402:33:19;;5458:4;5455:1;5448:15;5488:4;5409:3;5476:17;5363:2;-1:-1:-1;5519:9:19;;5353:181::o;5539:380::-;5624:1;5614:12;;5671:1;5661:12;;;5682:2;;5736:4;5728:6;5724:17;5714:27;;5682:2;5789;5781:6;5778:14;5758:18;5755:38;5752:2;;;5835:10;5830:3;5826:20;5823:1;5816:31;5870:4;5867:1;5860:15;5898:4;5895:1;5888:15;5752:2;;5594:325;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    1377,
    11793
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x17D JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6D2 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x911 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x66E JUMP JUMPDEST PUSH2 0x245 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x91A JUMP JUMPDEST PUSH2 0xDF PUSH2 0x137 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x61B JUMP JUMPDEST PUSH2 0x337 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x356 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x3DE JUMP JUMPDEST PUSH2 0xF4 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x63C JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x94C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CB SWAP1 PUSH2 0x94C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x218 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x218 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236 PUSH2 0x22F PUSH2 0x41D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x421 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x252 DUP5 DUP5 DUP5 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x273 PUSH2 0x41D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x2BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D3 DUP6 PUSH2 0x2CB PUSH2 0x41D JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x421 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236 PUSH2 0x2F0 PUSH2 0x41D JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x2FE PUSH2 0x41D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP12 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x928 JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x19F SWAP1 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x374 PUSH2 0x41D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP9 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x3C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x8CC JUMP JUMPDEST PUSH2 0x3D4 PUSH2 0x3CB PUSH2 0x41D JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x421 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x236 PUSH2 0x3EB PUSH2 0x41D JUMP JUMPDEST DUP5 DUP5 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x447 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x888 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x46D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x773 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x4C8 SWAP1 DUP6 SWAP1 PUSH2 0x911 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x521 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x52C DUP4 DUP4 DUP4 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x565 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B6 SWAP1 PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x59C SWAP1 DUP5 SWAP1 PUSH2 0x928 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x5E6 SWAP2 SWAP1 PUSH2 0x911 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x5F9 DUP5 DUP5 DUP5 PUSH2 0x5FF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x62C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x635 DUP3 PUSH2 0x604 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x64E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x657 DUP4 PUSH2 0x604 JUMP JUMPDEST SWAP2 POP PUSH2 0x665 PUSH1 0x20 DUP5 ADD PUSH2 0x604 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x682 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x68B DUP5 PUSH2 0x604 JUMP JUMPDEST SWAP3 POP PUSH2 0x699 PUSH1 0x20 DUP6 ADD PUSH2 0x604 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6BB JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x6C4 DUP4 PUSH2 0x604 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x709 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6ED JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x71A JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x947 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x960 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x981 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND BLOCKHASH 0xC7 PUSH12 0x5400805232E5E57628AEAFCB ORIGIN SWAP14 0xC2 MSIZE DIV SWAP14 0x2D DUP10 0x5D MLOAD 0xC1 CREATE 0xAB 0xDA 0xCE ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x39509351"
    },
    "49": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "EQ",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x129"
    },
    "53": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13C"
    },
    "64": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14F"
    },
    "75": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA457C2D7"
    },
    "82": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x157"
    },
    "86": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x16A"
    },
    "97": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "DUP1",
      "path": "6"
    },
    "99": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "EQ",
      "path": "6"
    },
    "105": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17D"
    },
    "108": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "109": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA9"
    },
    "112": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "JUMP",
      "path": "6"
    },
    "113": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "114": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "DUP1",
      "path": "6"
    },
    "115": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "EQ",
      "path": "6"
    },
    "121": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "125": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "DUP1",
      "path": "6"
    },
    "126": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "EQ",
      "path": "6"
    },
    "132": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCC"
    },
    "135": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "136": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "DUP1",
      "path": "6"
    },
    "137": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "EQ",
      "path": "6"
    },
    "143": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xEC"
    },
    "146": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "147": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "DUP1",
      "path": "6"
    },
    "148": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "EQ",
      "path": "6"
    },
    "154": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x101"
    },
    "157": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "158": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "DUP1",
      "path": "6"
    },
    "159": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "EQ",
      "path": "6"
    },
    "165": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x114"
    },
    "168": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "169": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "170": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "DUP1",
      "path": "6"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1377,
        11793
      ],
      "op": "REVERT",
      "path": "6"
    },
    "174": {
      "fn": "ERC20.name",
      "offset": [
        2130,
        2228
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "175": {
      "fn": "ERC20.name",
      "offset": [
        2130,
        2228
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB6"
    },
    "178": {
      "fn": "ERC20.name",
      "offset": [
        2130,
        2228
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x190"
    },
    "181": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2130,
        2228
      ],
      "op": "JUMP",
      "path": "6"
    },
    "182": {
      "fn": "ERC20.name",
      "offset": [
        2130,
        2228
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "183": {
      "fn": "ERC20.name",
      "offset": [
        2130,
        2228
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "185": {
      "fn": "ERC20.name",
      "offset": [
        2130,
        2228
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "186": {
      "fn": "ERC20.name",
      "offset": [
        2130,
        2228
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC3"
    },
    "189": {
      "fn": "ERC20.name",
      "offset": [
        2130,
        2228
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "190": {
      "fn": "ERC20.name",
      "offset": [
        2130,
        2228
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "191": {
      "fn": "ERC20.name",
      "offset": [
        2130,
        2228
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6DD"
    },
    "194": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2130,
        2228
      ],
      "op": "JUMP",
      "path": "6"
    },
    "195": {
      "fn": "ERC20.name",
      "offset": [
        2130,
        2228
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "196": {
      "fn": "ERC20.name",
      "offset": [
        2130,
        2228
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "198": {
      "fn": "ERC20.name",
      "offset": [
        2130,
        2228
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "199": {
      "fn": "ERC20.name",
      "offset": [
        2130,
        2228
      ],
      "op": "DUP1",
      "path": "6"
    },
    "200": {
      "fn": "ERC20.name",
      "offset": [
        2130,
        2228
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "201": {
      "fn": "ERC20.name",
      "offset": [
        2130,
        2228
      ],
      "op": "SUB",
      "path": "6"
    },
    "202": {
      "fn": "ERC20.name",
      "offset": [
        2130,
        2228
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "203": {
      "fn": "ERC20.name",
      "offset": [
        2130,
        2228
      ],
      "op": "RETURN",
      "path": "6"
    },
    "204": {
      "fn": "ERC20.approve",
      "offset": [
        4227,
        4393
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "205": {
      "fn": "ERC20.approve",
      "offset": [
        4227,
        4393
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDF"
    },
    "208": {
      "fn": "ERC20.approve",
      "offset": [
        4227,
        4393
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDA"
    },
    "211": {
      "fn": "ERC20.approve",
      "offset": [
        4227,
        4393
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "212": {
      "fn": "ERC20.approve",
      "offset": [
        4227,
        4393
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "214": {
      "fn": "ERC20.approve",
      "offset": [
        4227,
        4393
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6A9"
    },
    "217": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4227,
        4393
      ],
      "op": "JUMP",
      "path": "6"
    },
    "218": {
      "fn": "ERC20.approve",
      "offset": [
        4227,
        4393
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "219": {
      "fn": "ERC20.approve",
      "offset": [
        4227,
        4393
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x222"
    },
    "222": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4227,
        4393
      ],
      "op": "JUMP",
      "path": "6"
    },
    "223": {
      "fn": "ERC20.approve",
      "offset": [
        4227,
        4393
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "224": {
      "fn": "ERC20.approve",
      "offset": [
        4227,
        4393
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "226": {
      "fn": "ERC20.approve",
      "offset": [
        4227,
        4393
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "227": {
      "fn": "ERC20.approve",
      "offset": [
        4227,
        4393
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC3"
    },
    "230": {
      "fn": "ERC20.approve",
      "offset": [
        4227,
        4393
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "231": {
      "fn": "ERC20.approve",
      "offset": [
        4227,
        4393
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "232": {
      "fn": "ERC20.approve",
      "offset": [
        4227,
        4393
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6D2"
    },
    "235": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4227,
        4393
      ],
      "op": "JUMP",
      "path": "6"
    },
    "236": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3218,
        3324
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "237": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3218,
        3324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF4"
    },
    "240": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3218,
        3324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23F"
    },
    "243": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3218,
        3324
      ],
      "op": "JUMP",
      "path": "6"
    },
    "244": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3218,
        3324
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "245": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3218,
        3324
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "247": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3218,
        3324
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "248": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3218,
        3324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC3"
    },
    "251": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3218,
        3324
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "252": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3218,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "253": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3218,
        3324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x911"
    },
    "256": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3218,
        3324
      ],
      "op": "JUMP",
      "path": "6"
    },
    "257": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4860,
        5338
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "258": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4860,
        5338
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDF"
    },
    "261": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4860,
        5338
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10F"
    },
    "264": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4860,
        5338
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "265": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4860,
        5338
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "267": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4860,
        5338
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x66E"
    },
    "270": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4860,
        5338
      ],
      "op": "JUMP",
      "path": "6"
    },
    "271": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4860,
        5338
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4860,
        5338
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x245"
    },
    "275": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4860,
        5338
      ],
      "op": "JUMP",
      "path": "6"
    },
    "276": {
      "fn": "ERC20.decimals",
      "offset": [
        3067,
        3158
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "277": {
      "fn": "ERC20.decimals",
      "offset": [
        3067,
        3158
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11C"
    },
    "280": {
      "fn": "ERC20.decimals",
      "offset": [
        3067,
        3158
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DE"
    },
    "283": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        3067,
        3158
      ],
      "op": "JUMP",
      "path": "6"
    },
    "284": {
      "fn": "ERC20.decimals",
      "offset": [
        3067,
        3158
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "285": {
      "fn": "ERC20.decimals",
      "offset": [
        3067,
        3158
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "287": {
      "fn": "ERC20.decimals",
      "offset": [
        3067,
        3158
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "288": {
      "fn": "ERC20.decimals",
      "offset": [
        3067,
        3158
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC3"
    },
    "291": {
      "fn": "ERC20.decimals",
      "offset": [
        3067,
        3158
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "292": {
      "fn": "ERC20.decimals",
      "offset": [
        3067,
        3158
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "293": {
      "fn": "ERC20.decimals",
      "offset": [
        3067,
        3158
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x91A"
    },
    "296": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        3067,
        3158
      ],
      "op": "JUMP",
      "path": "6"
    },
    "297": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5733,
        5945
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "298": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5733,
        5945
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDF"
    },
    "301": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5733,
        5945
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x137"
    },
    "304": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5733,
        5945
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "305": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5733,
        5945
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "307": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5733,
        5945
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6A9"
    },
    "310": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5733,
        5945
      ],
      "op": "JUMP",
      "path": "6"
    },
    "311": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5733,
        5945
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "312": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5733,
        5945
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E3"
    },
    "315": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5733,
        5945
      ],
      "op": "JUMP",
      "path": "6"
    },
    "316": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3382,
        3507
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "317": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3382,
        3507
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF4"
    },
    "320": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3382,
        3507
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3382,
        3507
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "324": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3382,
        3507
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3382,
        3507
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x61B"
    },
    "329": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3382,
        3507
      ],
      "op": "JUMP",
      "path": "6"
    },
    "330": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3382,
        3507
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "331": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3382,
        3507
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x337"
    },
    "334": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3382,
        3507
      ],
      "op": "JUMP",
      "path": "6"
    },
    "335": {
      "fn": "ERC20.symbol",
      "offset": [
        2341,
        2443
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "336": {
      "fn": "ERC20.symbol",
      "offset": [
        2341,
        2443
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB6"
    },
    "339": {
      "fn": "ERC20.symbol",
      "offset": [
        2341,
        2443
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x356"
    },
    "342": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2341,
        2443
      ],
      "op": "JUMP",
      "path": "6"
    },
    "343": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6837
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "344": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6837
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDF"
    },
    "347": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6837
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x165"
    },
    "350": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6837
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "351": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6837
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "353": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6837
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6A9"
    },
    "356": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6432,
        6837
      ],
      "op": "JUMP",
      "path": "6"
    },
    "357": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6837
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "358": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6837
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x365"
    },
    "361": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6432,
        6837
      ],
      "op": "JUMP",
      "path": "6"
    },
    "362": {
      "fn": "ERC20.transfer",
      "offset": [
        3710,
        3882
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "363": {
      "fn": "ERC20.transfer",
      "offset": [
        3710,
        3882
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDF"
    },
    "366": {
      "fn": "ERC20.transfer",
      "offset": [
        3710,
        3882
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x178"
    },
    "369": {
      "fn": "ERC20.transfer",
      "offset": [
        3710,
        3882
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "370": {
      "fn": "ERC20.transfer",
      "offset": [
        3710,
        3882
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "372": {
      "fn": "ERC20.transfer",
      "offset": [
        3710,
        3882
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6A9"
    },
    "375": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3710,
        3882
      ],
      "op": "JUMP",
      "path": "6"
    },
    "376": {
      "fn": "ERC20.transfer",
      "offset": [
        3710,
        3882
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "377": {
      "fn": "ERC20.transfer",
      "offset": [
        3710,
        3882
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3DE"
    },
    "380": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3710,
        3882
      ],
      "op": "JUMP",
      "path": "6"
    },
    "381": {
      "fn": "ERC20.allowance",
      "offset": [
        3940,
        4089
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "382": {
      "fn": "ERC20.allowance",
      "offset": [
        3940,
        4089
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF4"
    },
    "385": {
      "fn": "ERC20.allowance",
      "offset": [
        3940,
        4089
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x18B"
    },
    "388": {
      "fn": "ERC20.allowance",
      "offset": [
        3940,
        4089
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "389": {
      "fn": "ERC20.allowance",
      "offset": [
        3940,
        4089
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "391": {
      "fn": "ERC20.allowance",
      "offset": [
        3940,
        4089
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x63C"
    },
    "394": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3940,
        4089
      ],
      "op": "JUMP",
      "path": "6"
    },
    "395": {
      "fn": "ERC20.allowance",
      "offset": [
        3940,
        4089
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "396": {
      "fn": "ERC20.allowance",
      "offset": [
        3940,
        4089
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3F2"
    },
    "399": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3940,
        4089
      ],
      "op": "JUMP",
      "path": "6"
    },
    "400": {
      "fn": "ERC20.name",
      "offset": [
        2130,
        2228
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "401": {
      "fn": "ERC20.name",
      "offset": [
        2184,
        2197
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "403": {
      "fn": "ERC20.name",
      "offset": [
        2216,
        2221
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x3"
    },
    "405": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DUP1",
      "path": "6"
    },
    "406": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "407": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19F"
    },
    "410": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "411": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x94C"
    },
    "414": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2209,
        2221
      ],
      "op": "JUMP",
      "path": "6"
    },
    "415": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "416": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DUP1",
      "path": "6"
    },
    "417": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "419": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "ADD",
      "path": "6"
    },
    "420": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "422": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DUP1",
      "path": "6"
    },
    "423": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "424": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DIV",
      "path": "6"
    },
    "425": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "MUL",
      "path": "6"
    },
    "426": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "428": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "ADD",
      "path": "6"
    },
    "429": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "431": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "432": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "433": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DUP2",
      "path": "6"
    },
    "434": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "ADD",
      "path": "6"
    },
    "435": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "437": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "438": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DUP1",
      "path": "6"
    },
    "439": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "440": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "441": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "442": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DUP2",
      "path": "6"
    },
    "443": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DUP2",
      "path": "6"
    },
    "444": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "445": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "447": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "ADD",
      "path": "6"
    },
    "448": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DUP3",
      "path": "6"
    },
    "449": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DUP1",
      "path": "6"
    },
    "450": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "451": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1CB"
    },
    "454": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "455": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x94C"
    },
    "458": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2209,
        2221
      ],
      "op": "JUMP",
      "path": "6"
    },
    "459": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "460": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DUP1",
      "path": "6"
    },
    "461": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "462": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x218"
    },
    "465": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "466": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DUP1",
      "path": "6"
    },
    "467": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "469": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "LT",
      "path": "6"
    },
    "470": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1ED"
    },
    "473": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "474": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "477": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DUP1",
      "path": "6"
    },
    "478": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DUP4",
      "path": "6"
    },
    "479": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "480": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DIV",
      "path": "6"
    },
    "481": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "MUL",
      "path": "6"
    },
    "482": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DUP4",
      "path": "6"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "484": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "487": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "ADD",
      "path": "6"
    },
    "488": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "489": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x218"
    },
    "492": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "JUMP",
      "path": "6"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "494": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DUP3",
      "path": "6"
    },
    "495": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "ADD",
      "path": "6"
    },
    "496": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "500": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "501": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "505": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "506": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "507": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "508": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DUP2",
      "path": "6"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "510": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DUP2",
      "path": "6"
    },
    "511": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "512": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "513": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "515": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "ADD",
      "path": "6"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "517": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "ADD",
      "path": "6"
    },
    "520": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DUP1",
      "path": "6"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DUP4",
      "path": "6"
    },
    "522": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "GT",
      "path": "6"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FB"
    },
    "526": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DUP3",
      "path": "6"
    },
    "528": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "529": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SUB",
      "path": "6"
    },
    "530": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "AND",
      "path": "6"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "DUP3",
      "path": "6"
    },
    "534": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "ADD",
      "path": "6"
    },
    "535": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "536": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "POP",
      "path": "6"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "POP",
      "path": "6"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "POP",
      "path": "6"
    },
    "540": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "POP",
      "path": "6"
    },
    "541": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "POP",
      "path": "6"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2209,
        2221
      ],
      "op": "POP",
      "path": "6"
    },
    "544": {
      "fn": "ERC20.name",
      "offset": [
        2130,
        2228
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "545": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2130,
        2228
      ],
      "op": "JUMP",
      "path": "6"
    },
    "546": {
      "fn": "ERC20.approve",
      "offset": [
        4227,
        4393
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "547": {
      "fn": "ERC20.approve",
      "offset": [
        4310,
        4314
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "549": {
      "fn": "ERC20.approve",
      "offset": [
        4326,
        4365
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 1,
      "value": "0x236"
    },
    "552": {
      "fn": "ERC20.approve",
      "offset": [
        4335,
        4347
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x22F"
    },
    "555": {
      "fn": "ERC20.approve",
      "offset": [
        4335,
        4345
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41D"
    },
    "558": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4335,
        4347
      ],
      "op": "JUMP",
      "path": "6"
    },
    "559": {
      "fn": "ERC20.approve",
      "offset": [
        4335,
        4347
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "560": {
      "fn": "ERC20.approve",
      "offset": [
        4349,
        4356
      ],
      "op": "DUP5",
      "path": "6"
    },
    "561": {
      "fn": "ERC20.approve",
      "offset": [
        4358,
        4364
      ],
      "op": "DUP5",
      "path": "6"
    },
    "562": {
      "fn": "ERC20.approve",
      "offset": [
        4326,
        4334
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x421"
    },
    "565": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4326,
        4365
      ],
      "op": "JUMP",
      "path": "6"
    },
    "566": {
      "fn": "ERC20.approve",
      "offset": [
        4326,
        4365
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "567": {
      "op": "POP"
    },
    "568": {
      "fn": "ERC20.approve",
      "offset": [
        4382,
        4386
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 2,
      "value": "0x1"
    },
    "570": {
      "fn": "ERC20.approve",
      "offset": [
        4227,
        4393
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "571": {
      "fn": "ERC20.approve",
      "offset": [
        4227,
        4393
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "572": {
      "fn": "ERC20.approve",
      "offset": [
        4227,
        4393
      ],
      "op": "POP",
      "path": "6"
    },
    "573": {
      "fn": "ERC20.approve",
      "offset": [
        4227,
        4393
      ],
      "op": "POP",
      "path": "6"
    },
    "574": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4227,
        4393
      ],
      "op": "JUMP",
      "path": "6"
    },
    "575": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3218,
        3324
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "576": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3305,
        3317
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 3,
      "value": "0x2"
    },
    "578": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3305,
        3317
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "579": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3218,
        3324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "580": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        3218,
        3324
      ],
      "op": "JUMP",
      "path": "6"
    },
    "581": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4860,
        5338
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "582": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4996,
        5000
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "584": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5012,
        5048
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 4,
      "value": "0x252"
    },
    "587": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5022,
        5028
      ],
      "op": "DUP5",
      "path": "6"
    },
    "588": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5030,
        5039
      ],
      "op": "DUP5",
      "path": "6"
    },
    "589": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5041,
        5047
      ],
      "op": "DUP5",
      "path": "6"
    },
    "590": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5012,
        5021
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4D5"
    },
    "593": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5012,
        5048
      ],
      "op": "JUMP",
      "path": "6"
    },
    "594": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5012,
        5048
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "599": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "601": {
      "op": "SHL"
    },
    "602": {
      "op": "SUB"
    },
    "603": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5105
      ],
      "op": "DUP5",
      "path": "6"
    },
    "604": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5105
      ],
      "op": "AND",
      "path": "6"
    },
    "605": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5059,
        5083
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "607": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5105
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "608": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5105
      ],
      "op": "DUP2",
      "path": "6"
    },
    "609": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5105
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "610": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5097
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "612": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5105
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "614": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5105
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "615": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5105
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "617": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5105
      ],
      "op": "DUP2",
      "path": "6"
    },
    "618": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5105
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "619": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5059,
        5083
      ],
      "op": "DUP2",
      "path": "6"
    },
    "620": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5106,
        5118
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x273"
    },
    "623": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5106,
        5116
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41D"
    },
    "626": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5106,
        5118
      ],
      "op": "JUMP",
      "path": "6"
    },
    "627": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5106,
        5118
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "634": {
      "op": "SHL"
    },
    "635": {
      "op": "SUB"
    },
    "636": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5119
      ],
      "op": "AND",
      "path": "6"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "643": {
      "op": "SHL"
    },
    "644": {
      "op": "SUB"
    },
    "645": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5119
      ],
      "op": "AND",
      "path": "6"
    },
    "646": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5119
      ],
      "op": "DUP2",
      "path": "6"
    },
    "647": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5119
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "648": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5119
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "650": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5119
      ],
      "op": "ADD",
      "path": "6"
    },
    "651": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5119
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "652": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5119
      ],
      "op": "DUP2",
      "path": "6"
    },
    "653": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5119
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "654": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5119
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "656": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5119
      ],
      "op": "ADD",
      "path": "6"
    },
    "657": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5119
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "659": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5119
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "660": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5086,
        5119
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "661": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5059,
        5119
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "662": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5059,
        5119
      ],
      "op": "POP",
      "path": "6"
    },
    "663": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5157,
        5163
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 5
    },
    "664": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5137,
        5153
      ],
      "op": "DUP2",
      "path": "6"
    },
    "665": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5137,
        5163
      ],
      "op": "LT",
      "path": "6"
    },
    "666": {
      "branch": 30,
      "fn": "ERC20.transferFrom",
      "offset": [
        5137,
        5163
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "667": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5129,
        5208
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BF"
    },
    "670": {
      "branch": 30,
      "fn": "ERC20.transferFrom",
      "offset": [
        5129,
        5208
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "671": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5129,
        5208
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "673": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5129,
        5208
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "674": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "678": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "680": {
      "op": "SHL"
    },
    "681": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5129,
        5208
      ],
      "op": "DUP2",
      "path": "6"
    },
    "682": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5129,
        5208
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "683": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5129,
        5208
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "685": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5129,
        5208
      ],
      "op": "ADD",
      "path": "6"
    },
    "686": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5129,
        5208
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B6"
    },
    "689": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5129,
        5208
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "690": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5129,
        5208
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7FB"
    },
    "693": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5129,
        5208
      ],
      "op": "JUMP",
      "path": "6"
    },
    "694": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5129,
        5208
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "695": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5129,
        5208
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "697": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5129,
        5208
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "698": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5129,
        5208
      ],
      "op": "DUP1",
      "path": "6"
    },
    "699": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5129,
        5208
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "700": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5129,
        5208
      ],
      "op": "SUB",
      "path": "6"
    },
    "701": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5129,
        5208
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "702": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5129,
        5208
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "703": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5129,
        5208
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "704": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5242,
        5299
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 6,
      "value": "0x2D3"
    },
    "707": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5251,
        5257
      ],
      "op": "DUP6",
      "path": "6"
    },
    "708": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5259,
        5271
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CB"
    },
    "711": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5259,
        5269
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41D"
    },
    "714": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5259,
        5271
      ],
      "op": "JUMP",
      "path": "6"
    },
    "715": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5259,
        5271
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "716": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5292,
        5298
      ],
      "op": "DUP6",
      "path": "6"
    },
    "717": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5273,
        5289
      ],
      "op": "DUP5",
      "path": "6"
    },
    "718": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5273,
        5298
      ],
      "op": "SUB",
      "path": "6"
    },
    "719": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5242,
        5250
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x421"
    },
    "722": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5242,
        5299
      ],
      "op": "JUMP",
      "path": "6"
    },
    "723": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5242,
        5299
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "724": {
      "op": "POP"
    },
    "725": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5327,
        5331
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 7,
      "value": "0x1"
    },
    "727": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5327,
        5331
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "728": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4860,
        5338
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "729": {
      "op": "POP"
    },
    "730": {
      "op": "POP"
    },
    "731": {
      "op": "POP"
    },
    "732": {
      "op": "POP"
    },
    "733": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4860,
        5338
      ],
      "op": "JUMP",
      "path": "6"
    },
    "734": {
      "fn": "ERC20.decimals",
      "offset": [
        3067,
        3158
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "735": {
      "fn": "ERC20.decimals",
      "offset": [
        3149,
        3151
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 8,
      "value": "0x12"
    },
    "737": {
      "fn": "ERC20.decimals",
      "offset": [
        3067,
        3158
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "738": {
      "fn": "ERC20.decimals",
      "jump": "o",
      "offset": [
        3067,
        3158
      ],
      "op": "JUMP",
      "path": "6"
    },
    "739": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5733,
        5945
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "740": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5821,
        5825
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "742": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5837,
        5917
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 9,
      "value": "0x236"
    },
    "745": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5846,
        5858
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F0"
    },
    "748": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5846,
        5856
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41D"
    },
    "751": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5846,
        5858
      ],
      "op": "JUMP",
      "path": "6"
    },
    "752": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5846,
        5858
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "753": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5860,
        5867
      ],
      "op": "DUP5",
      "path": "6"
    },
    "754": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5906,
        5916
      ],
      "op": "DUP5",
      "path": "6"
    },
    "755": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5880
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "757": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5894
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "759": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5881,
        5893
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2FE"
    },
    "762": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5881,
        5891
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41D"
    },
    "765": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5881,
        5893
      ],
      "op": "JUMP",
      "path": "6"
    },
    "766": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5881,
        5893
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "771": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "773": {
      "op": "SHL"
    },
    "774": {
      "op": "SUB"
    },
    "775": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5894
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "776": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5894
      ],
      "op": "DUP2",
      "path": "6"
    },
    "777": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5894
      ],
      "op": "AND",
      "path": "6"
    },
    "778": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5894
      ],
      "op": "DUP3",
      "path": "6"
    },
    "779": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5894
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "780": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5894
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "782": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5894
      ],
      "op": "DUP1",
      "path": "6"
    },
    "783": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5894
      ],
      "op": "DUP4",
      "path": "6"
    },
    "784": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5894
      ],
      "op": "ADD",
      "path": "6"
    },
    "785": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5894
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "786": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5894
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "787": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5894
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "788": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5894
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "789": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5894
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "791": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5894
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "792": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5894
      ],
      "op": "DUP3",
      "path": "6"
    },
    "793": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5894
      ],
      "op": "ADD",
      "path": "6"
    },
    "794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "796": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5894
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "797": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5894
      ],
      "op": "DUP2",
      "path": "6"
    },
    "798": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5894
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "799": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5903
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "800": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5903
      ],
      "op": "DUP12",
      "path": "6"
    },
    "801": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5903
      ],
      "op": "AND",
      "path": "6"
    },
    "802": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5903
      ],
      "op": "DUP2",
      "path": "6"
    },
    "803": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5903
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "804": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5903
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "805": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5903
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "806": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5903
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "807": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5903
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "808": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5903
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "809": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5916
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x332"
    },
    "812": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5916
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "813": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5916
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "814": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5916
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x928"
    },
    "817": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5869,
        5916
      ],
      "op": "JUMP",
      "path": "6"
    },
    "818": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5869,
        5916
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "819": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5837,
        5845
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x421"
    },
    "822": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5837,
        5917
      ],
      "op": "JUMP",
      "path": "6"
    },
    "823": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3382,
        3507
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "828": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "830": {
      "op": "SHL"
    },
    "831": {
      "op": "SUB"
    },
    "832": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3500
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 10
    },
    "833": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3500
      ],
      "op": "AND",
      "path": "6"
    },
    "834": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3456,
        3463
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "836": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3500
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "837": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3500
      ],
      "op": "DUP2",
      "path": "6"
    },
    "838": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3500
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "839": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3500
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "841": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3500
      ],
      "op": "DUP2",
      "path": "6"
    },
    "842": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3500
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "843": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3500
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "844": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3500
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "846": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3500
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "847": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3500
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "848": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3500
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "849": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3382,
        3507
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "850": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3382,
        3507
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "851": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3382,
        3507
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "852": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3382,
        3507
      ],
      "op": "POP",
      "path": "6"
    },
    "853": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3382,
        3507
      ],
      "op": "JUMP",
      "path": "6"
    },
    "854": {
      "fn": "ERC20.symbol",
      "offset": [
        2341,
        2443
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "855": {
      "fn": "ERC20.symbol",
      "offset": [
        2397,
        2410
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "857": {
      "fn": "ERC20.symbol",
      "offset": [
        2429,
        2436
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 11,
      "value": "0x4"
    },
    "859": {
      "fn": "ERC20.symbol",
      "offset": [
        2422,
        2436
      ],
      "op": "DUP1",
      "path": "6"
    },
    "860": {
      "fn": "ERC20.symbol",
      "offset": [
        2422,
        2436
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "861": {
      "fn": "ERC20.symbol",
      "offset": [
        2422,
        2436
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x19F"
    },
    "864": {
      "fn": "ERC20.symbol",
      "offset": [
        2422,
        2436
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "865": {
      "fn": "ERC20.symbol",
      "offset": [
        2422,
        2436
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x94C"
    },
    "868": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2422,
        2436
      ],
      "op": "JUMP",
      "path": "6"
    },
    "869": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6837
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "870": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6525,
        6529
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "872": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6541,
        6565
      ],
      "op": "DUP1",
      "path": "6"
    },
    "873": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6579
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "875": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6593
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "877": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6580,
        6592
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x374"
    },
    "880": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6580,
        6590
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41D"
    },
    "883": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6580,
        6592
      ],
      "op": "JUMP",
      "path": "6"
    },
    "884": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6580,
        6592
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "891": {
      "op": "SHL"
    },
    "892": {
      "op": "SUB"
    },
    "893": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6593
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "894": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6593
      ],
      "op": "DUP2",
      "path": "6"
    },
    "895": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6593
      ],
      "op": "AND",
      "path": "6"
    },
    "896": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6593
      ],
      "op": "DUP3",
      "path": "6"
    },
    "897": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6593
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "898": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6593
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "900": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6593
      ],
      "op": "DUP1",
      "path": "6"
    },
    "901": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6593
      ],
      "op": "DUP4",
      "path": "6"
    },
    "902": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6593
      ],
      "op": "ADD",
      "path": "6"
    },
    "903": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6593
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "904": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6593
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "905": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6593
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "906": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6593
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "907": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6593
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "909": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6593
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "910": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6593
      ],
      "op": "DUP3",
      "path": "6"
    },
    "911": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6593
      ],
      "op": "ADD",
      "path": "6"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "914": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6593
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "915": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6593
      ],
      "op": "DUP2",
      "path": "6"
    },
    "916": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6593
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "917": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6602
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "918": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6602
      ],
      "op": "DUP9",
      "path": "6"
    },
    "919": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6602
      ],
      "op": "AND",
      "path": "6"
    },
    "920": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6602
      ],
      "op": "DUP2",
      "path": "6"
    },
    "921": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6602
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "922": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6602
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "923": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6602
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "924": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6602
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "925": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6602
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "926": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6602
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "927": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6568,
        6602
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "928": {
      "op": "POP"
    },
    "929": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6620,
        6655
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 12
    },
    "930": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6620,
        6655
      ],
      "op": "DUP2",
      "path": "6"
    },
    "931": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6620,
        6655
      ],
      "op": "LT",
      "path": "6"
    },
    "932": {
      "branch": 31,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6620,
        6655
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "933": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6612,
        6697
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C0"
    },
    "936": {
      "branch": 31,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6612,
        6697
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "937": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6612,
        6697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "939": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6612,
        6697
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "940": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "944": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "946": {
      "op": "SHL"
    },
    "947": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6612,
        6697
      ],
      "op": "DUP2",
      "path": "6"
    },
    "948": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6612,
        6697
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "949": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6612,
        6697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "951": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6612,
        6697
      ],
      "op": "ADD",
      "path": "6"
    },
    "952": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6612,
        6697
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B6"
    },
    "955": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6612,
        6697
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "956": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6612,
        6697
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8CC"
    },
    "959": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6612,
        6697
      ],
      "op": "JUMP",
      "path": "6"
    },
    "960": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6612,
        6697
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "961": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6731,
        6798
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 13,
      "value": "0x3D4"
    },
    "964": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6740,
        6752
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CB"
    },
    "967": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6740,
        6750
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41D"
    },
    "970": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6740,
        6752
      ],
      "op": "JUMP",
      "path": "6"
    },
    "971": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6740,
        6752
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "972": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6754,
        6761
      ],
      "op": "DUP6",
      "path": "6"
    },
    "973": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6782,
        6797
      ],
      "op": "DUP6",
      "path": "6"
    },
    "974": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6763,
        6779
      ],
      "op": "DUP5",
      "path": "6"
    },
    "975": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6763,
        6797
      ],
      "op": "SUB",
      "path": "6"
    },
    "976": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6731,
        6739
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x421"
    },
    "979": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6731,
        6798
      ],
      "op": "JUMP",
      "path": "6"
    },
    "980": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6731,
        6798
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "981": {
      "op": "POP"
    },
    "982": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6826,
        6830
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 14,
      "value": "0x1"
    },
    "984": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6826,
        6830
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "985": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6837
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "986": {
      "op": "POP"
    },
    "987": {
      "op": "POP"
    },
    "988": {
      "op": "POP"
    },
    "989": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6432,
        6837
      ],
      "op": "JUMP",
      "path": "6"
    },
    "990": {
      "fn": "ERC20.transfer",
      "offset": [
        3710,
        3882
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "991": {
      "fn": "ERC20.transfer",
      "offset": [
        3796,
        3800
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "993": {
      "fn": "ERC20.transfer",
      "offset": [
        3812,
        3854
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 15,
      "value": "0x236"
    },
    "996": {
      "fn": "ERC20.transfer",
      "offset": [
        3822,
        3834
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3EB"
    },
    "999": {
      "fn": "ERC20.transfer",
      "offset": [
        3822,
        3832
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x41D"
    },
    "1002": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3822,
        3834
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1003": {
      "fn": "ERC20.transfer",
      "offset": [
        3822,
        3834
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1004": {
      "fn": "ERC20.transfer",
      "offset": [
        3836,
        3845
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1005": {
      "fn": "ERC20.transfer",
      "offset": [
        3847,
        3853
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1006": {
      "fn": "ERC20.transfer",
      "offset": [
        3812,
        3821
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4D5"
    },
    "1009": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3812,
        3854
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1010": {
      "fn": "ERC20.allowance",
      "offset": [
        3940,
        4089
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1017": {
      "op": "SHL"
    },
    "1018": {
      "op": "SUB"
    },
    "1019": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4073
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 16
    },
    "1020": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4073
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1021": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4073
      ],
      "op": "AND",
      "path": "6"
    },
    "1022": {
      "fn": "ERC20.allowance",
      "offset": [
        4029,
        4036
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1024": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4073
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1025": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4073
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1026": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4073
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1027": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4066
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1029": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4073
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1031": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4073
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1032": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4073
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1033": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4073
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1034": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4073
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1036": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4073
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1037": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4073
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1038": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4073
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1039": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4082
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1040": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4082
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1041": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4082
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1042": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4082
      ],
      "op": "AND",
      "path": "6"
    },
    "1043": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4082
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1044": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4082
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1045": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4082
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1046": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4082
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1047": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4082
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1048": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4082
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1049": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4082
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1050": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4082
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1051": {
      "fn": "ERC20.allowance",
      "offset": [
        4055,
        4082
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1052": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        3940,
        4089
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1053": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1054": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 17
    },
    "1055": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1056": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1057": {
      "fn": "ERC20._approve",
      "offset": [
        10008,
        10378
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1064": {
      "op": "SHL"
    },
    "1065": {
      "op": "SUB"
    },
    "1066": {
      "fn": "ERC20._approve",
      "offset": [
        10139,
        10158
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 18
    },
    "1067": {
      "branch": 32,
      "fn": "ERC20._approve",
      "offset": [
        10139,
        10158
      ],
      "op": "AND",
      "path": "6"
    },
    "1068": {
      "fn": "ERC20._approve",
      "offset": [
        10131,
        10199
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x447"
    },
    "1071": {
      "branch": 32,
      "fn": "ERC20._approve",
      "offset": [
        10131,
        10199
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1072": {
      "fn": "ERC20._approve",
      "offset": [
        10131,
        10199
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1074": {
      "fn": "ERC20._approve",
      "offset": [
        10131,
        10199
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1075": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1081": {
      "op": "SHL"
    },
    "1082": {
      "fn": "ERC20._approve",
      "offset": [
        10131,
        10199
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1083": {
      "fn": "ERC20._approve",
      "offset": [
        10131,
        10199
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1084": {
      "fn": "ERC20._approve",
      "offset": [
        10131,
        10199
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1086": {
      "fn": "ERC20._approve",
      "offset": [
        10131,
        10199
      ],
      "op": "ADD",
      "path": "6"
    },
    "1087": {
      "fn": "ERC20._approve",
      "offset": [
        10131,
        10199
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B6"
    },
    "1090": {
      "fn": "ERC20._approve",
      "offset": [
        10131,
        10199
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1091": {
      "fn": "ERC20._approve",
      "offset": [
        10131,
        10199
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x888"
    },
    "1094": {
      "fn": "ERC20._approve",
      "jump": "i",
      "offset": [
        10131,
        10199
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1095": {
      "fn": "ERC20._approve",
      "offset": [
        10131,
        10199
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1102": {
      "op": "SHL"
    },
    "1103": {
      "op": "SUB"
    },
    "1104": {
      "fn": "ERC20._approve",
      "offset": [
        10217,
        10238
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 19
    },
    "1105": {
      "branch": 33,
      "fn": "ERC20._approve",
      "offset": [
        10217,
        10238
      ],
      "op": "AND",
      "path": "6"
    },
    "1106": {
      "fn": "ERC20._approve",
      "offset": [
        10209,
        10277
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x46D"
    },
    "1109": {
      "branch": 33,
      "fn": "ERC20._approve",
      "offset": [
        10209,
        10277
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1110": {
      "fn": "ERC20._approve",
      "offset": [
        10209,
        10277
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1112": {
      "fn": "ERC20._approve",
      "offset": [
        10209,
        10277
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1113": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1119": {
      "op": "SHL"
    },
    "1120": {
      "fn": "ERC20._approve",
      "offset": [
        10209,
        10277
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1121": {
      "fn": "ERC20._approve",
      "offset": [
        10209,
        10277
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1122": {
      "fn": "ERC20._approve",
      "offset": [
        10209,
        10277
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1124": {
      "fn": "ERC20._approve",
      "offset": [
        10209,
        10277
      ],
      "op": "ADD",
      "path": "6"
    },
    "1125": {
      "fn": "ERC20._approve",
      "offset": [
        10209,
        10277
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B6"
    },
    "1128": {
      "fn": "ERC20._approve",
      "offset": [
        10209,
        10277
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1129": {
      "fn": "ERC20._approve",
      "offset": [
        10209,
        10277
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x773"
    },
    "1132": {
      "fn": "ERC20._approve",
      "jump": "i",
      "offset": [
        10209,
        10277
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1133": {
      "fn": "ERC20._approve",
      "offset": [
        10209,
        10277
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1140": {
      "op": "SHL"
    },
    "1141": {
      "op": "SUB"
    },
    "1142": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10306
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 20
    },
    "1143": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10306
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1144": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10306
      ],
      "op": "AND",
      "path": "6"
    },
    "1145": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10306
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1147": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10306
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1148": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10306
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1149": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10306
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1150": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10299
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1152": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10306
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1154": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10306
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1155": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10306
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1156": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10306
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1157": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10306
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1159": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10306
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1160": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10306
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1161": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10306
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1162": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10315
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1163": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10315
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1164": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10315
      ],
      "op": "AND",
      "path": "6"
    },
    "1165": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10315
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1166": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10315
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1167": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10315
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1168": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10315
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1169": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10315
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1170": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10315
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1171": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10315
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1172": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10315
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1173": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10315
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1174": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10315
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1175": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10315
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1176": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10324
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1177": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1178": {
      "fn": "ERC20._approve",
      "offset": [
        10288,
        10324
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1179": {
      "fn": "ERC20._approve",
      "offset": [
        10339,
        10371
      ],
      "op": "MLOAD",
      "path": "6",
      "statement": 21
    },
    "1180": {
      "fn": "ERC20._approve",
      "offset": [
        10339,
        10371
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1213": {
      "fn": "ERC20._approve",
      "offset": [
        10339,
        10371
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1214": {
      "fn": "ERC20._approve",
      "offset": [
        10339,
        10371
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4C8"
    },
    "1217": {
      "fn": "ERC20._approve",
      "offset": [
        10339,
        10371
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1218": {
      "fn": "ERC20._approve",
      "offset": [
        10318,
        10324
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1219": {
      "fn": "ERC20._approve",
      "offset": [
        10318,
        10324
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1220": {
      "fn": "ERC20._approve",
      "offset": [
        10339,
        10371
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x911"
    },
    "1223": {
      "fn": "ERC20._approve",
      "jump": "i",
      "offset": [
        10339,
        10371
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1224": {
      "fn": "ERC20._approve",
      "offset": [
        10339,
        10371
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1225": {
      "fn": "ERC20._approve",
      "offset": [
        10339,
        10371
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1227": {
      "fn": "ERC20._approve",
      "offset": [
        10339,
        10371
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1228": {
      "fn": "ERC20._approve",
      "offset": [
        10339,
        10371
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1229": {
      "fn": "ERC20._approve",
      "offset": [
        10339,
        10371
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1230": {
      "fn": "ERC20._approve",
      "offset": [
        10339,
        10371
      ],
      "op": "SUB",
      "path": "6"
    },
    "1231": {
      "fn": "ERC20._approve",
      "offset": [
        10339,
        10371
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1232": {
      "fn": "ERC20._approve",
      "offset": [
        10339,
        10371
      ],
      "op": "LOG3",
      "path": "6"
    },
    "1233": {
      "fn": "ERC20._approve",
      "offset": [
        10008,
        10378
      ],
      "op": "POP",
      "path": "6"
    },
    "1234": {
      "fn": "ERC20._approve",
      "offset": [
        10008,
        10378
      ],
      "op": "POP",
      "path": "6"
    },
    "1235": {
      "fn": "ERC20._approve",
      "offset": [
        10008,
        10378
      ],
      "op": "POP",
      "path": "6"
    },
    "1236": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10008,
        10378
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1237": {
      "fn": "ERC20._transfer",
      "offset": [
        7311,
        8024
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1244": {
      "op": "SHL"
    },
    "1245": {
      "op": "SUB"
    },
    "1246": {
      "fn": "ERC20._transfer",
      "offset": [
        7446,
        7466
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 22
    },
    "1247": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7446,
        7466
      ],
      "op": "AND",
      "path": "6"
    },
    "1248": {
      "fn": "ERC20._transfer",
      "offset": [
        7438,
        7508
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4FB"
    },
    "1251": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7438,
        7508
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1252": {
      "fn": "ERC20._transfer",
      "offset": [
        7438,
        7508
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1254": {
      "fn": "ERC20._transfer",
      "offset": [
        7438,
        7508
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1255": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1261": {
      "op": "SHL"
    },
    "1262": {
      "fn": "ERC20._transfer",
      "offset": [
        7438,
        7508
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1263": {
      "fn": "ERC20._transfer",
      "offset": [
        7438,
        7508
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1264": {
      "fn": "ERC20._transfer",
      "offset": [
        7438,
        7508
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1266": {
      "fn": "ERC20._transfer",
      "offset": [
        7438,
        7508
      ],
      "op": "ADD",
      "path": "6"
    },
    "1267": {
      "fn": "ERC20._transfer",
      "offset": [
        7438,
        7508
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B6"
    },
    "1270": {
      "fn": "ERC20._transfer",
      "offset": [
        7438,
        7508
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1271": {
      "fn": "ERC20._transfer",
      "offset": [
        7438,
        7508
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x843"
    },
    "1274": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7438,
        7508
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1275": {
      "fn": "ERC20._transfer",
      "offset": [
        7438,
        7508
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1282": {
      "op": "SHL"
    },
    "1283": {
      "op": "SUB"
    },
    "1284": {
      "fn": "ERC20._transfer",
      "offset": [
        7526,
        7549
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 23
    },
    "1285": {
      "branch": 35,
      "fn": "ERC20._transfer",
      "offset": [
        7526,
        7549
      ],
      "op": "AND",
      "path": "6"
    },
    "1286": {
      "fn": "ERC20._transfer",
      "offset": [
        7518,
        7589
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x521"
    },
    "1289": {
      "branch": 35,
      "fn": "ERC20._transfer",
      "offset": [
        7518,
        7589
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1290": {
      "fn": "ERC20._transfer",
      "offset": [
        7518,
        7589
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1292": {
      "fn": "ERC20._transfer",
      "offset": [
        7518,
        7589
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1293": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1299": {
      "op": "SHL"
    },
    "1300": {
      "fn": "ERC20._transfer",
      "offset": [
        7518,
        7589
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1301": {
      "fn": "ERC20._transfer",
      "offset": [
        7518,
        7589
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1302": {
      "fn": "ERC20._transfer",
      "offset": [
        7518,
        7589
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1304": {
      "fn": "ERC20._transfer",
      "offset": [
        7518,
        7589
      ],
      "op": "ADD",
      "path": "6"
    },
    "1305": {
      "fn": "ERC20._transfer",
      "offset": [
        7518,
        7589
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B6"
    },
    "1308": {
      "fn": "ERC20._transfer",
      "offset": [
        7518,
        7589
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1309": {
      "fn": "ERC20._transfer",
      "offset": [
        7518,
        7589
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x730"
    },
    "1312": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7518,
        7589
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1313": {
      "fn": "ERC20._transfer",
      "offset": [
        7518,
        7589
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1314": {
      "fn": "ERC20._transfer",
      "offset": [
        7600,
        7647
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 24,
      "value": "0x52C"
    },
    "1317": {
      "fn": "ERC20._transfer",
      "offset": [
        7621,
        7627
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1318": {
      "fn": "ERC20._transfer",
      "offset": [
        7629,
        7638
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1319": {
      "fn": "ERC20._transfer",
      "offset": [
        7640,
        7646
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1320": {
      "fn": "ERC20._transfer",
      "offset": [
        7600,
        7620
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5FF"
    },
    "1323": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7600,
        7647
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1324": {
      "fn": "ERC20._transfer",
      "offset": [
        7600,
        7647
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1331": {
      "op": "SHL"
    },
    "1332": {
      "op": "SUB"
    },
    "1333": {
      "fn": "ERC20._transfer",
      "offset": [
        7682,
        7699
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1334": {
      "fn": "ERC20._transfer",
      "offset": [
        7682,
        7699
      ],
      "op": "AND",
      "path": "6"
    },
    "1335": {
      "fn": "ERC20._transfer",
      "offset": [
        7658,
        7679
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1337": {
      "fn": "ERC20._transfer",
      "offset": [
        7682,
        7699
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1338": {
      "fn": "ERC20._transfer",
      "offset": [
        7682,
        7699
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1339": {
      "fn": "ERC20._transfer",
      "offset": [
        7682,
        7699
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1340": {
      "fn": "ERC20._transfer",
      "offset": [
        7682,
        7699
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1342": {
      "fn": "ERC20._transfer",
      "offset": [
        7682,
        7699
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1343": {
      "fn": "ERC20._transfer",
      "offset": [
        7682,
        7699
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1344": {
      "fn": "ERC20._transfer",
      "offset": [
        7682,
        7699
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1345": {
      "fn": "ERC20._transfer",
      "offset": [
        7682,
        7699
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1347": {
      "fn": "ERC20._transfer",
      "offset": [
        7682,
        7699
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1348": {
      "fn": "ERC20._transfer",
      "offset": [
        7682,
        7699
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1349": {
      "fn": "ERC20._transfer",
      "offset": [
        7682,
        7699
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1350": {
      "fn": "ERC20._transfer",
      "offset": [
        7717,
        7740
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 25
    },
    "1351": {
      "fn": "ERC20._transfer",
      "offset": [
        7717,
        7740
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1352": {
      "fn": "ERC20._transfer",
      "offset": [
        7717,
        7740
      ],
      "op": "LT",
      "path": "6"
    },
    "1353": {
      "branch": 36,
      "fn": "ERC20._transfer",
      "offset": [
        7717,
        7740
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1354": {
      "fn": "ERC20._transfer",
      "offset": [
        7709,
        7783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x565"
    },
    "1357": {
      "branch": 36,
      "fn": "ERC20._transfer",
      "offset": [
        7709,
        7783
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1358": {
      "fn": "ERC20._transfer",
      "offset": [
        7709,
        7783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1360": {
      "fn": "ERC20._transfer",
      "offset": [
        7709,
        7783
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1361": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1367": {
      "op": "SHL"
    },
    "1368": {
      "fn": "ERC20._transfer",
      "offset": [
        7709,
        7783
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1369": {
      "fn": "ERC20._transfer",
      "offset": [
        7709,
        7783
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1370": {
      "fn": "ERC20._transfer",
      "offset": [
        7709,
        7783
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1372": {
      "fn": "ERC20._transfer",
      "offset": [
        7709,
        7783
      ],
      "op": "ADD",
      "path": "6"
    },
    "1373": {
      "fn": "ERC20._transfer",
      "offset": [
        7709,
        7783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B6"
    },
    "1376": {
      "fn": "ERC20._transfer",
      "offset": [
        7709,
        7783
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1377": {
      "fn": "ERC20._transfer",
      "offset": [
        7709,
        7783
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7B5"
    },
    "1380": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7709,
        7783
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1381": {
      "fn": "ERC20._transfer",
      "offset": [
        7709,
        7783
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1388": {
      "op": "SHL"
    },
    "1389": {
      "op": "SUB"
    },
    "1390": {
      "fn": "ERC20._transfer",
      "offset": [
        7817,
        7834
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 26
    },
    "1391": {
      "fn": "ERC20._transfer",
      "offset": [
        7817,
        7834
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1392": {
      "fn": "ERC20._transfer",
      "offset": [
        7817,
        7834
      ],
      "op": "AND",
      "path": "6"
    },
    "1393": {
      "fn": "ERC20._transfer",
      "offset": [
        7817,
        7826
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1395": {
      "fn": "ERC20._transfer",
      "offset": [
        7817,
        7834
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1396": {
      "fn": "ERC20._transfer",
      "offset": [
        7817,
        7834
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1397": {
      "fn": "ERC20._transfer",
      "offset": [
        7817,
        7834
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1398": {
      "fn": "ERC20._transfer",
      "offset": [
        7817,
        7834
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1400": {
      "fn": "ERC20._transfer",
      "offset": [
        7817,
        7834
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1401": {
      "fn": "ERC20._transfer",
      "offset": [
        7817,
        7834
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1402": {
      "fn": "ERC20._transfer",
      "offset": [
        7817,
        7834
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1403": {
      "fn": "ERC20._transfer",
      "offset": [
        7817,
        7834
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1405": {
      "fn": "ERC20._transfer",
      "offset": [
        7817,
        7834
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1406": {
      "fn": "ERC20._transfer",
      "offset": [
        7817,
        7834
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1407": {
      "fn": "ERC20._transfer",
      "offset": [
        7817,
        7834
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1408": {
      "fn": "ERC20._transfer",
      "offset": [
        7837,
        7859
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1409": {
      "fn": "ERC20._transfer",
      "offset": [
        7837,
        7859
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1410": {
      "fn": "ERC20._transfer",
      "offset": [
        7837,
        7859
      ],
      "op": "SUB",
      "path": "6"
    },
    "1411": {
      "fn": "ERC20._transfer",
      "offset": [
        7817,
        7859
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1412": {
      "fn": "ERC20._transfer",
      "offset": [
        7817,
        7859
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1413": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7899
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 27
    },
    "1414": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7899
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1415": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7899
      ],
      "op": "AND",
      "path": "6"
    },
    "1416": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7899
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1417": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7899
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1418": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1419": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7899
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1420": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7899
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1421": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7909
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1422": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7909
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1423": {
      "fn": "ERC20._transfer",
      "offset": [
        7853,
        7859
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1424": {
      "fn": "ERC20._transfer",
      "offset": [
        7853,
        7859
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1425": {
      "fn": "ERC20._transfer",
      "offset": [
        7817,
        7826
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1426": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7909
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x59C"
    },
    "1429": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7909
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1430": {
      "fn": "ERC20._transfer",
      "offset": [
        7853,
        7859
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1431": {
      "fn": "ERC20._transfer",
      "offset": [
        7853,
        7859
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1432": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7909
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x928"
    },
    "1435": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7879,
        7909
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1436": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7909
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1437": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7909
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1438": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7909
      ],
      "op": "POP",
      "path": "6"
    },
    "1439": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7909
      ],
      "op": "POP",
      "path": "6"
    },
    "1440": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7909
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1441": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7909
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1442": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7909
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1443": {
      "fn": "ERC20._transfer",
      "offset": [
        7879,
        7909
      ],
      "op": "POP",
      "path": "6"
    },
    "1444": {
      "fn": "ERC20._transfer",
      "offset": [
        7942,
        7951
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 28
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1451": {
      "op": "SHL"
    },
    "1452": {
      "op": "SUB"
    },
    "1453": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7960
      ],
      "op": "AND",
      "path": "6"
    },
    "1454": {
      "fn": "ERC20._transfer",
      "offset": [
        7934,
        7940
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1461": {
      "op": "SHL"
    },
    "1462": {
      "op": "SUB"
    },
    "1463": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7960
      ],
      "op": "AND",
      "path": "6"
    },
    "1464": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7960
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1497": {
      "fn": "ERC20._transfer",
      "offset": [
        7953,
        7959
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1498": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7960
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1500": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7960
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1501": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7960
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5E6"
    },
    "1504": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7960
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1505": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7960
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1506": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7960
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x911"
    },
    "1509": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7925,
        7960
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1510": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7960
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1511": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7960
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1513": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7960
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1514": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7960
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1515": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7960
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1516": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7960
      ],
      "op": "SUB",
      "path": "6"
    },
    "1517": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7960
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1518": {
      "fn": "ERC20._transfer",
      "offset": [
        7925,
        7960
      ],
      "op": "LOG3",
      "path": "6"
    },
    "1519": {
      "fn": "ERC20._transfer",
      "offset": [
        7971,
        8017
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 29,
      "value": "0x5F9"
    },
    "1522": {
      "fn": "ERC20._transfer",
      "offset": [
        7991,
        7997
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1523": {
      "fn": "ERC20._transfer",
      "offset": [
        7999,
        8008
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1524": {
      "fn": "ERC20._transfer",
      "offset": [
        8010,
        8016
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1525": {
      "fn": "ERC20._transfer",
      "offset": [
        7971,
        7990
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5FF"
    },
    "1528": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7971,
        8017
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1529": {
      "fn": "ERC20._transfer",
      "offset": [
        7971,
        8017
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1530": {
      "fn": "ERC20._transfer",
      "offset": [
        7311,
        8024
      ],
      "op": "POP",
      "path": "6"
    },
    "1531": {
      "fn": "ERC20._transfer",
      "offset": [
        7311,
        8024
      ],
      "op": "POP",
      "path": "6"
    },
    "1532": {
      "fn": "ERC20._transfer",
      "offset": [
        7311,
        8024
      ],
      "op": "POP",
      "path": "6"
    },
    "1533": {
      "fn": "ERC20._transfer",
      "offset": [
        7311,
        8024
      ],
      "op": "POP",
      "path": "6"
    },
    "1534": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7311,
        8024
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1535": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        10962,
        11083
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1536": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        10962,
        11083
      ],
      "op": "POP",
      "path": "6"
    },
    "1537": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        10962,
        11083
      ],
      "op": "POP",
      "path": "6"
    },
    "1538": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        10962,
        11083
      ],
      "op": "POP",
      "path": "6"
    },
    "1539": {
      "fn": "ERC20._beforeTokenTransfer",
      "jump": "o",
      "offset": [
        10962,
        11083
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1540": {
      "op": "JUMPDEST"
    },
    "1541": {
      "op": "DUP1"
    },
    "1542": {
      "op": "CALLDATALOAD"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1549": {
      "op": "SHL"
    },
    "1550": {
      "op": "SUB"
    },
    "1551": {
      "op": "DUP2"
    },
    "1552": {
      "op": "AND"
    },
    "1553": {
      "op": "DUP2"
    },
    "1554": {
      "op": "EQ"
    },
    "1555": {
      "op": "PUSH2",
      "value": "0x351"
    },
    "1558": {
      "op": "JUMPI"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1561": {
      "op": "DUP1"
    },
    "1562": {
      "op": "REVERT"
    },
    "1563": {
      "op": "JUMPDEST"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1568": {
      "op": "DUP3"
    },
    "1569": {
      "op": "DUP5"
    },
    "1570": {
      "op": "SUB"
    },
    "1571": {
      "op": "SLT"
    },
    "1572": {
      "op": "ISZERO"
    },
    "1573": {
      "op": "PUSH2",
      "value": "0x62C"
    },
    "1576": {
      "op": "JUMPI"
    },
    "1577": {
      "op": "DUP1"
    },
    "1578": {
      "op": "DUP2"
    },
    "1579": {
      "op": "REVERT"
    },
    "1580": {
      "op": "JUMPDEST"
    },
    "1581": {
      "op": "PUSH2",
      "value": "0x635"
    },
    "1584": {
      "op": "DUP3"
    },
    "1585": {
      "op": "PUSH2",
      "value": "0x604"
    },
    "1588": {
      "jump": "i",
      "op": "JUMP"
    },
    "1589": {
      "op": "JUMPDEST"
    },
    "1590": {
      "op": "SWAP4"
    },
    "1591": {
      "op": "SWAP3"
    },
    "1592": {
      "op": "POP"
    },
    "1593": {
      "op": "POP"
    },
    "1594": {
      "op": "POP"
    },
    "1595": {
      "jump": "o",
      "op": "JUMP"
    },
    "1596": {
      "op": "JUMPDEST"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1599": {
      "op": "DUP1"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1602": {
      "op": "DUP4"
    },
    "1603": {
      "op": "DUP6"
    },
    "1604": {
      "op": "SUB"
    },
    "1605": {
      "op": "SLT"
    },
    "1606": {
      "op": "ISZERO"
    },
    "1607": {
      "op": "PUSH2",
      "value": "0x64E"
    },
    "1610": {
      "op": "JUMPI"
    },
    "1611": {
      "op": "DUP1"
    },
    "1612": {
      "op": "DUP2"
    },
    "1613": {
      "op": "REVERT"
    },
    "1614": {
      "op": "JUMPDEST"
    },
    "1615": {
      "op": "PUSH2",
      "value": "0x657"
    },
    "1618": {
      "op": "DUP4"
    },
    "1619": {
      "op": "PUSH2",
      "value": "0x604"
    },
    "1622": {
      "jump": "i",
      "op": "JUMP"
    },
    "1623": {
      "op": "JUMPDEST"
    },
    "1624": {
      "op": "SWAP2"
    },
    "1625": {
      "op": "POP"
    },
    "1626": {
      "op": "PUSH2",
      "value": "0x665"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1631": {
      "op": "DUP5"
    },
    "1632": {
      "op": "ADD"
    },
    "1633": {
      "op": "PUSH2",
      "value": "0x604"
    },
    "1636": {
      "jump": "i",
      "op": "JUMP"
    },
    "1637": {
      "op": "JUMPDEST"
    },
    "1638": {
      "op": "SWAP1"
    },
    "1639": {
      "op": "POP"
    },
    "1640": {
      "op": "SWAP3"
    },
    "1641": {
      "op": "POP"
    },
    "1642": {
      "op": "SWAP3"
    },
    "1643": {
      "op": "SWAP1"
    },
    "1644": {
      "op": "POP"
    },
    "1645": {
      "jump": "o",
      "op": "JUMP"
    },
    "1646": {
      "op": "JUMPDEST"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1649": {
      "op": "DUP1"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1654": {
      "op": "DUP5"
    },
    "1655": {
      "op": "DUP7"
    },
    "1656": {
      "op": "SUB"
    },
    "1657": {
      "op": "SLT"
    },
    "1658": {
      "op": "ISZERO"
    },
    "1659": {
      "op": "PUSH2",
      "value": "0x682"
    },
    "1662": {
      "op": "JUMPI"
    },
    "1663": {
      "op": "DUP1"
    },
    "1664": {
      "op": "DUP2"
    },
    "1665": {
      "op": "REVERT"
    },
    "1666": {
      "op": "JUMPDEST"
    },
    "1667": {
      "op": "PUSH2",
      "value": "0x68B"
    },
    "1670": {
      "op": "DUP5"
    },
    "1671": {
      "op": "PUSH2",
      "value": "0x604"
    },
    "1674": {
      "jump": "i",
      "op": "JUMP"
    },
    "1675": {
      "op": "JUMPDEST"
    },
    "1676": {
      "op": "SWAP3"
    },
    "1677": {
      "op": "POP"
    },
    "1678": {
      "op": "PUSH2",
      "value": "0x699"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1683": {
      "op": "DUP6"
    },
    "1684": {
      "op": "ADD"
    },
    "1685": {
      "op": "PUSH2",
      "value": "0x604"
    },
    "1688": {
      "jump": "i",
      "op": "JUMP"
    },
    "1689": {
      "op": "JUMPDEST"
    },
    "1690": {
      "op": "SWAP2"
    },
    "1691": {
      "op": "POP"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1694": {
      "op": "DUP5"
    },
    "1695": {
      "op": "ADD"
    },
    "1696": {
      "op": "CALLDATALOAD"
    },
    "1697": {
      "op": "SWAP1"
    },
    "1698": {
      "op": "POP"
    },
    "1699": {
      "op": "SWAP3"
    },
    "1700": {
      "op": "POP"
    },
    "1701": {
      "op": "SWAP3"
    },
    "1702": {
      "op": "POP"
    },
    "1703": {
      "op": "SWAP3"
    },
    "1704": {
      "jump": "o",
      "op": "JUMP"
    },
    "1705": {
      "op": "JUMPDEST"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1708": {
      "op": "DUP1"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1711": {
      "op": "DUP4"
    },
    "1712": {
      "op": "DUP6"
    },
    "1713": {
      "op": "SUB"
    },
    "1714": {
      "op": "SLT"
    },
    "1715": {
      "op": "ISZERO"
    },
    "1716": {
      "op": "PUSH2",
      "value": "0x6BB"
    },
    "1719": {
      "op": "JUMPI"
    },
    "1720": {
      "op": "DUP2"
    },
    "1721": {
      "op": "DUP3"
    },
    "1722": {
      "op": "REVERT"
    },
    "1723": {
      "op": "JUMPDEST"
    },
    "1724": {
      "op": "PUSH2",
      "value": "0x6C4"
    },
    "1727": {
      "op": "DUP4"
    },
    "1728": {
      "op": "PUSH2",
      "value": "0x604"
    },
    "1731": {
      "jump": "i",
      "op": "JUMP"
    },
    "1732": {
      "op": "JUMPDEST"
    },
    "1733": {
      "op": "SWAP5"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1736": {
      "op": "SWAP4"
    },
    "1737": {
      "op": "SWAP1"
    },
    "1738": {
      "op": "SWAP4"
    },
    "1739": {
      "op": "ADD"
    },
    "1740": {
      "op": "CALLDATALOAD"
    },
    "1741": {
      "op": "SWAP4"
    },
    "1742": {
      "op": "POP"
    },
    "1743": {
      "op": "POP"
    },
    "1744": {
      "op": "POP"
    },
    "1745": {
      "jump": "o",
      "op": "JUMP"
    },
    "1746": {
      "op": "JUMPDEST"
    },
    "1747": {
      "op": "SWAP1"
    },
    "1748": {
      "op": "ISZERO"
    },
    "1749": {
      "op": "ISZERO"
    },
    "1750": {
      "op": "DUP2"
    },
    "1751": {
      "op": "MSTORE"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1754": {
      "op": "ADD"
    },
    "1755": {
      "op": "SWAP1"
    },
    "1756": {
      "jump": "o",
      "op": "JUMP"
    },
    "1757": {
      "op": "JUMPDEST"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1762": {
      "op": "DUP1"
    },
    "1763": {
      "op": "DUP4"
    },
    "1764": {
      "op": "MSTORE"
    },
    "1765": {
      "op": "DUP4"
    },
    "1766": {
      "op": "MLOAD"
    },
    "1767": {
      "op": "DUP1"
    },
    "1768": {
      "op": "DUP3"
    },
    "1769": {
      "op": "DUP6"
    },
    "1770": {
      "op": "ADD"
    },
    "1771": {
      "op": "MSTORE"
    },
    "1772": {
      "op": "DUP3"
    },
    "1773": {
      "op": "JUMPDEST"
    },
    "1774": {
      "op": "DUP2"
    },
    "1775": {
      "op": "DUP2"
    },
    "1776": {
      "op": "LT"
    },
    "1777": {
      "op": "ISZERO"
    },
    "1778": {
      "op": "PUSH2",
      "value": "0x709"
    },
    "1781": {
      "op": "JUMPI"
    },
    "1782": {
      "op": "DUP6"
    },
    "1783": {
      "op": "DUP2"
    },
    "1784": {
      "op": "ADD"
    },
    "1785": {
      "op": "DUP4"
    },
    "1786": {
      "op": "ADD"
    },
    "1787": {
      "op": "MLOAD"
    },
    "1788": {
      "op": "DUP6"
    },
    "1789": {
      "op": "DUP3"
    },
    "1790": {
      "op": "ADD"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1793": {
      "op": "ADD"
    },
    "1794": {
      "op": "MSTORE"
    },
    "1795": {
      "op": "DUP3"
    },
    "1796": {
      "op": "ADD"
    },
    "1797": {
      "op": "PUSH2",
      "value": "0x6ED"
    },
    "1800": {
      "op": "JUMP"
    },
    "1801": {
      "op": "JUMPDEST"
    },
    "1802": {
      "op": "DUP2"
    },
    "1803": {
      "op": "DUP2"
    },
    "1804": {
      "op": "GT"
    },
    "1805": {
      "op": "ISZERO"
    },
    "1806": {
      "op": "PUSH2",
      "value": "0x71A"
    },
    "1809": {
      "op": "JUMPI"
    },
    "1810": {
      "op": "DUP4"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1813": {
      "op": "DUP4"
    },
    "1814": {
      "op": "DUP8"
    },
    "1815": {
      "op": "ADD"
    },
    "1816": {
      "op": "ADD"
    },
    "1817": {
      "op": "MSTORE"
    },
    "1818": {
      "op": "JUMPDEST"
    },
    "1819": {
      "op": "POP"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1822": {
      "op": "ADD"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1825": {
      "op": "NOT"
    },
    "1826": {
      "op": "AND"
    },
    "1827": {
      "op": "SWAP3"
    },
    "1828": {
      "op": "SWAP1"
    },
    "1829": {
      "op": "SWAP3"
    },
    "1830": {
      "op": "ADD"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1833": {
      "op": "ADD"
    },
    "1834": {
      "op": "SWAP4"
    },
    "1835": {
      "op": "SWAP3"
    },
    "1836": {
      "op": "POP"
    },
    "1837": {
      "op": "POP"
    },
    "1838": {
      "op": "POP"
    },
    "1839": {
      "jump": "o",
      "op": "JUMP"
    },
    "1840": {
      "op": "JUMPDEST"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1843": {
      "op": "DUP1"
    },
    "1844": {
      "op": "DUP3"
    },
    "1845": {
      "op": "MSTORE"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1848": {
      "op": "SWAP1"
    },
    "1849": {
      "op": "DUP3"
    },
    "1850": {
      "op": "ADD"
    },
    "1851": {
      "op": "MSTORE"
    },
    "1852": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1887": {
      "op": "DUP3"
    },
    "1888": {
      "op": "ADD"
    },
    "1889": {
      "op": "MSTORE"
    },
    "1890": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1896": {
      "op": "SHL"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1899": {
      "op": "DUP3"
    },
    "1900": {
      "op": "ADD"
    },
    "1901": {
      "op": "MSTORE"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1904": {
      "op": "ADD"
    },
    "1905": {
      "op": "SWAP1"
    },
    "1906": {
      "jump": "o",
      "op": "JUMP"
    },
    "1907": {
      "op": "JUMPDEST"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1910": {
      "op": "DUP1"
    },
    "1911": {
      "op": "DUP3"
    },
    "1912": {
      "op": "MSTORE"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1915": {
      "op": "SWAP1"
    },
    "1916": {
      "op": "DUP3"
    },
    "1917": {
      "op": "ADD"
    },
    "1918": {
      "op": "MSTORE"
    },
    "1919": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1954": {
      "op": "DUP3"
    },
    "1955": {
      "op": "ADD"
    },
    "1956": {
      "op": "MSTORE"
    },
    "1957": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1962": {
      "op": "SHL"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1965": {
      "op": "DUP3"
    },
    "1966": {
      "op": "ADD"
    },
    "1967": {
      "op": "MSTORE"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1970": {
      "op": "ADD"
    },
    "1971": {
      "op": "SWAP1"
    },
    "1972": {
      "jump": "o",
      "op": "JUMP"
    },
    "1973": {
      "op": "JUMPDEST"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1976": {
      "op": "DUP1"
    },
    "1977": {
      "op": "DUP3"
    },
    "1978": {
      "op": "MSTORE"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1981": {
      "op": "SWAP1"
    },
    "1982": {
      "op": "DUP3"
    },
    "1983": {
      "op": "ADD"
    },
    "1984": {
      "op": "MSTORE"
    },
    "1985": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2020": {
      "op": "DUP3"
    },
    "2021": {
      "op": "ADD"
    },
    "2022": {
      "op": "MSTORE"
    },
    "2023": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2032": {
      "op": "SHL"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2035": {
      "op": "DUP3"
    },
    "2036": {
      "op": "ADD"
    },
    "2037": {
      "op": "MSTORE"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2040": {
      "op": "ADD"
    },
    "2041": {
      "op": "SWAP1"
    },
    "2042": {
      "jump": "o",
      "op": "JUMP"
    },
    "2043": {
      "op": "JUMPDEST"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2046": {
      "op": "DUP1"
    },
    "2047": {
      "op": "DUP3"
    },
    "2048": {
      "op": "MSTORE"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "2051": {
      "op": "SWAP1"
    },
    "2052": {
      "op": "DUP3"
    },
    "2053": {
      "op": "ADD"
    },
    "2054": {
      "op": "MSTORE"
    },
    "2055": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2090": {
      "op": "DUP3"
    },
    "2091": {
      "op": "ADD"
    },
    "2092": {
      "op": "MSTORE"
    },
    "2093": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2104": {
      "op": "SHL"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2107": {
      "op": "DUP3"
    },
    "2108": {
      "op": "ADD"
    },
    "2109": {
      "op": "MSTORE"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2112": {
      "op": "ADD"
    },
    "2113": {
      "op": "SWAP1"
    },
    "2114": {
      "jump": "o",
      "op": "JUMP"
    },
    "2115": {
      "op": "JUMPDEST"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2118": {
      "op": "DUP1"
    },
    "2119": {
      "op": "DUP3"
    },
    "2120": {
      "op": "MSTORE"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2123": {
      "op": "SWAP1"
    },
    "2124": {
      "op": "DUP3"
    },
    "2125": {
      "op": "ADD"
    },
    "2126": {
      "op": "MSTORE"
    },
    "2127": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2162": {
      "op": "DUP3"
    },
    "2163": {
      "op": "ADD"
    },
    "2164": {
      "op": "MSTORE"
    },
    "2165": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2173": {
      "op": "SHL"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2176": {
      "op": "DUP3"
    },
    "2177": {
      "op": "ADD"
    },
    "2178": {
      "op": "MSTORE"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2181": {
      "op": "ADD"
    },
    "2182": {
      "op": "SWAP1"
    },
    "2183": {
      "jump": "o",
      "op": "JUMP"
    },
    "2184": {
      "op": "JUMPDEST"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2187": {
      "op": "DUP1"
    },
    "2188": {
      "op": "DUP3"
    },
    "2189": {
      "op": "MSTORE"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2192": {
      "op": "SWAP1"
    },
    "2193": {
      "op": "DUP3"
    },
    "2194": {
      "op": "ADD"
    },
    "2195": {
      "op": "MSTORE"
    },
    "2196": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2231": {
      "op": "DUP3"
    },
    "2232": {
      "op": "ADD"
    },
    "2233": {
      "op": "MSTORE"
    },
    "2234": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2241": {
      "op": "SHL"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2244": {
      "op": "DUP3"
    },
    "2245": {
      "op": "ADD"
    },
    "2246": {
      "op": "MSTORE"
    },
    "2247": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2249": {
      "op": "ADD"
    },
    "2250": {
      "op": "SWAP1"
    },
    "2251": {
      "jump": "o",
      "op": "JUMP"
    },
    "2252": {
      "op": "JUMPDEST"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2255": {
      "op": "DUP1"
    },
    "2256": {
      "op": "DUP3"
    },
    "2257": {
      "op": "MSTORE"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2260": {
      "op": "SWAP1"
    },
    "2261": {
      "op": "DUP3"
    },
    "2262": {
      "op": "ADD"
    },
    "2263": {
      "op": "MSTORE"
    },
    "2264": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2299": {
      "op": "DUP3"
    },
    "2300": {
      "op": "ADD"
    },
    "2301": {
      "op": "MSTORE"
    },
    "2302": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2310": {
      "op": "SHL"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2313": {
      "op": "DUP3"
    },
    "2314": {
      "op": "ADD"
    },
    "2315": {
      "op": "MSTORE"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2318": {
      "op": "ADD"
    },
    "2319": {
      "op": "SWAP1"
    },
    "2320": {
      "jump": "o",
      "op": "JUMP"
    },
    "2321": {
      "op": "JUMPDEST"
    },
    "2322": {
      "op": "SWAP1"
    },
    "2323": {
      "op": "DUP2"
    },
    "2324": {
      "op": "MSTORE"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2327": {
      "op": "ADD"
    },
    "2328": {
      "op": "SWAP1"
    },
    "2329": {
      "jump": "o",
      "op": "JUMP"
    },
    "2330": {
      "op": "JUMPDEST"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2333": {
      "op": "SWAP2"
    },
    "2334": {
      "op": "SWAP1"
    },
    "2335": {
      "op": "SWAP2"
    },
    "2336": {
      "op": "AND"
    },
    "2337": {
      "op": "DUP2"
    },
    "2338": {
      "op": "MSTORE"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2341": {
      "op": "ADD"
    },
    "2342": {
      "op": "SWAP1"
    },
    "2343": {
      "jump": "o",
      "op": "JUMP"
    },
    "2344": {
      "op": "JUMPDEST"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2347": {
      "op": "DUP3"
    },
    "2348": {
      "op": "NOT"
    },
    "2349": {
      "op": "DUP3"
    },
    "2350": {
      "op": "GT"
    },
    "2351": {
      "op": "ISZERO"
    },
    "2352": {
      "op": "PUSH2",
      "value": "0x947"
    },
    "2355": {
      "op": "JUMPI"
    },
    "2356": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2363": {
      "op": "SHL"
    },
    "2364": {
      "op": "DUP2"
    },
    "2365": {
      "op": "MSTORE"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2370": {
      "op": "MSTORE"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2373": {
      "op": "DUP2"
    },
    "2374": {
      "op": "REVERT"
    },
    "2375": {
      "op": "JUMPDEST"
    },
    "2376": {
      "op": "POP"
    },
    "2377": {
      "op": "ADD"
    },
    "2378": {
      "op": "SWAP1"
    },
    "2379": {
      "jump": "o",
      "op": "JUMP"
    },
    "2380": {
      "op": "JUMPDEST"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2383": {
      "op": "DUP2"
    },
    "2384": {
      "op": "DIV"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2387": {
      "op": "DUP3"
    },
    "2388": {
      "op": "AND"
    },
    "2389": {
      "op": "DUP1"
    },
    "2390": {
      "op": "PUSH2",
      "value": "0x960"
    },
    "2393": {
      "op": "JUMPI"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2396": {
      "op": "DUP3"
    },
    "2397": {
      "op": "AND"
    },
    "2398": {
      "op": "SWAP2"
    },
    "2399": {
      "op": "POP"
    },
    "2400": {
      "op": "JUMPDEST"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2403": {
      "op": "DUP3"
    },
    "2404": {
      "op": "LT"
    },
    "2405": {
      "op": "DUP2"
    },
    "2406": {
      "op": "EQ"
    },
    "2407": {
      "op": "ISZERO"
    },
    "2408": {
      "op": "PUSH2",
      "value": "0x981"
    },
    "2411": {
      "op": "JUMPI"
    },
    "2412": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2419": {
      "op": "SHL"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2422": {
      "op": "MSTORE"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2427": {
      "op": "MSTORE"
    },
    "2428": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2432": {
      "op": "REVERT"
    },
    "2433": {
      "op": "JUMPDEST"
    },
    "2434": {
      "op": "POP"
    },
    "2435": {
      "op": "SWAP2"
    },
    "2436": {
      "op": "SWAP1"
    },
    "2437": {
      "op": "POP"
    },
    "2438": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "2d8a6ced9c2285bace8140cdfcc3dd2468505b7d",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n",
  "sourceMap": "1377:10416:6:-:0;;;1952:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2018:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2041:17:6;;;;:7;;:17;;;;;:::i;:::-;;1952:113;;1377:10416;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1377:10416:6;;;-1:-1:-1;1377:10416:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:881:19;;123:3;116:4;108:6;104:17;100:27;90:2;;145:5;138;131:20;90:2;172:13;;-1:-1:-1;;;;;234:10:19;;;231:2;;;247:18;;:::i;:::-;296:2;290:9;318:4;388:2;369:13;;-1:-1:-1;;365:27:19;353:40;;349:49;;413:18;;;433:22;;;410:46;407:2;;;459:18;;:::i;:::-;495:2;488:22;519:18;;;556:15;;;552:24;;549:33;-1:-1:-1;546:2:19;;;599:5;592;585:20;546:2;625:5;616:14;;639:133;653:2;650:1;647:9;639:133;;;741:14;;;737:23;;731:30;710:14;;;706:23;;699:63;664:10;;;;639:133;;;790:2;787:1;784:9;781:2;;;849:5;844:2;839;831:6;827:15;823:24;816:39;781:2;-1:-1:-1;883:6:19;80:815;-1:-1:-1;;;;;80:815:19:o;900:596::-;;;1060:2;1048:9;1039:7;1035:23;1031:32;1028:2;;;1081:6;1073;1066:22;1028:2;1113:16;;-1:-1:-1;;;;;1178:14:19;;;1175:2;;;1210:6;1202;1195:22;1175:2;1238:63;1293:7;1284:6;1273:9;1269:22;1238:63;:::i;:::-;1228:73;;1347:2;1336:9;1332:18;1326:25;1310:41;;1376:2;1366:8;1363:16;1360:2;;;1397:6;1389;1382:22;1360:2;;1425:65;1482:7;1471:8;1460:9;1456:24;1425:65;:::i;:::-;1415:75;;;1018:478;;;;;:::o;1501:380::-;1586:1;1576:12;;1633:1;1623:12;;;1644:2;;1698:4;1690:6;1686:17;1676:27;;1644:2;1751;1743:6;1740:14;1720:18;1717:38;1714:2;;;1797:10;1792:3;1788:20;1785:1;1778:31;1832:4;1829:1;1822:15;1860:4;1857:1;1850:15;1714:2;;1556:325;;;:::o;1886:127::-;1947:10;1942:3;1938:20;1935:1;1928:31;1978:4;1975:1;1968:15;2002:4;1999:1;1992:15;1918:95;1377:10416:6;;;;;;",
  "sourcePath": "contracts/token/erc20/ERC20.sol",
  "type": "contract"
}